<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jongmin&#39;s Blog</title>
  <icon>https://www.gravatar.com/avatar/b47cc7a7502c34344cff139c35f843bd</icon>
  <subtitle>Survivor of digital era, SW engineer, evangelist, husband and father</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kimjmin.net/"/>
  <updated>2018-04-04T05:18:45.116Z</updated>
  <id>http://kimjmin.net/</id>
  
  <author>
    <name>Jongmin Kim (김종민)</name>
    <email>kimjmin@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Swiftype 사이트 서치</title>
    <link href="http://kimjmin.net/2018/04/2018-04-swiftype-site-search/"/>
    <id>http://kimjmin.net/2018/04/2018-04-swiftype-site-search/</id>
    <published>2018-04-03T15:00:00.000Z</published>
    <updated>2018-04-04T05:18:45.116Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Swiftype"><a href="#Swiftype" class="headerlink" title="Swiftype"></a>Swiftype</h2><p>작년 2017년 11월 경 Elastic은 사이트 서치, 엔터프라이즈 서치 기업인 <a href="https://swiftype.com" target="_blank" rel="noopener">Swiftype</a>을 인수했습니다. (관련 블로그:<a href="https://www.elastic.co/blog/swiftype-joins-forces-with-elastic" target="_blank" rel="noopener">https://www.elastic.co/blog/swiftype-joins-forces-with-elastic</a>)<br>저도 처음 소식을 들었을 때는 우리도 스타트업인데 회사가 또 뭘 이렇게 인수하나 싶었는데, 실제로 Swiftype 기능을 한번 보고 나서는 이거 정말 괜찮은 물건이구나 싶었습니다.</p><p>swiftype 기능 소개는 아래 영상에서 확인할 수 있습니다.</p><iframe width="560" height="315" src="https://www.youtube.com/embed/fmLZzpds0hI" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe><p>이것도 좀 다뤄봐야 하는데 계속 다른 작업에 밀려서 못 하고 있다가 오늘 삘 받아서 한번 사용을 해 봤습니다.<br>눈썰미 좋은 분들은 제 블로그 첫 페이지에 검색 기능이 생긴 것을 눈치 치셨을텐데요, 이번 포스트에서는 개인 블로그에 Swiftype 적용 한 내용을 다루도록 하겠습니다.<br><img src="001.png" alt=""></p><h2 id="서비스-가입-및-데이터-수집"><a href="#서비스-가입-및-데이터-수집" class="headerlink" title="서비스 가입 및 데이터 수집"></a>서비스 가입 및 데이터 수집</h2><p>처음에 서비스를 가입하면 14일간 트라이얼 버전의 사용이 가능합니다. 웹 페이지 내용을 가져오는 방법은</p><ul><li>크롤러를 사용해서 페이지 내용을 긁어오기</li><li>웹페이지에 swiftype API 코드 삽입</li></ul><p>두가지 방법이 있습니다. 저는 크롤러를 사용해서 내용을 가져오도록 설정했습니다. </p><p><img src="002.png" alt=""></p><p>크롤러 사용을 선택한 후 웹사이트 주소만 적어주면 바로 크롤링을 시작합니다.</p><p><img src="003.png" alt=""> <img src="004.png" alt=""></p><p>사이트 하나를 Swiftype 에서는 엔진 (engine) 이라는 단위로 분류하며, 엔진별로 과금을 하게 됩니다. 스탠다드가 월 79달러 입니다.</p><p><img src="005.png" alt=""></p><h2 id="검색-데이터-관리"><a href="#검색-데이터-관리" class="headerlink" title="검색 데이터 관리"></a>검색 데이터 관리</h2><p>크롤러가 데이터를 다 수집하고 나면 다음과 같이 Search Preview 메뉴에서 실제로 수집 된 내용들을 검색 해 볼 수 있습니다.</p><p><img src="006.png" alt=""></p><p>각 필드별로 가중치를 조절해서 검색 순위를 조절할 수도 있습니다. 오른쪽에 검색 결과가 달라지는 모습이 실시간으로 나타납니다.</p><p><img src="007.png" alt=""></p><p>Synonym 메뉴에서 동의어 지정도 가능합니다. 아래는 <code>meetup</code>과 <code>밋업</code>을 동의어로 지정하고 검색 해 본 결과입니다.</p><p><img src="008.png" alt="">, <img src="009.png" alt=""></p><h2 id="웹페이지에-검색-기능-추가"><a href="#웹페이지에-검색-기능-추가" class="headerlink" title="웹페이지에 검색 기능 추가"></a>웹페이지에 검색 기능 추가</h2><p>interface -&gt; install search 메뉴로 들어가면 웹페이지에 추가할 수 있는 javascript 코드가 나타납니다.</p><p><img src="010.png" alt=""> <img src="011.png" alt=""></p><p>여기서 configurations 메뉴에 들어가면 웹 페이지에 나타나는 모양과 검색 창 입력 형식을 지정할 수 있습니다. 기존에 검색 기능이 없는 경우에는 <code>No, my site needs an input field</code> 를 선택하면 검색창을 추가할 수 있는 input 폼 코드, 또는 swiftype search 탭을 사용하도록 선택이 가능합니다.</p><p><img src="012.png" alt=""> <img src="013.png" alt=""></p><p>이제 이 코드들을 웹페이지에 넣으면 웹 페이지에서 검색 기능을 사용할 수 있습니다.</p><p><img src="012.png" alt=""></p><p>지금까지의 과정을 비디오로 녹화했습니다. 아래 영상을 보시면 Swiftype 을 이용해서 이 웹 페이지에 검색 기능을 추가하는 과정을 처음부터 설명합니다.</p><iframe width="560" height="315" src="https://www.youtube.com/embed/_fJ-OCdXGR8" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe><blockquote><p>다만, 저도 14일간 트라이얼 버전을 사용하고 있기 때문에 4월 17일 이후에는 검색 기능이 동작을 안 할 수도 있습니다. 🤓</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Swiftype&quot;&gt;&lt;a href=&quot;#Swiftype&quot; class=&quot;headerlink&quot; title=&quot;Swiftype&quot;&gt;&lt;/a&gt;Swiftype&lt;/h2&gt;&lt;p&gt;작년 2017년 11월 경 Elastic은 사이트 서치, 엔터프라이즈 서치 기업인 
      
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/tags/Elasticsearch/"/>
    
      <category term="Site Search" scheme="http://kimjmin.net/tags/Site-Search/"/>
    
      <category term="Swiftype" scheme="http://kimjmin.net/tags/Swiftype/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch 6.x 에서의 join 사용</title>
    <link href="http://kimjmin.net/2018/01/2018-01-parent-child-to-join/"/>
    <id>http://kimjmin.net/2018/01/2018-01-parent-child-to-join/</id>
    <published>2018-01-18T15:00:00.000Z</published>
    <updated>2018-01-22T04:32:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="5-x-이전의-도큐먼트-간-parent-child-구조"><a href="#5-x-이전의-도큐먼트-간-parent-child-구조" class="headerlink" title="5.x 이전의 도큐먼트 간 parent - child 구조"></a>5.x 이전의 도큐먼트 간 parent - child 구조</h2><p>Elasticsearch 에서는 도큐먼트들 간에 연결을 맺을 수 있는 몇가지 기능들을 제공하고 있습니다. 대표적으로는 nested type 이 있으며, 5.x 이전 버전에서는 parent-child 구조의 정의를 할 수 있었습니다.</p><p>5.x 이전의 parent - child 구조는 인덱스 내부의 타입을 parent, 그리고 child 타입으로 나눠서 생성하고 child 에 속한 도큐먼트들이 색인될 때 해당 도큐먼트의 parent 를 명시 해서 저장하는 방식으로 사용했습니다. 자세한 내용은 아래를 문서를 참고하세요.<br><a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/mapping-parent-field.html#_parent_child_restrictions" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/5.6/mapping-parent-field.html#_parent_child_restrictions</a></p><p>다음은 <code>stackoverflow</code> 라는 인덱스에 <code>question</code> 타입과 <code>answer</code> 타입을 각각 parent - child 구조로 저장 한 예제 입니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;stackoverflow&quot;: &#123;</span><br><span class="line">    &quot;mappings&quot;: &#123;</span><br><span class="line">      &quot;question&quot;: &#123;</span><br><span class="line">        &quot;properties&quot;: &#123;</span><br><span class="line">          &quot;accepted_answer_id&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;long&quot;</span><br><span class="line">          &#125;</span><br><span class="line">          ... 중략 ...</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;answer&quot;: &#123;</span><br><span class="line">        &quot;_parent&quot;: &#123;</span><br><span class="line">          &quot;type&quot;: &quot;question&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;_routing&quot;: &#123;</span><br><span class="line">          &quot;required&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;properties&quot;: &#123;</span><br><span class="line">          &quot;id&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;keyword&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="6-x-에서의-join-데이터-타입-설정"><a href="#6-x-에서의-join-데이터-타입-설정" class="headerlink" title="6.x 에서의 join 데이터 타입 설정"></a>6.x 에서의 join 데이터 타입 설정</h2><p>6.0 부터는 한 인덱스에 하나의 타입만 생성할 수 있도록 강제됩니다. 그래서 parent - child 구조는 더 이상 사용이 불가능하고, 대신 join 이라는 데이터 타입을 이용해서 도큐먼트들 간의 관계를 정의하게 됩니다. join 데이터 타입에 대해서는 아래 문서를 참고합니다.<br><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.1/parent-join.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/6.1/parent-join.html</a></p><p>먼저 관계를 설정하기 위한 join 필드를 새로 추가합니다. 저는 <code>qna_join</code> 이라는 필드를 join 필드로 설정했습니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PUT stackoverflow</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;doc&quot;: &#123;</span><br><span class="line">      &quot;properties&quot;: &#123;</span><br><span class="line">        &quot;qna_join&quot;: &#123;</span><br><span class="line">          &quot;type&quot;: &quot;join&quot;,</span><br><span class="line">          &quot;relations&quot;: &#123;</span><br><span class="line">            &quot;question&quot;: &quot;answer&quot; </span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>그리고 question 도큐먼트에는 <code>qna_join</code> 필드 안의 <code>name</code> 값을 <code>question</code> 으로, answer 도큐먼트에는 <code>answer</code> 와 parent에 해당하는 question 도큐먼트의 id 값을 넣어줍니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST stackoverflow/doc/25691276?routing=25691276</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;: &quot;Import CSV into MySQL - Offset by 1 Column&quot;,</span><br><span class="line">  &quot;accepted_answer_id&quot;: 25691509,</span><br><span class="line">  ... 중략 ...</span><br><span class="line">  &quot;id&quot;: 25691276,</span><br><span class="line">  &quot;view_count&quot;: 15,</span><br><span class="line">  &quot;qna_join&quot;: &#123;</span><br><span class="line">    &quot;name&quot;: &quot;question&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST stackoverflow/doc/25691509?routing=25691276</span><br><span class="line">&#123;</span><br><span class="line">  &quot;comment_count&quot;: 0,</span><br><span class="line">  &quot;owner&quot;: &#123;</span><br><span class="line">    &quot;location&quot;: &quot;Sao Paulo, Brazil&quot;,</span><br><span class="line">    &quot;id&quot;: 3337405,</span><br><span class="line">    &quot;display_name&quot;: &quot;vinibarr&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;comments&quot;: [],</span><br><span class="line">  &quot;creation_date&quot;: &quot;2014-09-05T18:01:23.033&quot;,</span><br><span class="line">  &quot;id&quot;: 25691509,</span><br><span class="line">  &quot;body&quot;: &quot;&quot;&quot;</span><br><span class="line">&lt;p&gt;You can load your data specifing the order columns that you&apos;re going to use into your table:</span><br><span class="line">... 중략 ...</span><br><span class="line">&quot;&quot;&quot;,</span><br><span class="line">  &quot;qna_join&quot;: &#123;</span><br><span class="line">    &quot;name&quot;: &quot;answer&quot;,</span><br><span class="line">    &quot;parent&quot;:&quot;25691276&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>중요한 것은 parent, child 두개 도큐먼트는 항상 동일한 routing 값을 넣어줘야 합니다. 같은 routing 값을 가진 도큐먼트는 같은 샤드에 저장이 됩니다.<br>이렇게 저장한 후 <code>has_parent</code> 쿼리를 이용해서 <code>question</code> 도큐먼트의 id 필드 값을 이용해서 그 도큐먼트와 연결된 <code>answer</code> 도큐먼트를 가져오는 쿼리를 실행 해 봅니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET stackoverflow/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;has_parent&quot;: &#123;</span><br><span class="line">      &quot;parent_type&quot;: &quot;question&quot;,</span><br><span class="line">      &quot;query&quot;: &#123;</span><br><span class="line">        &quot;term&quot;: &#123;</span><br><span class="line">          &quot;id&quot;: &#123;</span><br><span class="line">            &quot;value&quot;: &quot;25691276&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>위 쿼리를 실행하면 아래와 같이 <code>answer</code> 도큐먼트를 결과로 가져옵니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;took&quot;: 12,</span><br><span class="line">  &quot;timed_out&quot;: false,</span><br><span class="line">  &quot;_shards&quot;: &#123;</span><br><span class="line">    &quot;total&quot;: 1,</span><br><span class="line">    &quot;successful&quot;: 1,</span><br><span class="line">    &quot;skipped&quot;: 0,</span><br><span class="line">    &quot;failed&quot;: 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;hits&quot;: &#123;</span><br><span class="line">    &quot;total&quot;: 1,</span><br><span class="line">    &quot;max_score&quot;: 1,</span><br><span class="line">    &quot;hits&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot;: &quot;stackoverflow&quot;,</span><br><span class="line">        &quot;_type&quot;: &quot;doc&quot;,</span><br><span class="line">        &quot;_id&quot;: &quot;25691509&quot;,</span><br><span class="line">        &quot;_score&quot;: 1,</span><br><span class="line">        &quot;_routing&quot;: &quot;1&quot;,</span><br><span class="line">        &quot;_source&quot;: &#123;</span><br><span class="line">          &quot;comment_count&quot;: 0,</span><br><span class="line">          &quot;owner&quot;: &#123;</span><br><span class="line">            &quot;location&quot;: &quot;Sao Paulo, Brazil&quot;,</span><br><span class="line">            &quot;id&quot;: 3337405,</span><br><span class="line">            &quot;display_name&quot;: &quot;vinibarr&quot;</span><br><span class="line">          &#125;,</span><br><span class="line">          &quot;comments&quot;: [],</span><br><span class="line">          &quot;creation_date&quot;: &quot;2014-09-05T18:01:23.033&quot;,</span><br><span class="line">          &quot;id&quot;: 25691509,</span><br><span class="line">          &quot;body&quot;: &quot;&quot;&quot;</span><br><span class="line">&lt;p&gt;You can load your data specifing the order columns that you&apos;re going to use into your table:</span><br><span class="line">    ... 중략 ...</span><br><span class="line">&quot;&quot;&quot;,</span><br><span class="line">          &quot;qna_join&quot;: &#123;</span><br><span class="line">            &quot;name&quot;: &quot;answer&quot;,</span><br><span class="line">            &quot;parent&quot;: &quot;25691276&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Logstash-색인-설정"><a href="#Logstash-색인-설정" class="headerlink" title="Logstash 색인 설정"></a>Logstash 색인 설정</h2><p>이제 5.x 에서 parent - child 타입으로 나뉘어 있던 데이터를 6.x 로 재 색인을 해야 합니다. 먼저 데이터를 타입별로 구분해야 하므로 저는 question 타입과 answer 타입의 데이터들을 각각 <code>/Users/kimjmin/elastic/source/stackoverflow/</code> 경로 아래에 <code>question.json</code>, <code>answer.json</code> 이라는 파일들로 저장 했습니다.<br>이제 logstash 설정 파일을 작성하겠습니다. path 로 부터 파일 이름에 있는 <code>question</code> 그리고 <code>answer</code> 를 추출하여 <code>qna_join.name</code> 에 해당하는 값을 넣어주도록 했습니다.</p><p> 우선 파일 이름을 기준으로 <code>question</code>, <code>answer</code> 태그를 만들도록 합니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">  file &#123;</span><br><span class="line">    path =&gt; &quot;/Users/kimjmin/elastic/source/stackoverflow/*.json&quot;</span><br><span class="line">    sincedb_path =&gt; &quot;/dev/null&quot;</span><br><span class="line">    start_position =&gt; &quot;beginning&quot;</span><br><span class="line">    codec =&gt; &quot;json&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">  # &quot;/&quot; 기준으로 path를 배열로 분리하여 [6]번째 값인 &quot;question.json&quot; 또는 &quot;answer.json&quot;을 path_array 에 저장.</span><br><span class="line">  mutate &#123;</span><br><span class="line">    split =&gt; &#123; &quot;path&quot; =&gt; &quot;/&quot; &#125;</span><br><span class="line">    add_field =&gt; &#123; &quot;path_array&quot; =&gt; &quot;%&#123;path[6]&#125;&quot; &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  mutate &#123;</span><br><span class="line">    # &quot;.&quot; 기준으로 path_array를 배열로 분리하여 [0]번째 값인 &quot;question&quot; 또는 &quot;answer&quot;을 qna_join.name, doc_type 에 저장.</span><br><span class="line">    split =&gt; &#123; &quot;path_array&quot; =&gt; &quot;.&quot; &#125;</span><br><span class="line">    add_field =&gt; &#123; &quot;[qna_join][name]&quot; =&gt; &quot;%&#123;path_array[0]&#125;&quot; &#125;</span><br><span class="line">    add_field =&gt; &#123; &quot;doc_type&quot; =&gt; &quot;%&#123;path_array[0]&#125;&quot; &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [&quot;host&quot;,&quot;@version&quot;,&quot;path&quot;,&quot;path_array&quot;,&quot;@timestamp&quot;]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ... 중략 ...</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>현재 구성중인 stackoverflow 는 parent가 question, child 가 answer 구조로 되어 있습니다. 하지만 도큐먼트 내용을 보면 question 도큐먼트에는 answer 도큐먼트와 연결되는 <code>accepted_answer_id</code> 필드가 있지만 answer 에는 question 도큐먼트를 확인하는 필드가 없습니다. answer 도큐먼트가 색인 될 때 연결되는 question 도큐먼트의 id 값을 가져오기 위해 Logstash 의 filter 내부에 <code>elasticsearch</code> 필터를 추가합니다.<br><a href="https://www.elastic.co/guide/en/logstash/6.1/plugins-filters-elasticsearch.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/logstash/6.1/plugins-filters-elasticsearch.html</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">filter &#123;</span><br><span class="line"></span><br><span class="line">  ... 중략 ...</span><br><span class="line"></span><br><span class="line">  if [doc_type] == &quot;question&quot; &#123;</span><br><span class="line">    # routing 을 위해 question 도큐먼트의 id를 question_id 필드에 저장</span><br><span class="line">    mutate&#123;</span><br><span class="line">      add_field =&gt; &#123; &quot;question_id&quot; =&gt; &quot;%&#123;id&#125;&quot; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; else if [doc_type] == &quot;answer&quot; &#123;</span><br><span class="line">    # routing 을 위해 answer에 해당하는 question 도큐먼트의 id 를 가져와서 question_id 필드에 저장</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">      hosts =&gt; [&quot;localhost:9200&quot;]</span><br><span class="line">      index =&gt; &quot;stackoverflow&quot;</span><br><span class="line">      query =&gt; &quot;doc_type:question AND accepted_answer_id:%&#123;id&#125;&quot;</span><br><span class="line">      fields =&gt; &#123; &quot;id&quot; =&gt; &quot;[qna_join][parent]&quot; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    mutate&#123;</span><br><span class="line">      add_field =&gt; &#123; &quot;question_id&quot; =&gt; &quot;%&#123;[qna_join][parent]&#125;&quot; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>이제 데이터를 elasticsearch로 저장하도록 output 을 입력합니다. parent - child 구조의 도큐먼트는 같은 샤드에 저장하기 위해 항상 같은 rounting 값을 적어줘야 합니다. routing 값을 question 도큐먼트의 id 값인 <code>question_id</code> 필드 값으로 지정합니다. 만약에 stackoverflow 인덱스에 샤드가 1개만 있다고 하면 routing 에 모든 도큐먼트에 적용되는 임의의 값을 넣어도 됩니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    index =&gt; &quot;stackoverflow&quot;</span><br><span class="line">    document_type =&gt; &quot;doc&quot;</span><br><span class="line">    document_id =&gt; &quot;%&#123;id&#125;&quot;</span><br><span class="line">    routing =&gt; &quot;%&#123;question_id&#125;&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>이제 데이터를 색인합니다.</p><blockquote><p>중요! 반드시 <code>question</code> 도큐먼트들을 먼저 색인 한 뒤에 <code>answer</code> 도큐먼트들을 색인해야 합니다.</p></blockquote><p>데이터 색인이 끝난 뒤 앞에서 실행했던 <code>has_parent</code> 쿼리를 이용해서 데이터가 정상적으로 나오는지 확인 해 봅니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET stackoverflow/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;has_parent&quot;: &#123;</span><br><span class="line">      &quot;parent_type&quot;: &quot;question&quot;,</span><br><span class="line">      &quot;query&quot;: &#123;</span><br><span class="line">        &quot;term&quot;: &#123;</span><br><span class="line">          &quot;id&quot;: &#123;</span><br><span class="line">            &quot;value&quot;: &quot;25691276&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;took&quot;: 1,</span><br><span class="line">  &quot;timed_out&quot;: false,</span><br><span class="line">  &quot;_shards&quot;: &#123;</span><br><span class="line">    &quot;total&quot;: 5,</span><br><span class="line">    &quot;successful&quot;: 5,</span><br><span class="line">    &quot;skipped&quot;: 0,</span><br><span class="line">    &quot;failed&quot;: 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;hits&quot;: &#123;</span><br><span class="line">    &quot;total&quot;: 1,</span><br><span class="line">    &quot;max_score&quot;: 1,</span><br><span class="line">    &quot;hits&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot;: &quot;stackoverflow&quot;,</span><br><span class="line">        &quot;_type&quot;: &quot;doc&quot;,</span><br><span class="line">        &quot;_id&quot;: &quot;25691509&quot;,</span><br><span class="line">        &quot;_score&quot;: 1,</span><br><span class="line">        &quot;_routing&quot;: &quot;1&quot;,</span><br><span class="line">        &quot;_source&quot;: &#123;</span><br><span class="line">          &quot;comment_count&quot;: 0,</span><br><span class="line">          &quot;owner&quot;: &#123;</span><br><span class="line">            &quot;location&quot;: &quot;Sao Paulo, Brazil&quot;,</span><br><span class="line">            &quot;id&quot;: 3337405,</span><br><span class="line">            &quot;display_name&quot;: &quot;vinibarr&quot;</span><br><span class="line">          &#125;,</span><br><span class="line">          &quot;comments&quot;: [],</span><br><span class="line">          &quot;creation_date&quot;: &quot;2014-09-05T18:01:23.033&quot;,</span><br><span class="line">          &quot;id&quot;: 25691509,</span><br><span class="line">          &quot;body&quot;: &quot;&quot;&quot;</span><br><span class="line">&lt;p&gt;You can load your data specifing the order columns that you&apos;re going to use into your table:</span><br><span class="line">    ... 중략 ...</span><br><span class="line">&quot;&quot;&quot;,</span><br><span class="line">          &quot;qna_join&quot;: &#123;</span><br><span class="line">            &quot;name&quot;: &quot;answer&quot;,</span><br><span class="line">            &quot;parent&quot;: &quot;25691276&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>이처럼 <code>join</code> 타입의 필드를 사용해서 과거처럼 parent-child 구조를 만들 수 있으며, logstash의 <code>elasticsearch</code> 필터를 사용해서 데이터를 색인할 때 elasticsearch 에 있는 데이터를 가져와서 도큐먼트에 추가할 수 있습니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;5-x-이전의-도큐먼트-간-parent-child-구조&quot;&gt;&lt;a href=&quot;#5-x-이전의-도큐먼트-간-parent-child-구조&quot; class=&quot;headerlink&quot; title=&quot;5.x 이전의 도큐먼트 간 parent - child 구조
      
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Elastic Cluster 구성 8</title>
    <link href="http://kimjmin.net/2018/01/2018-01-build-es-cluster-8/"/>
    <id>http://kimjmin.net/2018/01/2018-01-build-es-cluster-8/</id>
    <published>2018-01-07T15:00:00.000Z</published>
    <updated>2018-01-12T05:41:20.959Z</updated>
    
    <content type="html"><![CDATA[<p><del>새로 산 게임기 하느라</del> 바쁜 일정 때문에 며칠만에 포스팅 하네요.</p><p>오늘은 Logstash 설치 및 Elasticsearch 기본 템플릿 설정을 하도록 하겠습니다. 이전 또는 이후 내용들은 아래 포스트에서 확인하세요.</p><blockquote><p><a href="/2018/01/2018-01-build-es-cluster-1">1. 서버 생성 및 Elasticsearch RPM 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-2">2. 메모리, 네트워크 설정 및 플러그인 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-3">3. 클러스터 구성 및 마스터, 데이터 노드 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-4">4. Kibana 설치 및 X-Pack Monitoring 확인</a><br><a href="/2018/01/2018-01-build-es-cluster-5">5. NFS 구성 및 elasticsearch 추가 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-6">6. X-Pack Security를 이용한 SSL 및 TLS 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-7">7. X-Pack License 적용 및 사용자 생성</a><br><strong>8. Logstash 설치 및 Elasticsearch 기본 템플릿 설정</strong></p></blockquote><p>아래는 저희가 지금까지 설치한 아키텍쳐입니다. </p><p><img src="architecture-security.png" alt=""></p><p>오늘은 Service 서버에 Logstash 설치를 먼저 해 보겠습니다. 오늘 포스트에서 Logstash 기본적인 사용 방법을 설명하진 않겠습니다. 설명은</p><ul><li>공식 도큐먼트 : <a href="https://www.elastic.co/guide/en/logstash/current/index.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/logstash/current/index.html</a></li><li>또는 비디오: <a href="https://www.elastic.co/kr/webinars/getting-started-logstash" target="_blank" rel="noopener">https://www.elastic.co/kr/webinars/getting-started-logstash</a><br>등을 참고 부탁드립니다.</li></ul><h2 id="Logstash-설치"><a href="#Logstash-설치" class="headerlink" title="Logstash 설치"></a>Logstash 설치</h2><p>Logstash도 지금까지 설치한 Elasticsearch, Kibana와 마찬가지로 서비스로 돌릴 수 있도록 설치 해 보겠습니다.<br>Logstash도 Elasticsearch와 마찬가지로 Java 에서 실행되며 1.8 버전을 권장합니다. 앞서 Java는 설치했으므로 바로 넘어가겠습니다.</p><h3 id="Yum-설치"><a href="#Yum-설치" class="headerlink" title="Yum 설치"></a>Yum 설치</h3><p>아래 문서를 참고해서 설치를 진행하겠습니다.<br><a href="https://www.elastic.co/guide/en/logstash/current/installing-logstash.html#_yum" target="_blank" rel="noopener">https://www.elastic.co/guide/en/logstash/current/installing-logstash.html#_yum</a></p><p>Yum 설치를 위해 <code>/etc/yum.repos.d/</code>에 <code>logstash.repo</code> 파일을 만들고 아래 내용을 추가합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[logstash-6.x]</span><br><span class="line">name=Elastic repository for 6.x packages</span><br><span class="line">baseurl=https://artifacts.elastic.co/packages/6.x/yum</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch</span><br><span class="line">enabled=1</span><br><span class="line">autorefresh=1</span><br><span class="line">type=rpm-md</span><br></pre></td></tr></table></figure></p><p>그리고 설치합니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum install logstash</span><br></pre></td></tr></table></figure><p>Logstash의 RPM 버전 설치 경로들은 아래와 같습니다.</p><ul><li>기본 프로그램 (<strong>$LS_HOME</strong>) : <code>/usr/share/logstash</code><ul><li>실행 파일 : <code>bin/logstash</code></li></ul></li><li>설정 : <code>/etc/logstash</code><ul><li><code>logstash.yml</code></li><li><code>jvm.options</code></li><li><code>log4j2.properties</code></li><li><code>startup.options</code></li></ul></li><li>파이프라인 설정 (<strong>path.config</strong>) : <code>/etc/logstash/conf.d</code></li><li>플러그인(<strong>path.plugins</strong>) : <code>/usr/share/logstash/plugins</code></li><li>데이터 (추가 플러그인 설치 등) : <code>/var/lib/logstash</code></li><li>로그 (<strong>path.logs</strong>) : <code>/var/log/logstash</code></li></ul><p>설치가 끝나고 logstash를 시작하기 위해서는 initctl를 사용합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo initctl start logstash</span><br></pre></td></tr></table></figure></p><p>실행중인 logstash를 정지하려면 아래 명령을 사용합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo initctl stop logstash</span><br></pre></td></tr></table></figure></p><h3 id="X-Pack-설치"><a href="#X-Pack-설치" class="headerlink" title="X-Pack 설치"></a>X-Pack 설치</h3><p>6.0 부터는 Logstash도 X-Pack을 설치할 수 있습니다. X-Pack을 설치하게 되면 Logstash 상태 모니터링과 파이프라인 뷰어, 파이프라인 빌더 등의 사용이 가능합니다.</p><p>우선 설치 경로로 이동해서<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd /usr/share/logstash</span><br></pre></td></tr></table></figure></p><p>X-Pack을 설치합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo bin/logstash-plugin install x-pack</span><br></pre></td></tr></table></figure></p><p>그리고 <code>logstash.yml</code> 파일에 사용자와 ID, password를 등록 해 줘야 합니다. <a href="/2018/01/2018-01-build-es-cluster-2">2. 메모리, 네트워크 설정 및 플러그인 설치</a> 에서 생성한 <code>logstash_system</code> id를 사용합니다.</p><h3 id="Logstash-모니터링-설정"><a href="#Logstash-모니터링-설정" class="headerlink" title="Logstash 모니터링 설정"></a>Logstash 모니터링 설정</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ ]$ sudo vim /etc/logstash/logstash.yml</span><br><span class="line"></span><br><span class="line">xpack.monitoring.elasticsearch.url: [&quot;http://192.168.0.10:9200&quot;]</span><br><span class="line">xpack.monitoring.elasticsearch.username: logstash_system</span><br><span class="line">xpack.monitoring.elasticsearch.password: logstashpassword</span><br></pre></td></tr></table></figure><p>저희는 elasticsearch의 네트워크 설정을 했기 때문에 <code>xpack.monitoring.elasticsearch.url</code>에 실제 IP 주소를 적어야 합니다.<br>위 내용을 입력하고 나면 이제 Kibana 에서 Logstash 모니터링이 가능합니다.</p><p><img src="ls-monitoring.png" alt=""></p><h3 id="Logstash-관리-기능-설정"><a href="#Logstash-관리-기능-설정" class="headerlink" title="Logstash 관리 기능 설정"></a>Logstash 관리 기능 설정</h3><p>Kibana에서 Logstash 관리 기능의 사용이 가능합니다. 먼저 사용자 중에 <code>logstash_admin</code> 권한을 가진 사용자가 필요합니다. Kibana 에서 <code>logstash-admin-user</code> 라는 이름으로 사용자를 추가하겠습니다. 이 사용자에게는 <code>logstash_admin</code> 그리고 <code>logstash_system</code> 권한을 부여하도록 합니다.</p><p><img src="ls-user-add.png" alt=""></p><p><code>logstash.yml</code>에 아래 내용을 추가 해 줍니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xpack.management.enabled: true</span><br><span class="line">xpack.management.elasticsearch.url: &quot;http://192.168.0.10:9200/&quot;</span><br><span class="line">xpack.management.elasticsearch.username: logstash-admin-user</span><br><span class="line">xpack.management.elasticsearch.password: password</span><br><span class="line">xpack.management.logstash.poll_interval: 5s</span><br><span class="line">xpack.management.pipeline.id: [&quot;apache&quot;, &quot;cloudwatch_logs&quot;,&quot;ls-custom&quot;]</span><br></pre></td></tr></table></figure><p><code>xpack.management.elasticsearch.password</code> 항목에는 당연히 <code>logstash-admin-user</code> 사용자의 계정 비밀번호를 넣으면 됩니다. 그리고 <code>xpack.management.pipeline.id</code> 항목에 내가 관리자 화면에서 사용할 Logstash 파이프 ID 들을 추가 해 줍니다. 저는 <code>ls-custom</code> 이라는 id를 추가 해 보았습니다. 뒤에 나오는 파이프라인 관리 화면에서는 이곳에 정의된 ID의 파이프들만 추가가 가능합니다.</p><h3 id="Logstash-관리-화면에서-파이프라인-추가"><a href="#Logstash-관리-화면에서-파이프라인-추가" class="headerlink" title="Logstash 관리 화면에서 파이프라인 추가"></a>Logstash 관리 화면에서 파이프라인 추가</h3><p>이제 Logstash를 시작하고 Kibana의 <code>Management</code> &gt; <code>[Logstash] Pipelines</code> 메뉴에 들어가서 <code>add</code> 버튼을 눌러 <code>ls-custom</code> 파이프를 추가 해 보겠습니다.</p><p><img src="ls-custom.png" alt=""></p><p>위 그림과 같이 입력은 <code>tcp</code> 의 9999 포트에서 입력 받아 출력은 <code>elasticsearch</code> 로 해 보겠습니다.</p><p>이제 콘솔에서 nc(NetCat) 명령을 이용해서 9999 포트로 “hello” 라는 메시지를 전송 해 보겠습니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ ]$ echo &apos;hello&apos; | nc 172.31.27.193 9999</span><br></pre></td></tr></table></figure><p>그리고 <code>logstash-*</code> 인덱스를 확인 해 보면 <code>&quot;message&quot;: &quot;hello&quot;</code> 인 도큐먼트가 입력된 것을 확인할 수 있습니다.</p><p><img src="ls-data-indexed.png" alt=""></p><h3 id="모니터-화면에서-파이프라인-확인"><a href="#모니터-화면에서-파이프라인-확인" class="headerlink" title="모니터 화면에서 파이프라인 확인"></a>모니터 화면에서 파이프라인 확인</h3><p><code>Monitoring</code> &gt; <code>[Logstash] Pipelines</code> 로 들어가 보면 방금 만든 <code>ls-custom</code> 파이프가 보입니다.</p><p><img src="pipe-view-1.png" alt=""></p><p>클릭하고 들어가면 자세한 파이프를 볼 수 있습니다.</p><p><img src="pipe-view-2.png" alt=""></p><p>참고로 파이프라인 관리 도구는 X-Pack Gold 라이센스 이상, 파이프라인 모니터링 도구는 X-Pack Basic 라이센스에서 사용이 가능합니다. 라이센스는 아래 링크에서 확인하세요.<br><a href="https://www.elastic.co/kr/subscriptions" target="_blank" rel="noopener">https://www.elastic.co/kr/subscriptions</a></p><h2 id="기본-Template-설정"><a href="#기본-Template-설정" class="headerlink" title="기본 Template 설정"></a>기본 Template 설정</h2><p><code>_template</code> API를 사용하면 특정한 인덱스 이름등에 대해서 setting, mapping 등의 값들을 미리 정해줄 수 있습니다.<br><code>GET /_cat/templates</code> 또는 <code>GET /_templates/템플릿이름</code> 을 이용해서 지금 설정되어 있는 템플릿들과 세부 내용들을 볼 수 있습니다.</p><p><img src="get-template.png" alt=""></p><p>Elasticsearch 가 가지고 있는 몇가지 기본 설정들이 있는데, 저희는 클러스터가 작고 노드가 3개밖에 없으므로 몇가지 기본 설정을 좀 변경 해 주겠습니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PUT _template/basic</span><br><span class="line">&#123;</span><br><span class="line">  &quot;index_patterns&quot; : [&quot;*&quot;],</span><br><span class="line">  &quot;order&quot;: &quot;0&quot;,</span><br><span class="line">  &quot;settings&quot;: &#123;</span><br><span class="line">    &quot;number_of_shards&quot;: 1,</span><br><span class="line">    &quot;refresh_interval&quot;: &quot;10s&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>&quot;index_patterns&quot; : [&quot;*&quot;]</code> : 앞으로 이 클러스터에서 생성될 모든 인덱스에 적용합니다.</li><li><code>&quot;order&quot;: &quot;0&quot;</code> : 이 값이 높을수록 템플릿의 우선순위가 높으며, 지금 만든 basic 템플릿은 우선순위가 0으로 가장 낮습니다. logstash-* 와 같은 인덱스 패턴에 적용되는 또다른 템플릿이 order:1 등으로 설정되게 되면 해당 이름의 인덱스들은 더 높은 우선순위의 템플릿을 적용받습니다.</li><li><code>&quot;settings.number_of_shards&quot;: 1</code> : 기본 샤드 개수를 5개 –&gt; 1개로 변경합니다.</li><li><code>&quot;settings.refresh_interval&quot;: &quot;10s&quot;</code> : refresh 주기를 1초 –&gt; 10초 로 변경합니다.</li></ul><p>자, 이제 Logstash 설치와 템플릿 설정도 모두 끝났으니 클러스터에 데이터를 입력하고 사용할 준비를 모두 마쳤습니다.</p><p>기본 클러스터 구성에 대한 내용은 지금까지의 블로그 포스트 시리즈로 설명을 드렸습니다.<br>앞으로 유용한 설정이나 운영 기법 등은 기회가 되는 대로 별도 개별 포스트 또는 새로운 시리즈로 추가하도록 하겠습니다.</p><blockquote><p><a href="/2018/01/2018-01-build-es-cluster-1">1. 서버 생성 및 Elasticsearch RPM 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-2">2. 메모리, 네트워크 설정 및 플러그인 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-3">3. 클러스터 구성 및 마스터, 데이터 노드 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-4">4. Kibana 설치 및 X-Pack Monitoring 확인</a><br><a href="/2018/01/2018-01-build-es-cluster-5">5. NFS 구성 및 elasticsearch 추가 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-6">6. X-Pack Security를 이용한 SSL 및 TLS 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-7">7. X-Pack License 적용 및 사용자 생성</a><br><strong>8. Logstash 설치 및 Elasticsearch 기본 템플릿 설정</strong></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;del&gt;새로 산 게임기 하느라&lt;/del&gt; 바쁜 일정 때문에 며칠만에 포스팅 하네요.&lt;/p&gt;
&lt;p&gt;오늘은 Logstash 설치 및 Elasticsearch 기본 템플릿 설정을 하도록 하겠습니다. 이전 또는 이후 내용들은 아래 포스트에서 확인하세요
      
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/tags/Elasticsearch/"/>
    
      <category term="Elastic" scheme="http://kimjmin.net/tags/Elastic/"/>
    
      <category term="Elastic Cluster Settings" scheme="http://kimjmin.net/tags/Elastic-Cluster-Settings/"/>
    
  </entry>
  
  <entry>
    <title>Elastic Cluster 구성 7</title>
    <link href="http://kimjmin.net/2018/01/2018-01-build-es-cluster-7/"/>
    <id>http://kimjmin.net/2018/01/2018-01-build-es-cluster-7/</id>
    <published>2018-01-06T15:00:00.000Z</published>
    <updated>2018-01-12T05:41:25.277Z</updated>
    
    <content type="html"><![CDATA[<p>이번 포스트에서는 X-Pack License 적용 및 신규 사용자 생성을 하도록 하겠습니다. 이전 또는 이후 내용들은 아래 포스트에서 확인하세요.</p><blockquote><p><a href="/2018/01/2018-01-build-es-cluster-1">1. 서버 생성 및 Elasticsearch RPM 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-2">2. 메모리, 네트워크 설정 및 플러그인 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-3">3. 클러스터 구성 및 마스터, 데이터 노드 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-4">4. Kibana 설치 및 X-Pack Monitoring 확인</a><br><a href="/2018/01/2018-01-build-es-cluster-5">5. NFS 구성 및 elasticsearch 추가 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-6">6. X-Pack Security를 이용한 SSL 및 TLS 설정</a><br><strong>7. X-Pack License 적용 및 사용자 생성</strong><br><a href="/2018/01/2018-01-build-es-cluster-8">8. Logstash 설치 및 Elasticsearch 기본 템플릿 설정</a></p></blockquote><h2 id="X-Pack-License-적용"><a href="#X-Pack-License-적용" class="headerlink" title="X-Pack License 적용"></a>X-Pack License 적용</h2><p>X-Pack 을 설치하면 기본적으로 30일 간 Trial 버전으로 사용이 가능합니다. X-Pack는 각각 Basic(무료), Gold, Platinum, Enterprise(ECE) 라이센스들이 있으며 각 라이센스 별 기술과 기능의 지원 범위는 아래 페이지에서 확인 가능합니다.<br><a href="https://www.elastic.co/kr/subscriptions" target="_blank" rel="noopener">https://www.elastic.co/kr/subscriptions</a></p><p><img src="subscriptions.png" alt=""></p><p>Elastic Stack - Elasticsearch, Logstash, Kibana, Beats 는 완전한 오픈소스 라이센스이고, X-Pack Monitoring의 경우 Basic 라이센스를 통해 사용이 가능합니다. 그 외의 기능은 Gold 이상의 라이센스가 필요하며 Graph, Machine Learning 의 경우 Platinum 이상에서 제공됩니다. 라이센스는 Elastic사와 구독을 통해 기술지원 계약을 맺게 되면 라이센스가 저장된 키 파일을 제공받습니다.</p><p>라이센스 키는 json 문서가 저장된 .json 형태의 파일입니다. 라이센스는 <code>_xpack/license</code> API에 저장이 되는데, 먼저 GET 명령으로 이 API를 적용시켜 보면 현재 라이센스 정보를 확인할 수 있습니다. 아래는 라이센스가 적용되지 않은 Trial 상태의 라이센스 정보입니다.</p><p><img src="license-trial.png" alt=""></p><p>상태는 <code>&quot;type&quot;:&quot;trial&quot;</code>, 만료 일자는 설치 후 30일인 <code>&quot;expiry_date&quot;:&quot;2018-02-02...&quot;</code> 로 되어 있는것을 확인할 수 있습니다.</p><p>이제 아래 링크의 문서를 참고해서 라이센스를 적용 해 보겠습니다.<br><a href="https://www.elastic.co/guide/en/x-pack/current/installing-license.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/x-pack/current/installing-license.html</a></p><p>라이센스 키를 적용하기 위해서는 먼저, curl 명령을 통해 를 통해 라이센스 파일의 내용을 PUT 하는 방법이 있습니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -XPUT -u elastic &apos;https://192.168.0.10:9200/_xpack/license&apos; -H &quot;Content-Type: application/json&quot; -d @es-demo-fcc1-580-8dd0-8a389a-v5.json</span><br><span class="line">Enter host password for user &apos;elastic&apos;:</span><br></pre></td></tr></table></figure><p>또는 라이센스 파일의 내용을 Kibana의 Dev Tools 에서 PUT 으로 입력해도 됩니다.</p><p><img src="put-license.png" alt=""></p><p>라이센스 적용 후 다시 <code>GET _xpack/license</code> API를 확인 해 보면</p><p><img src="license-platinum.png" alt=""></p><p>상태가 <code>&quot;type&quot;:&quot;platinum&quot;</code>, 만료 일자는 계약 만료일인 <code>&quot;expiry_date&quot;:&quot;2018-08-01...&quot;</code> 로 변경 된 것을 확인할 수 있습니다.</p><blockquote><p>참고로 이전 포스트에서 설정한 TLS 설정이 활성화 되어 있지 않으면 X-Pack 라이센스가 적용이 되지 않습니다. TLS 설정은 X-Pack Gold 이상을 사용하기 위한 최소한으로 해 주어야 하는 설정입니다.</p></blockquote><h2 id="사용자-생성"><a href="#사용자-생성" class="headerlink" title="사용자 생성"></a>사용자 생성</h2><p>X-Pack 이 설치되면 Kibana의 Management 메뉴에 Security 를 설정하는 메뉴가 나타납니다. Security 에서는 사용자(User)와 권한(Role)을 생성하거나 관리할 수 있습니다.</p><p><img src="management-security.png" alt=""></p><p><code>Roles</code> 메뉴에서 허용할 인덱스, 필드 및 도큐먼트에 대한 접근 권한들을 설정할 수 있습니다. </p><p><img src="set-role.png" alt=""></p><p><code>Roles</code> 메뉴의 항목들은 다음과 같습니다.</p><ul><li><strong>Name</strong>: 권한 이름. 1개의 영문+숫자 단어여야 합니다.</li><li><strong>Cluster Privileges</strong>: 클러스터에 대한 권한</li><li><strong>Add a user…</strong>: 이 권한을 적용받는 사용자. 이 항목은 비워 둔 다음 권한을 먼저 만들고 나중에 사용자를 만들때 권한을 적용하는것도 가능합니다.</li><li><strong>Indices</strong>: 접근 가능한 인덱스들. <code>*</code>로 설정하면 모든 인덱스에 접근이 가능합니다.</li><li><strong>Privileges</strong>: 앞의 인덱스들에 대해 read, create, delete 등의 권한 설정이 가능합니다.</li><li><strong>Granted Documents Query</strong>: 해당 권한의 사용자가 쿼리를 할 때 항상 적용 될 서브쿼리를 적습니다. 권한에 따라 특정 도큐먼트를 필터링 하기 위함입니다.</li><li><strong>Granted Fields</strong>: 이 권한의 사용자에게는 이 항목에 입력된 필드들만 나타납니다. 권한에 따라 특정 필드를 필터링 하기 위함입니다.</li></ul><p>또한 <code>Users</code> 메뉴에서 신규 사용자의 생성이 가능합니다.</p><p><img src="set-user.png" alt=""></p><p><code>Roles</code> 항목 에서 이 사용자에게 어떤 권한을 부여할지 입력합니다. 권한은 1개 이상이 될 수 있으며 <strong><em>여러개의 권한을 부여하는 경우 부여된 모든 권한에 대해 접근 가능 범위가 적용이 됩니다</em></strong>. 다시말해 OR 조건으로 권한이 부여되며 어떤 유저가 <code>superuser</code> 그리고 <code>new_user</code> 의 권한을 부여받으면 이 유저는 <code>superuser</code> 권한이 가진 모든 권한을 헹사할 수 있습니다. 그렇기 때문에 적용할 권한은 최소한, 겹치는 영역 없이 하는것이 (가능하면 1 사용자 : 1 권한) 바람직합니다.</p><p>다음 포스트에서는 Elastic Cluster 구성 시리즈의 마지막으로 Logstash 설치 및 Elasticsearch 기본 템플릿 설정에 대해 살펴보도록 하겠습니다.</p><blockquote><p><a href="/2018/01/2018-01-build-es-cluster-1">1. 서버 생성 및 Elasticsearch RPM 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-2">2. 메모리, 네트워크 설정 및 플러그인 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-3">3. 클러스터 구성 및 마스터, 데이터 노드 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-4">4. Kibana 설치 및 X-Pack Monitoring 확인</a><br><a href="/2018/01/2018-01-build-es-cluster-5">5. NFS 구성 및 elasticsearch 추가 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-6">6. X-Pack Security를 이용한 SSL 및 TLS 설정</a><br><strong>7. X-Pack License 적용 및 사용자 생성</strong><br><a href="/2018/01/2018-01-build-es-cluster-8">8. Logstash 설치 및 Elasticsearch 기본 템플릿 설정</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;이번 포스트에서는 X-Pack License 적용 및 신규 사용자 생성을 하도록 하겠습니다. 이전 또는 이후 내용들은 아래 포스트에서 확인하세요.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/2018/01/2018-01-build-es-
      
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/tags/Elasticsearch/"/>
    
      <category term="Elastic" scheme="http://kimjmin.net/tags/Elastic/"/>
    
      <category term="Elastic Cluster Settings" scheme="http://kimjmin.net/tags/Elastic-Cluster-Settings/"/>
    
      <category term="X-Pack" scheme="http://kimjmin.net/tags/X-Pack/"/>
    
  </entry>
  
  <entry>
    <title>Elastic Cluster 구성 6</title>
    <link href="http://kimjmin.net/2018/01/2018-01-build-es-cluster-6/"/>
    <id>http://kimjmin.net/2018/01/2018-01-build-es-cluster-6/</id>
    <published>2018-01-05T15:00:00.000Z</published>
    <updated>2018-01-12T05:41:24.541Z</updated>
    
    <content type="html"><![CDATA[<p>이번 포스트에서는 X-Pack Security를 이용한 보안 설정을 하도록 하겠습니다. 이전 또는 이후 내용들은 아래 포스트에서 확인하세요.</p><blockquote><p><a href="/2018/01/2018-01-build-es-cluster-1">1. 서버 생성 및 Elasticsearch RPM 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-2">2. 메모리, 네트워크 설정 및 플러그인 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-3">3. 클러스터 구성 및 마스터, 데이터 노드 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-4">4. Kibana 설치 및 X-Pack Monitoring 확인</a><br><a href="/2018/01/2018-01-build-es-cluster-5">5. NFS 구성 및 elasticsearch 추가 설정</a><br><strong>6. X-Pack Security를 이용한 SSL 및 TLS 설정</strong><br><a href="/2018/01/2018-01-build-es-cluster-7">7. X-Pack License 적용 및 사용자 생성</a><br><a href="/2018/01/2018-01-build-es-cluster-8">8. Logstash 설치 및 Elasticsearch 기본 템플릿 설정</a></p></blockquote><p>참고로 X-Pack은 Elastic에서 배포하는 공식 상용 플러그인이며 다음과 같은 모듈들을 가지고 있습니다.</p><p><img src="x-pack-list.png" alt=""></p><ul><li><a href="https://www.elastic.co/kr/products/x-pack/security" target="_blank" rel="noopener">Security</a>: 사용자/권한 기반의 인증 및 통신 암호화 기능을 제공합니다.</li><li><a href="https://www.elastic.co/kr/products/x-pack/alerting" target="_blank" rel="noopener">Alerting</a>: 쿼리 기반의 자동 알림 기능을 제공합니다.</li><li><a href="https://www.elastic.co/kr/products/x-pack/monitoring" target="_blank" rel="noopener">Monitoring</a>: ES 클러스터의 상태 모니터링 기능을 제공합니다.</li><li><a href="https://www.elastic.co/kr/products/x-pack/graph" target="_blank" rel="noopener">Graph</a>: 관계도 분석 기능을 제공합니다.</li><li><a href="https://www.elastic.co/kr/products/x-pack/reporting" target="_blank" rel="noopener">Reporting</a>: Kibana 대시보드를 PDF로 내려받거나 데이터를 CSV 파일로 저장합니다.</li><li><a href="https://www.elastic.co/kr/products/x-pack/machine-learning" target="_blank" rel="noopener">Machine Learning</a>: 시계열 데이터 기반의 실시간 이상징후 탐지 기능을 제공합니다.</li></ul><p>다른 모듈들에 대해서는 각 제목에 링크된 공식 홈페이지 내용을 참고하시기 바랍니다.</p><p>오늘은 작업 할 내용들은 다음과 같습니다.</p><ul><li>Elasticsearch 노드들 간의 통신에 TLS를 설정 하고, Elasticsearch와 다른 클라이언트 프로그램들 간에는 그냥 http로 두겠습니다.</li><li>Kibana 에 SSL을 적용해서 사용자가 Kibana에 접속할 때 <a href="https://host:5601" target="_blank" rel="noopener">https://host:5601</a> 로 접속할 수 있도록 하겠습니다.</li><li>Audit(감사) 로그를 수집하도록 하겠습니다.</li></ul><p><img src="architecture-security.png" alt=""></p><h2 id="Elasticsearch-노드들-간의-TLS-설정"><a href="#Elasticsearch-노드들-간의-TLS-설정" class="headerlink" title="Elasticsearch 노드들 간의 TLS 설정"></a>Elasticsearch 노드들 간의 TLS 설정</h2><p>Elasticsearch 6.0 부터는 X-Pack 설치 이후에는 기본적으로 노드들 간의 통신에 TLS를 설정 해 주어야 합니다. 그렇지 않으면 계속 해서 경고가 표시되고 심지어 기술지원 라이센스의 등록도 되지 않습니다.</p><p><img src="tls-warning.png" alt=""></p><h3 id="인증서-파일-생성"><a href="#인증서-파일-생성" class="headerlink" title="인증서 파일 생성"></a>인증서 파일 생성</h3><p>X-Pack은 이미 설치가 되어 있으니 이제 인증서 파일을 만들어 줍니다. 공인 인증기관으로부터 구매한 인증서가 있다면 사용하셔도 되고, X-Pack 에는 Elastic 에서 발행하는 사설 인증서를 생성하는 도구인 <code>certgen</code> 을 포함하고 있습니다. <code>certgen</code>에 대한 내용은 아래 링크를 참고하세요.<br><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.1/certgen.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/6.1/certgen.html</a></p><p>인증서를 생성하기 위해 설치 디렉토리로 가서 다음과 같은 명령을 실행합니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ ]$ cd /usr/share/elasticsearch/</span><br><span class="line">[ ]$ sudo bin/x-pack/certgen</span><br><span class="line">This tool assists you in the generation of X.509 certificates and certificate</span><br><span class="line"></span><br><span class="line">... 중략 ...</span><br><span class="line"></span><br><span class="line">Let&apos;s get started...</span><br></pre></td></tr></table></figure><p>몇가지 질문이 나옵니다.<br>인증서 파일 세트를 담은 압축 파일은 <code>certificate-bundle.zip</code> 그대로 두겠습니다. 비워두고 그냥 엔터를 칩니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Please enter the desired output file [certificate-bundle.zip]:</span><br></pre></td></tr></table></figure></p><p>인증서 인스턴스 이름은 임의의 이름을 입력하면 됩니다. 여기서는 <code>es-demo</code> 라고 하겠습니다. <code>es-demo</code>를 입력하고 엔터를 칩니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Enter instance name: es-demo</span><br></pre></td></tr></table></figure></p><p>디렉토리, 파일 이름은 인증서 이름이랑 동일하게 하면 됩니다. 그냥 엔터를 칩니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Enter name for directories and files [es-demo]:</span><br></pre></td></tr></table></figure></p><p>인증서에 적용할 IP 주소들을 적습니다. 저희 노드를 설치한 서버들의 IP 주소들을 콤마로 구분해서 모두 적어줍니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Enter IP Addresses for instance (comma-separated if more than one) []: 192.168.0.10,192.168.0.11,192.168.0.12,192.168.0.13</span><br></pre></td></tr></table></figure></p><p>DNS는 없으니까 비워두겠습니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Enter DNS names for instance (comma-separated if more than one) []:</span><br></pre></td></tr></table></figure></p><p>추가 인증서는 만들지 않으니 <code>n</code>을 입력하고 엔터를 칩니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Would you like to specify another instance? Press &apos;y&apos; to continue entering instance information: n</span><br></pre></td></tr></table></figure></p><p>그럼 이제 <code>/usr/share/elasticsearch/certificate-bundle.zip</code> 경로에 인증서가 담긴 압축 파일이 생성됩니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Certificates written to /usr/share/elasticsearch/certificate-bundle.zip</span><br><span class="line">... 후략 ...</span><br></pre></td></tr></table></figure></p><p>이제 이 압축 파일을 <code>/usr/share/elasticsearch</code> 아래에 <code>cert</code> 라는 디렉토리를 만들고 이곳으로 옮겨 압축을 풀도록 하겠습니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ ]$ sudo mkdir cert</span><br><span class="line">[ ]$ sudo mv certificate-bundle.zip ./cert</span><br><span class="line">[ ]$ cd cert/</span><br><span class="line">[ ]$ sudo unzip certificate-bundle.zip</span><br><span class="line">Archive:  certificate-bundle.zip</span><br><span class="line">   creating: ca/</span><br><span class="line">  inflating: ca/ca.crt</span><br><span class="line">  inflating: ca/ca.key</span><br><span class="line">   creating: es-demo/</span><br><span class="line">  inflating: es-demo/es-demo.crt</span><br><span class="line">  inflating: es-demo/es-demo.key</span><br></pre></td></tr></table></figure></p><p>압축을 풀면 <code>ca</code> 디렉토리 아래에 <code>ca.crt</code>, <code>ca.key</code> 파일, 그리고 <code>es-demo</code> 디렉토리 아래에 <code>es-demo.crt</code>, <code>es-demo.key</code> 파일, 총 4개의 파일이 생성됩니다.</p><h3 id="Elasticsearch-설정"><a href="#Elasticsearch-설정" class="headerlink" title="Elasticsearch 설정"></a>Elasticsearch 설정</h3><p>이제 인증서가 만들어 졌으니 elasticsearch 설정을 합니다. 설정은 아래 페이지를 참고하여 진행합니다.<br><a href="https://www.elastic.co/guide/en/x-pack/current/ssl-tls.html#enable-ssl" target="_blank" rel="noopener">https://www.elastic.co/guide/en/x-pack/current/ssl-tls.html#enable-ssl</a></p><p>코디네이션 노드의 <code>elasticsearcy.yml</code> 파일을 열고<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/elasticsearch/elasticsearch.yml</span><br></pre></td></tr></table></figure></p><p>아래와 같이 입력 해 줍니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xpack.ssl.key: /usr/share/elasticsearch/cert/es-demo/es-demo.key</span><br><span class="line">xpack.ssl.certificate: /usr/share/elasticsearch/cert/es-demo/es-demo.crt</span><br><span class="line">xpack.ssl.certificate_authorities: [ &quot;/usr/share/elasticsearch/cert/ca/ca.crt&quot; ]</span><br><span class="line"></span><br><span class="line">xpack.security.transport.ssl.enabled: true</span><br><span class="line">xpack.security.http.ssl.enabled: true</span><br></pre></td></tr></table></figure></p><p><code>xpack.security.http.ssl.enabled: true</code> 이 http SSL 설정 부분은 나중에는 다시 제거하겠으나 테스트를 위해 일단 지금은 설정을 하겠습니다.</p><p>데이터 노드들도 위와 동일하게 하는데 데이터 노드들은 http 기능을 잠궈 놓았기 때문에 <code>xpack.security.http.ssl.enabled: true</code> 이 부분은 입력하지 않도록 합니다.</p><p>이제 설정이 끝났으면 모든 노드들을 재시작 해 보겠습니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo service elasticsearch restart</span><br></pre></td></tr></table></figure></p><p>그리고 로그를 확인 해 보면… 오류가 납니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Caused by: java.security.AccessControlException: access denied (&quot;java.io.FilePermission&quot; &quot;/usr/share/elasticsearch/cert/ca/ca.crt&quot; &quot;read&quot;)</span><br></pre></td></tr></table></figure></p><p>지금 설치된 서버의 Java에 java.io.FilePermission 권한이 없어서 그렇습니다. 조금 귀찮은 작업을 좀 해야 하는데요, <code>java.policy</code> 파일 내용을 수정해야 합니다. 아래와 같이 <code>java.policy</code> 파일을 열고 (시스템 마다 설치 경로는 다를 수 있습니다.)<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /usr/lib/jvm/jre-1.8.0-openjdk.x86_64/lib/security/java.policy</span><br></pre></td></tr></table></figure></p><p><code>grant</code> 내부의 맨 아래 부분에 다음과 같이 추가 해 줍니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grant &#123;</span><br><span class="line">  ... 중략 ...</span><br><span class="line"></span><br><span class="line">        permission java.io.FilePermission &quot;&lt;&lt;ALL FILES&gt;&gt;&quot;, &quot;read&quot;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>이제 다시 한번 노드들을 재시작 하고 나면 정상적으로 실행 되는 것을 확인할 수 있습니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo service elasticsearch restart</span><br></pre></td></tr></table></figure></p><h3 id="SSL-확인"><a href="#SSL-확인" class="headerlink" title="SSL 확인"></a>SSL 확인</h3><p>코디네이트 노드가 있는 서버 콘솔에서 curl 로 접속을 해 보면<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ ]$ curl http://172.31.27.193:9200</span><br><span class="line">curl: (52) Empty reply from server</span><br></pre></td></tr></table></figure></p><p>서버가 없다고 나옵니다. SSL을 적용 했기 때문에 http가 아닌 https 로 접속해야 합니다. https로 접속을 해 보면<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ ]$ curl https://172.31.27.193:9200</span><br><span class="line">curl: (60) Peer&apos;s Certificate issuer is not recognized.</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>또 다시 아까와는 다른 오류 메시지가 나오는데, 제가 사용한 인증서가 사설 인증서라서 나오는 경고입니다. -k 옵션을 추가 해 주면 경고를 무시합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ ]$ curl https://172.31.27.193:9200 -k</span><br><span class="line">&#123;&quot;error&quot;:&#123;&quot;root_cause&quot;:[&#123;&quot;type&quot;:&quot;security_exception&quot;,&quot;reason&quot;:&quot;missing authentication token for REST request [/]&quot;,&quot;header&quot;:&#123;&quot;WWW-Authenticate&quot;:&quot;Basic realm=\&quot;security\&quot; charset=\&quot;UTF-8\&quot;&quot;&#125;&#125;],&quot;type&quot;:&quot;security_exception&quot;,&quot;reason&quot;:&quot;missing authentication token for REST request [/]&quot;,&quot;header&quot;:&#123;&quot;WWW-Authenticate&quot;:&quot;Basic realm=\&quot;security\&quot; charset=\&quot;UTF-8\&quot;&quot;&#125;&#125;,&quot;status&quot;:401&#125;</span><br></pre></td></tr></table></figure></p><p>이제 조금 익숙한 화면이 나옵니다. -u 옵션으로 사용자 이름, 암호까지 넣어주면 이제 확인이 가능합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ ]$ curl https://172.31.27.193:9200 -k -u elastic</span><br><span class="line">Enter host password for user &apos;elastic&apos;:</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot; : &quot;es-demo-service&quot;,</span><br><span class="line">  &quot;cluster_name&quot; : &quot;es-demo&quot;,</span><br><span class="line">  &quot;cluster_uuid&quot; : &quot;VLakkqSHynSuf0g&quot;,</span><br><span class="line">  &quot;version&quot; : &#123;</span><br><span class="line">    &quot;number&quot; : &quot;6.1.1&quot;,</span><br><span class="line">    &quot;build_hash&quot; : &quot;bd92e7f&quot;,</span><br><span class="line">    &quot;build_date&quot; : &quot;2017-12-17T20:23:25.338Z&quot;,</span><br><span class="line">    &quot;build_snapshot&quot; : false,</span><br><span class="line">    &quot;lucene_version&quot; : &quot;7.1.0&quot;,</span><br><span class="line">    &quot;minimum_wire_compatibility_version&quot; : &quot;5.6.0&quot;,</span><br><span class="line">    &quot;minimum_index_compatibility_version&quot; : &quot;5.0.0&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;tagline&quot; : &quot;You Know, for Search&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>http SSL을 사용하려면 kibana 등에서도 <code>elasticsearch.url:</code> 값을 <code>https://...</code> 로 바꾸는 등 여러가지 설정을 해야 합니다. 그리고 지금 사용중인 인증서가 공인 기관의 인증서가 아닌 사설 인증서이기 때문에 elasticsearch에 REST API로 접속하는 프로그램들은 모두 인증서 경고에 대한 예외 처리를 히야 해서 손이 많이 가고, elasticsearch 코디네이트 노드와의 통신은 모두 같은 로컬 서버에서 이루어지기 때문에, http SSL 옵션은 다시 꺼 놓도록 하겠습니다.<br>코디네이션 노드의 <code>elasticsearcy.yml</code> 파일의 <code>xpack.security.http.ssl.enabled: true</code> 부분은 삭제 또는 주석처리 하도록 합니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/elasticsearch/elasticsearch.yml</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xpack.security.transport.ssl.enabled: true</span><br><span class="line">#xpack.security.http.ssl.enabled: true</span><br></pre></td></tr></table></figure><p>참고로, Kibana 의 Monitoring 화면을 확인 해 보면 아까 나타났었던 TLS 경고 문구가 사라져 있습니다.</p><h2 id="Kibana-SSL-설정"><a href="#Kibana-SSL-설정" class="headerlink" title="Kibana SSL 설정"></a>Kibana SSL 설정</h2><p>이제 Kibana에도 SSL을 설정 해 보도록 하겠습니다. 먼저 <code>kibana.yml</code> 파일을 열어서<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/kibana/kibana.yml</span><br></pre></td></tr></table></figure></p><p>아래 내용을 추가 해 줍니다. 중간에 잘 찾아 보면 주석 처리 된 부분이 있는데 이 부분을 풀고 수정 해도 됩니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server.ssl.enabled: true</span><br><span class="line">server.ssl.certificate: /usr/share/elasticsearch/cert/es-demo/es-demo.crt</span><br><span class="line">server.ssl.key: /usr/share/elasticsearch/cert/es-demo/es-demo.key</span><br></pre></td></tr></table></figure></p><p>이제 Kibana 를 재시작하고 나면<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo service kibana restart</span><br></pre></td></tr></table></figure></p><p>Kibana도 <code>https://서버주소:5601</code> 로 접속할 수 있습니다. 그런데 접속 해 보면 사설인증서를 알리는 경고창이 뜹니다.</p><p><img src="kibana-https.png" alt=""></p><p><code>고급</code> &gt; <code>예외 추가</code>를 눌러서 (브라우저 마다 다를 수 있습니다. 저는 FireFox Quantum을 씁니다.) 인증서를 허가 하면 이제 Kibana 화면이 나타납니다.</p><p><img src="kibana-https-done.png" alt=""></p><h2 id="Audit-감사-로그-설정"><a href="#Audit-감사-로그-설정" class="headerlink" title="Audit(감사) 로그 설정"></a>Audit(감사) 로그 설정</h2><p>X-Pack Security 에는 접속 및 사용 이력을 기록하는 감사 로그를 설정할 수 있습니다. 감사 로그 설정은 아래 문서를 참고해서 진행합니다.<br><a href="https://www.elastic.co/guide/en/x-pack/current/auditing.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/x-pack/current/auditing.html</a></p><p>감사 로그는 다음의 두가지 방법으로 기록할 수 있습니다. 둘 다 동시에 하는것도 가능합니다.</p><ol><li>elasticsearch 시스템 로그 파일에 기록</li><li>elasticsearch 인덱스 안에 도큐먼트로 색인</li></ol><p>저희는 2번째 방법처럼 elasticsearch 인덱스 안에 기록하도록 하겠습니다. <code>elasticsearcy.yml</code> 파일을 열고<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/elasticsearch/elasticsearch.yml</span><br></pre></td></tr></table></figure></p><p>아래 내용을 추가합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xpack.security.audit.enabled: true</span><br><span class="line">xpack.security.audit.outputs: [ &quot;index&quot; ]</span><br></pre></td></tr></table></figure></p><p>이제 elasticsearch를 재시작 하고 나면 이제부터 감사 로그가 <code>.security_audit_log-yyyy.mm.dd</code> 인덱스에 쌓이게 됩니다.</p><p>Kibana의 Dev Tool 에서<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -XGET &quot;http://서버주소:9200/.security_audit_log-*/_search&quot;</span><br></pre></td></tr></table></figure></p><p>로 확인이 가능합니다.</p><p>그런데 감사 로그는 기본적으로 모든 접속에 대한 이력을 쌓기 때문에 데이터가 쌓이는 속도가 어마무시 합니다. 가만히 있어도 .monitoring 이나 .watcher-history 같은 데이터와 같이 쌓이기 때문에 세밀하게 접속 정보를 모니터링 할게 아니라면 쌓이는데 필터링을 해 주는 것이 좋습니다.</p><p>오늘 포스트는 여기까지 해서 마치도록 하고 감사 로그의 추가적인 설정은 다음에 기회가 되면 또 다루어 보도록 하겠습니다. 다음 포스트에서는 X-Pack License 적용 및 사용자 생성에 대해 다루도록 하겠습니다.</p><blockquote><p><a href="/2018/01/2018-01-build-es-cluster-1">1. 서버 생성 및 Elasticsearch RPM 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-2">2. 메모리, 네트워크 설정 및 플러그인 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-3">3. 클러스터 구성 및 마스터, 데이터 노드 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-4">4. Kibana 설치 및 X-Pack Monitoring 확인</a><br><a href="/2018/01/2018-01-build-es-cluster-5">5. NFS 구성 및 elasticsearch 추가 설정</a><br><strong>6. X-Pack Security를 이용한 SSL 및 TLS 설정</strong><br><a href="/2018/01/2018-01-build-es-cluster-7">7. X-Pack License 적용 및 사용자 생성</a><br><a href="/2018/01/2018-01-build-es-cluster-8">8. Logstash 설치 및 Elasticsearch 기본 템플릿 설정</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;이번 포스트에서는 X-Pack Security를 이용한 보안 설정을 하도록 하겠습니다. 이전 또는 이후 내용들은 아래 포스트에서 확인하세요.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/2018/01/2018-01-build-es-clu
      
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/tags/Elasticsearch/"/>
    
      <category term="Elastic" scheme="http://kimjmin.net/tags/Elastic/"/>
    
      <category term="Elastic Cluster Settings" scheme="http://kimjmin.net/tags/Elastic-Cluster-Settings/"/>
    
      <category term="X-Pack" scheme="http://kimjmin.net/tags/X-Pack/"/>
    
  </entry>
  
  <entry>
    <title>Elastic Cluster 구성 5</title>
    <link href="http://kimjmin.net/2018/01/2018-01-build-es-cluster-5/"/>
    <id>http://kimjmin.net/2018/01/2018-01-build-es-cluster-5/</id>
    <published>2018-01-04T15:00:00.000Z</published>
    <updated>2018-01-12T05:41:23.728Z</updated>
    
    <content type="html"><![CDATA[<p>원래 이번 포스트에서는 X-Pack Security를 다루려고 했으나 몇가지 구성을 먼저 추가하려고 합니다. 우선 NFS(Network File System)을 설정해서 모든 서버의 <code>/usr/share/elasticsearch</code> 디렉토리를 동기화 시키고 업그레이드나 플러그인 설치 등을 한번에 할 수 있도록 하겠습니다.</p><p>참고로 NFS 설정은 잘못하다가 설정이 꼬여버릴 수 있으니 주의하시고 설정을 원하지 않으면 다음 포스트로 넘어가시기 바랍니다.<br>(저도 설정 하다가 네트워크 디렉토리 퍼미션 설정 등 몇가지가 꼬여서 싹 밀고 처음부터 새로 설치했습니다.) 🤯</p><p>이전 또는 이후 내용들은 아래 포스트에서 확인하세요.</p><blockquote><p><a href="/2018/01/2018-01-build-es-cluster-1">1. 서버 생성 및 Elasticsearch RPM 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-2">2. 메모리, 네트워크 설정 및 플러그인 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-3">3. 클러스터 구성 및 마스터, 데이터 노드 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-4">4. Kibana 설치 및 X-Pack Monitoring 확인</a><br><strong>5. NFS 구성 및 elasticsearch 추가 설정</strong><br><a href="/2018/01/2018-01-build-es-cluster-6">6. X-Pack Security를 이용한 SSL 및 TLS 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-7">7. X-Pack License 적용 및 사용자 생성</a><br><a href="/2018/01/2018-01-build-es-cluster-8">8. Logstash 설치 및 Elasticsearch 기본 템플릿 설정</a></p></blockquote><p>덧붙여 새벽에 페이스북에 달린 질문을 보고 잠시 고민이 되었습니다. 그리고 구성을 다음과 같이 데이터 노드 3개(마스터 겸임)와 코디네이트 노드(데이터를 저장하지 않고 애플리케이션과 통신만 담당하는, 클라이언트 노드 라고 부르기도 합니다) 노드로 바꾸기로 결정했습니다. 새로운 아키텍쳐의 구성은 다음과 같습니다.</p><p><img src="coordinate-node.png" alt=""></p><ul><li>데이터노드 1~3개 중 임의의 노드 하나가 마스터 노드를 겸하게 됩니다.</li><li>기존 마스터 노드는 코디네이트 노드로 Kibana 및 다른 애플리케이션과의 통신만 처리하게 됩니다.</li><li>코디네이트 노드는 다른 애플리케이션과 REST API를 사용합니다.(9200 포트)</li><li>코디네이트 노드와 데이터 노드들은 transport 프로토콜(9300 포트)로 데이터를 교환합니다.</li><li>데이터 노드들은 REST API를 사용하지 않도록 설정합니다. <code>http.enabled: false</code></li><li>코디네이트 노드 서버의 <code>/usr/share/elasticsearch</code> 디렉토리를 데이터 노드와 공유합니다.</li><li>보안그룹 1은 코디네이트 노드 서버에만 적용 되며 허가된 포트로만 외부 클라이언트와 통신이 가능합니다.</li><li>보안그룹 2는 모든 서버에 적용되며 이 그룹 안의 서버들 끼리는 자유롭게 통신이 가능합니다.</li></ul><h2 id="NFS-설정"><a href="#NFS-설정" class="headerlink" title="NFS 설정"></a>NFS 설정</h2><p>NFS 설정은 다음 포스트를 참고했습니다.<br><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nfs-mount-on-centos-6" target="_blank" rel="noopener">https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nfs-mount-on-centos-6</a></p><p>편의상 코디네이트 노드를 서버, 데이터 노드 3대를 클라이언트 라고 표현 하겠습니다. 서버의 주소는 <code>192.168.0.10</code>, 클라이언트의 주소는 각각 <code>192.168.0.11</code>,<code>192.168.0.12</code>,<code>192.168.0.13</code> 이라고 가정 하겠습니다.<br>우선 저희 Amazon linux 서버에는 <code>nfs-utils</code>,<code>nfs-utils-lib</code> 가 이미 설치 되어 있습니다. 설치되어 있지 않다면 위 포스트를 참고해서 설치하시면 됩니다.</p><p>4개의 모든 서버에서 먼저 elasticsearch 서비스를 중지합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo service elasticsearch stop</span><br></pre></td></tr></table></figure></p><h3 id="usr-share-elasticsearch-공유-설정"><a href="#usr-share-elasticsearch-공유-설정" class="headerlink" title="/usr/share/elasticsearch 공유 설정"></a><code>/usr/share/elasticsearch</code> 공유 설정</h3><p>먼저 elasticsearch 프로그램들이 들어있는 <code>/usr/share/elasticsearch</code> 디렉토리 공유를 설정하겠습니다. 공유를 하는 목적은 업그레이드나 플러그인 설치 등을 각 서버별로 하지 않고 한번에 적용할 수 있도록 하기 위함입니다.</p><h4 id="서버"><a href="#서버" class="headerlink" title="서버"></a>서버</h4><p>서버에서 <code>/etc/exports</code> 파일을 열고<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/exports</span><br></pre></td></tr></table></figure></p><p>아래 내용을 추가합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/usr/share/elasticsearch  192.168.0.11(rw,sync,no_root_squash,no_subtree_check)</span><br><span class="line">/usr/share/elasticsearch  192.168.0.12(rw,sync,no_root_squash,no_subtree_check)</span><br><span class="line">/usr/share/elasticsearch  192.168.0.13(rw,sync,no_root_squash,no_subtree_check)</span><br></pre></td></tr></table></figure></p><p>그리고 설정을 적용 해 줍니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo exportfs -a</span><br></pre></td></tr></table></figure></p><h4 id="클라이언트"><a href="#클라이언트" class="headerlink" title="클라이언트"></a>클라이언트</h4><p>이제 클라이언트를 설정합니다. 3개 시스템에 모두 적용 해 줘야 합니다.<br>먼저 기존의 <code>/usr/share/elasticsearch</code> 를 삭제하고 빈 디렉토리로 다시 만듭니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo rm -rf /usr/share/elasticsearch</span><br><span class="line">sudo mkdir /usr/share/elasticsearch</span><br></pre></td></tr></table></figure></p><p>그리고 나서 서버의 네트워크 디렉토리를 마운트 해 줍니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo mount 192.168.0.10:/usr/share/elasticsearch /usr/share/elasticsearch</span><br></pre></td></tr></table></figure></p><p>시스템 재시작 후에도 공유 디렉토리가 유지되도록 <code>/etc/fstab</code> 파일에 다음 내용을 추가합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/fstab</span><br><span class="line">192.168.0.10:/usr/share/elasticsearch    /usr/share/elasticsearch  nfs     auto,noatime,nolock,bg,nfsvers=3,intr,tcp,actimeo=1800  0 0</span><br></pre></td></tr></table></figure></p><h3 id="etc-elasticsearch-공유-설정"><a href="#etc-elasticsearch-공유-설정" class="headerlink" title="/etc/elasticsearch 공유 설정"></a><code>/etc/elasticsearch</code> 공유 설정</h3><p>다음은 config 파일들이 들어있는 <code>/etc/elasticsearch</code> 디렉토리 공유를 설정하겠습니다. config 파일들은 코디네이터 노드와 데이터 노드들이 구분되어야 하기 때문에 데이터 노드들은 서버에 <code>/etc/elasticsearch-data</code> 라는 디렉토리를 새로 만들어 이 디렉토리와 공유되도록 하겠습니다.</p><h4 id="서버-1"><a href="#서버-1" class="headerlink" title="서버"></a>서버</h4><p>먼저 서버에서 기존 <code>/etc/elasticsearch</code> 디렉토리를 권한 그대로 <code>/etc/elasticsearch-data</code>로 복사합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo cp -pr /etc/elasticsearch /etc/elasticsearch-data</span><br></pre></td></tr></table></figure></p><p>다시 <code>/etc/exports</code> 파일을 열고<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/exports</span><br></pre></td></tr></table></figure></p><p>아래 내용을 추가합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/etc/elasticsearch-data  192.168.0.11(rw,sync,no_root_squash,no_subtree_check)</span><br><span class="line">/etc/elasticsearch-data  192.168.0.12(rw,sync,no_root_squash,no_subtree_check)</span><br><span class="line">/etc/elasticsearch-data  192.168.0.13(rw,sync,no_root_squash,no_subtree_check)</span><br></pre></td></tr></table></figure></p><p>그리고 설정을 실행 해 줍니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo exportfs -a</span><br></pre></td></tr></table></figure></p><h4 id="클라이언트-1"><a href="#클라이언트-1" class="headerlink" title="클라이언트"></a>클라이언트</h4><p>다시 클라이언트로(3개 모두 실행해야 합니다) 가서 기존의 <code>/etc/elasticsearch</code> 에 있는 파일들을 모두 삭제 해 줍니다. 루트 권한으로 들어가서 삭제 하는 것이 편합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo su</span><br><span class="line">cd /etc/elasticsearch</span><br><span class="line">rm -rf ./*</span><br><span class="line">exit</span><br></pre></td></tr></table></figure></p><p>서버의 <code>/etc/elasticsearch-data</code> 네트워크 디렉토리를 클라이언트의 <code>/etc/elasticsearch</code>로 마운트 해 줍니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo mount 192.168.0.10:/etc/elasticsearch-data /etc/elasticsearch</span><br></pre></td></tr></table></figure></p><p>시스템 재시작 후에도 NFS가 유지되도록 <code>/etc/fstab</code> 파일에 다음 내용을 추가합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/fstab</span><br><span class="line">192.168.0.10:/etc/elasticsearch-data  /etc/elasticsearch  nfs     auto,noatime,nolock,bg,nfsvers=3,intr,tcp,actimeo=1800  0 0</span><br></pre></td></tr></table></figure></p><blockquote><p>만약 재시작 후 데이터 노드에서 오류가 나면 기존 데이터 디렉토리를 삭제해야 합니다.<br>아직 운영 데이터는 없기를 바랍니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo rm -rf /var/lib/elasticsearch/*</span><br></pre></td></tr></table></figure></p><p>그리고 혹시 클라이언트에 X-Pack 같은 플러그인 설정 파일들이 없다면 서버의 마스터 설정 디렉토리 <code>/etc/elasticsearch</code> 에서 데이터 설정 디렉토리 <code>/etc/elasticsearch-data</code> 로 복사 해줘야 합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo cp -rp /etc/elasticsearch/elasticsearch.keystore /etc/elasticsearch-data/elasticsearch.keystore</span><br><span class="line">sudo cp -rp /etc/elasticsearch/x-pack /etc/elasticsearch-data/x-pack</span><br></pre></td></tr></table></figure></p><p>파일 접근 권한 때문에 데이터 노드들이 실행이 안 될수 있습니다. 데이터 노드들의 그룹 권한을 아래와 같이 elasticsearch로 설정 해 주어야 합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo chown -R root:elasticsearch /etc/elasticsearch</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="elasticsearch-재설정"><a href="#elasticsearch-재설정" class="headerlink" title="elasticsearch 재설정"></a>elasticsearch 재설정</h2><p>이제 이전 포스트들을 참고 해서 <code>/etc/elasticsearch</code>,<code>/etc/elasticsearch-data</code> 안에 있는 설정 파일들을 데이터 노드 설정에 맞게 바꾸도록 합니다. 기존에 마스터 노드였던 노드는 코디네이터 노드로 다시 변경하겠습니다. 이후 모든 명령은 코디네이터 노드에서 실행 해 줍니다.</p><h3 id="Coordinate-Client-Node"><a href="#Coordinate-Client-Node" class="headerlink" title="Coordinate (Client) Node"></a>Coordinate (Client) Node</h3><p>먼저 코디네이트 노드의 메모리는 기존에 4GB 에서 2GB로 줄이도록 하겠습니다. 데이터 노드는 8GB 그대로 둡니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ ]$ sudo vim /etc/elasticsearch/jvm.options</span><br><span class="line">-Xms2g</span><br><span class="line">-Xmx2g</span><br></pre></td></tr></table></figure></p><p>이제 코디네이트 노드의 <code>elasticsearch.yml</code> 설정을 변경합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/elasticsearch/elasticsearch.yml</span><br></pre></td></tr></table></figure></p><p>마스터 노드가 코디네이트 노드로 바뀌었기 때문에 unicast 설정도 데이터노드 3개의 아이피를 넣어줍니다. 코디네이트 노드와 데이터 노드 설정 파일 모두 적용해야 합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">discovery.zen.ping.unicast.hosts:</span><br><span class="line">  - 192.168.0.11</span><br><span class="line">  - 192.168.0.12</span><br><span class="line">  - 192.168.0.13</span><br></pre></td></tr></table></figure></p><p>다음은 코디네이트 노드의 마스터와 데이터 설정을 모두 비활성화 시킵니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node.master: false</span><br><span class="line">node.data: false</span><br></pre></td></tr></table></figure></p><h3 id="Data-Node"><a href="#Data-Node" class="headerlink" title="Data Node"></a>Data Node</h3><p>데이터 노드의 <code>elasticsearch.yml</code> 설정을 변경합니다. 코디네이트 노드가 있는 서버에서 공유 디렉토리에 있는 설정 파일을 편집하면 됩니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/elasticsearch-data/elasticsearch.yml</span><br></pre></td></tr></table></figure></p><p>코디네이트 노드와 마찬가지로 unicast 설정을 데이터노드 3개의 아이피로 변경합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">discovery.zen.ping.unicast.hosts:</span><br><span class="line">  - 192.168.0.11</span><br><span class="line">  - 192.168.0.12</span><br><span class="line">  - 192.168.0.13</span><br></pre></td></tr></table></figure></p><p>기존의 <code>node.master: false</code> 부분은 삭제합니다.</p><p>마지막으로 데이터 노드들은 REST API를 사용하지 않도록 http 포트를 비활성화 시킵니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http.enabled: false</span><br></pre></td></tr></table></figure></p><p>이제 모든 설정이 끝났으면 서버들을 재시작 합니다. 개인적인 경험인데 한꺼번에 동시에 재시작 하니까 데이터노드 하나가 클러스터에 안 붙는 경우가 있었는데 그 서버만 다시 재시작 하면 정상적으로 붙습니다.</p><p>X-Pack 모니터링 화면에서 확인 해 보면 이번에는 데이터 노드 중 하나가 마스터를 겸하고 있고 기존의 마스터 노드는 계속 데이터를 저장하지 않는 코디네이트 노드로 남은 것을 확인할 수 있습니다.</p><p><img src="coordinate-monitoring.png" alt=""></p><p>이제 네트워크 파일 설정이 끝났으니 앞으로 환경 설정을 변경하거나 업그레이드, 패치 등을 할 때도 데이터 노드 서버에 접속할 일 없이 코디네이트 노드 서버에서 모든 것을 할 수 있게 되었습니다.</p><p>다음편에는 진짜로 X-Pack Security 설정을 다루도록 하겠습니다.</p><blockquote><p><a href="/2018/01/2018-01-build-es-cluster-1">1. 서버 생성 및 Elasticsearch RPM 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-2">2. 메모리, 네트워크 설정 및 플러그인 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-3">3. 클러스터 구성 및 마스터, 데이터 노드 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-4">4. Kibana 설치 및 X-Pack Monitoring 확인</a><br><strong>5. NFS 구성 및 elasticsearch 추가 설정</strong><br><a href="/2018/01/2018-01-build-es-cluster-6">6. X-Pack Security를 이용한 SSL 및 TLS 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-7">7. X-Pack License 적용 및 사용자 생성</a><br><a href="/2018/01/2018-01-build-es-cluster-8">8. Logstash 설치 및 Elasticsearch 기본 템플릿 설정</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;원래 이번 포스트에서는 X-Pack Security를 다루려고 했으나 몇가지 구성을 먼저 추가하려고 합니다. 우선 NFS(Network File System)을 설정해서 모든 서버의 &lt;code&gt;/usr/share/elasticsearch&lt;/cod
      
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/tags/Elasticsearch/"/>
    
      <category term="Elastic" scheme="http://kimjmin.net/tags/Elastic/"/>
    
      <category term="Elastic Cluster Settings" scheme="http://kimjmin.net/tags/Elastic-Cluster-Settings/"/>
    
  </entry>
  
  <entry>
    <title>Elastic Cluster 구성 4</title>
    <link href="http://kimjmin.net/2018/01/2018-01-build-es-cluster-4/"/>
    <id>http://kimjmin.net/2018/01/2018-01-build-es-cluster-4/</id>
    <published>2018-01-03T15:00:00.000Z</published>
    <updated>2018-01-12T05:41:22.872Z</updated>
    
    <content type="html"><![CDATA[<p>이번 포스트에서는 Kibana 설치 및 X-Pack 설치를 하고 Monitoring을 통한 클러스터 상태를 확인 해 보도록 하겠습니다. 이전 또는 이후 내용들은 아래 포스트에서 확인하세요.</p><blockquote><p><a href="/2018/01/2018-01-build-es-cluster-1">1. 서버 생성 및 Elasticsearch RPM 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-2">2. 메모리, 네트워크 설정 및 플러그인 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-3">3. 클러스터 구성 및 마스터, 데이터 노드 설정</a><br><strong>4. Kibana 설치 및 X-Pack Monitoring 확인</strong><br><a href="/2018/01/2018-01-build-es-cluster-5">5. NFS 구성 및 elasticsearch 추가 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-6">6. X-Pack Security를 이용한 SSL 및 TLS 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-7">7. X-Pack License 적용 및 사용자 생성</a><br><a href="/2018/01/2018-01-build-es-cluster-8">8. Logstash 설치 및 Elasticsearch 기본 템플릿 설정</a></p></blockquote><h2 id="Kibana-설치"><a href="#Kibana-설치" class="headerlink" title="Kibana 설치"></a>Kibana 설치</h2><p>다음 링크를 참고하여 Kibana 역시 yum 을 이용한 rpm 으로 설치하겠습니다.<br><a href="https://www.elastic.co/guide/en/kibana/current/rpm.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/kibana/current/rpm.html</a></p><p>Kibana도 elasticsearch와 마찬가지로 <code>/etc/yum.repos.d/</code> 디렉토리 아래에 <code>kibana.repo</code> 파일을 만들고 아래와 같이 내용을 입력합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[kibana-6.x]</span><br><span class="line">name=Kibana repository for 6.x packages</span><br><span class="line">baseurl=https://artifacts.elastic.co/packages/6.x/yum</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch</span><br><span class="line">enabled=1</span><br><span class="line">autorefresh=1</span><br><span class="line">type=rpm-md</span><br></pre></td></tr></table></figure></p><p>파일을 추가하고 나서 이제 yum을 이용해서 Kibana를 설치합니다. 오류가 나지 않도록 설치 된 elasticsearch 와 동일한 버전으로 설치합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum install kibana -y</span><br></pre></td></tr></table></figure></p><p>마찬가지로 위와 같이 하면 최신 버전이 설치되고, 특정 버전을 설치하고 싶으면 다음과 같이 뒤에 버전을 명시 해 주면 됩니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum install kibana-6.0.0 -y</span><br></pre></td></tr></table></figure></p><p>설치 문서에 나와 있는대로 <code>ps -p 1</code> 를 이용해서 SysV <code>init</code> 과 <code>systemd</code> 중 어떤 서비스를 사용하는지 확인합니다. 제가 만든 인스턴스는 init 을 사용하고 있습니다. 서비스에 등록하기 위해 다음 명령을 실행합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo chkconfig --add kibana</span><br></pre></td></tr></table></figure></p><p>이제 Kibana도 service 명령으로 실행 또는 종료가 가능합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo -i service kibana start</span><br><span class="line">sudo -i service kibana stop</span><br></pre></td></tr></table></figure></p><h2 id="Kibana-설정"><a href="#Kibana-설정" class="headerlink" title="Kibana 설정"></a>Kibana 설정</h2><p>Kibana RPM 버전의 기본적인 설치 경로들은 아래와 같습니다. 대부분의 설정이 <a href="/2018/01/2018-01-build-es-cluster-1/#Elasticsearch-설치">1. 서버 생성 및 Elasticsearch RPM 설치</a> 포스트에서 다루었던 Elasticsearch 설정과 유사합니다.</p><ul><li>기본 프로그램 (<strong>$KIBANA_HOME</strong>) : <code>/usr/share/kibana</code><ul><li>실행 파일 : <code>bin/kibana</code></li><li>플러그인 : <code>plugins</code></li></ul></li><li>설정 : <code>/etc/kibana/kibana.yml</code></li><li>데이터 (<strong>path.data</strong>) : <code>/var/lib/kibana</code></li><li>optimize : <code>/usr/share/kibana/optimize</code></li><li>로그 (<strong>path.logs</strong>) : <code>/var/log/kibana</code></li></ul><p>데이터와 로그 파일의 경로는 <code>/etc/kibana/kibana.yml</code> 설정 파일에서 수정이 가능합니다.<br>모든 경로에 접근하기 위해서는 기본적으로 root 권한을 필요로 합니다. 예를 들어 elasticsearch.yml 설정 파일을 vim 으로 편집하려고 하면 다음과 같이 실행해야 합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/kibana/kibana.yml</span><br></pre></td></tr></table></figure></p><h3 id="X-Pack-설치"><a href="#X-Pack-설치" class="headerlink" title="X-Pack 설치"></a>X-Pack 설치</h3><p>Kibana도 Elasticsearch 와 마찬가지로 X-Pack을 설치 해야 합니다. X-Pack 설치에 대한 내용은 아래 도큐먼트를 참고해서 진행합니다.<br><a href="https://www.elastic.co/guide/en/kibana/current/installing-xpack-kb.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/kibana/current/installing-xpack-kb.html</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ ]$ cd /usr/share/kibana</span><br><span class="line">[ ]$ sudo bin/kibana-plugin install x-pack</span><br><span class="line">Attempting to transfer from https://artifacts.elastic.co/downloads/kibana-plugins/x-pack/x-pack-6.0.0.zip</span><br><span class="line">Transferring 120307264 bytes....................</span><br><span class="line">Transfer complete</span><br><span class="line">Retrieving metadata from plugin archive</span><br><span class="line">Extracting plugin archive</span><br><span class="line">Extraction complete</span><br><span class="line">Optimizing and caching browser bundles...</span><br><span class="line"></span><br><span class="line">Plugin installation complete</span><br></pre></td></tr></table></figure><p>패스워드는 Elasticsearch 에서 설정 했기 때문에 Kibana 에서는 따로 설정하지 않아도 됩니다.</p><h3 id="kibana-yml-설정"><a href="#kibana-yml-설정" class="headerlink" title="kibana.yml 설정"></a>kibana.yml 설정</h3><p>이제 Kibana 를 실행하고 실행 로그를 살펴보면…</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo service kibana start</span><br><span class="line">sudo tail -f /var/log/kibana/kibana.stdout</span><br></pre></td></tr></table></figure><p>아래와 같은 오류들이 나타납니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;type&quot;:&quot;log&quot;,&quot;@timestamp&quot;:&quot;2018-01-02T07:09:36Z&quot;,&quot;tags&quot;:[&quot;warning&quot;,&quot;elasticsearch&quot;,&quot;admin&quot;],&quot;pid&quot;:3388,&quot;message&quot;:&quot;Unable to revive connection: http://localhost:9200/&quot;&#125;</span><br><span class="line">&#123;&quot;type&quot;:&quot;log&quot;,&quot;@timestamp&quot;:&quot;2018-01-02T07:09:36Z&quot;,&quot;tags&quot;:[&quot;warning&quot;,&quot;elasticsearch&quot;,&quot;admin&quot;],&quot;pid&quot;:3388,&quot;message&quot;:&quot;No living connections&quot;&#125;</span><br></pre></td></tr></table></figure></p><p>Elasticsearch와 정상적으로 통신을 하고, 외부에서 접근하기 위해 <code>kibana.yml</code>에 몇가지 설정을 추가해야 합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/kibana/kibana.yml</span><br></pre></td></tr></table></figure></p><p>먼저 Kibana 는 기본적으로 localhost:9200 을 통해 elasticsearch에 접근하도록 되어 있습니다. 저희는 앞에서 elasticsearch의 <code>network.host</code>를 실제 IP 주소로 수정했기 때문에 Kibana 역시 실제 IP 주소로 elasticsearch를 찾도록 <code>elasticsearch.url</code> 설정을 실제 IP 주소로 설정 해 주어야 합니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">elasticsearch.url: &quot;http://192.168.0.10:9200&quot;</span><br></pre></td></tr></table></figure><p>그리고 외부에서 접근하기 위해서는 <code>server.host</code> 도 실제 IP 주소로 수정해야 합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server.host: &quot;192.168.0.10&quot;</span><br></pre></td></tr></table></figure></p><p>그리고 X-Pack Security를 설치했기 때문에 Elasticsearch 에 접속을 위한 kibana 계정의 아이디와 패스워드도 입력합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">elasticsearch.username: &quot;kibana&quot;</span><br><span class="line">elasticsearch.password: &quot;changeme&quot;</span><br></pre></td></tr></table></figure></p><p>Kibana는 기본적으로 5601 포트를 사용합니다. (AWS의 경우) 외부에서 접근 가능하도록 보안 그룹에 5601 포트를 추가로 오픈 해 줍니다.</p><p><img src="kibana_sec_group.png" alt=""></p><p><code>kibana.yml</code>에 위 설정을을 추가하고 보안 그룹 설정을 마치면 Kibana 서비스를 재시작 합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ ]$ sudo service kibana restart</span><br><span class="line">kibana stopped.</span><br><span class="line">kibana started</span><br></pre></td></tr></table></figure></p><h2 id="X-Pack-Monitoring-확인"><a href="#X-Pack-Monitoring-확인" class="headerlink" title="X-Pack Monitoring 확인"></a>X-Pack Monitoring 확인</h2><p>이제 웹브라우저를 열고 해당 <a href="http://서버주소:5601" target="_blank" rel="noopener">http://서버주소:5601</a> 로 접속을 하면 Kibana 로그인 화면이 나타납니다.</p><p><img src="kibana_login.png" alt=""></p><p>처음 X-Pack을 설치할 때 만들었던 아이디와 패스워드를 가지고 로그인을 합니다. 로그인 뒤에 왼쪽의 Monitoring 메뉴를 클릭 해 보면 현재 시스템 상태를 확인 해 볼 수 있습니다. </p><p><img src="monitoring-1.png" alt=""></p><p><code>Nodes</code>를 클릭해서 들어가 보면 ★ 표시가 된 마스터 노드, 그리고 데이터 노드들이 보이고, 마스터 노드에는 데이터가 저장되지 않은 것을 확인할 수 있습니다.</p><p><img src="monitoring-2.png" alt=""></p><p>지금까지 Kibana 설치 및 X-Pack Monitoring 사용에 대해 살펴 보았습니다.<br>다음 포스트에서는 X-Pack Security 설정을 통해 클라이언트 및 노드들 간의 통신을 암호화 하는 방법에 대해 살펴보도록 하겠습니다.</p><blockquote><p><a href="/2018/01/2018-01-build-es-cluster-1">1. 서버 생성 및 Elasticsearch RPM 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-2">2. 메모리, 네트워크 설정 및 플러그인 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-3">3. 클러스터 구성 및 마스터, 데이터 노드 설정</a><br><strong>4. Kibana 설치 및 X-Pack Monitoring 확인</strong><br><a href="/2018/01/2018-01-build-es-cluster-5">5. NFS 구성 및 elasticsearch 추가 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-6">6. X-Pack Security를 이용한 SSL 및 TLS 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-7">7. X-Pack License 적용 및 사용자 생성</a><br><a href="/2018/01/2018-01-build-es-cluster-8">8. Logstash 설치 및 Elasticsearch 기본 템플릿 설정</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;이번 포스트에서는 Kibana 설치 및 X-Pack 설치를 하고 Monitoring을 통한 클러스터 상태를 확인 해 보도록 하겠습니다. 이전 또는 이후 내용들은 아래 포스트에서 확인하세요.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/2
      
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/tags/Elasticsearch/"/>
    
      <category term="Elastic" scheme="http://kimjmin.net/tags/Elastic/"/>
    
      <category term="Elastic Cluster Settings" scheme="http://kimjmin.net/tags/Elastic-Cluster-Settings/"/>
    
      <category term="X-Pack" scheme="http://kimjmin.net/tags/X-Pack/"/>
    
  </entry>
  
  <entry>
    <title>Elastic Cluster 구성 3</title>
    <link href="http://kimjmin.net/2018/01/2018-01-build-es-cluster-3/"/>
    <id>http://kimjmin.net/2018/01/2018-01-build-es-cluster-3/</id>
    <published>2018-01-02T15:00:00.000Z</published>
    <updated>2018-01-12T05:41:22.018Z</updated>
    
    <content type="html"><![CDATA[<p>이번 포스트에서는 클러스터 구성 및 마스터, 데이터 노드 설정에 대해서 다루도록 하겠습니다. 이전 또는 이후 내용들은 아래 포스트에서 확인하세요.</p><blockquote><p><a href="/2018/01/2018-01-build-es-cluster-1">1. 서버 생성 및 Elasticsearch RPM 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-2">2. 메모리, 네트워크 설정 및 플러그인 설치</a><br><strong>3. 클러스터 구성 및 마스터, 데이터 노드 설정</strong><br><a href="/2018/01/2018-01-build-es-cluster-4">4. Kibana 설치 및 X-Pack Monitoring 확인</a><br><a href="/2018/01/2018-01-build-es-cluster-5">5. NFS 구성 및 elasticsearch 추가 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-6">6. X-Pack Security를 이용한 SSL 및 TLS 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-7">7. X-Pack License 적용 및 사용자 생성</a><br><a href="/2018/01/2018-01-build-es-cluster-8">8. Logstash 설치 및 Elasticsearch 기본 템플릿 설정</a></p></blockquote><h2 id="데이터-노드-추가"><a href="#데이터-노드-추가" class="headerlink" title="데이터 노드 추가"></a>데이터 노드 추가</h2><p>앞의 두 포스트에서 Elasticsearch 서버 설치를 완료 했습니다. 4개 서버로 구성된 클러스터를 만들기 위해서는 앞의 내용대로 서버를 하나씩 만드는 방법도 있겠지만, AWS 에는 서버의 이미지 스냅샷을 찍어 그 이미지를 기준으로 새로운 서버를 만드는 기능이 있어 저는 그 방법을 이용하도록 하겠습니다.</p><p>먼저 앞서 만든 인스턴스의 이미지를 저장합니다.</p><p><img src="snapshot_save.png" alt=""></p><p>이제 새로운 인스턴스를 생성할 때 저장 해 놓은 이미지를 가지고 생성을 합니다.</p><p><img src="snapshot_create.png" alt=""></p><p>새 서버들이 완성되면 이 서버들 끼리는 통신이 가능하도록 보안 그룹을 설정 해 주어야 합니다.<br>보안 그룹을 하나 만들고 나서 소스에 해당 보안 그룹의 id를 적으면 그 보안그룹에 소속된 인스턴스 끼리 자유롭게 통신이 가능합니다. </p><p><img src="security_rule.png" alt=""></p><p>저는 아래와 같이 보안 그룹을 2개를 만들어 한 그룹에는 4개 인스턴스 전체를, 한 그룹은 마스터 노드가 속해 있는 인스턴스를 할당해서 일부 포트만 오픈 했습니다. 이렇게 하면 4개의 노드들은 자유롭게 데이터를 주고받을 수 있고, 외부에서 접속하기 위해서는 마스터 노드를 통해서만 접근이 가능합니다.</p><p><img src="security_architecture.png" alt=""></p><p>이제 설정을 완료 한 뒤에 추가한 3개의 노드들을 차례로 실행시키면서 마스터 노드의 로그를 살펴보면…</p><p>노드 바인딩이 되지 않습니다. 추가한 노드들의 로그를 살펴보면 아래와 같은 에러 로그들이 보입니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[2017-12-29T08:17:53,144][INFO ][o.e.d.z.ZenDiscovery     ] [es-master] failed to send join request to master </span><br><span class="line">[&#123;es-master&#125;&#123;KTKlgNlqllbkaw&#125;&#123;7QMJWBW40MIw&#125;&#123;192.168.0.10&#125;&#123;192.168.0.10:9300&#125;&#123;ml.max_open_jobs=10, ml.enabled=true&#125;], </span><br><span class="line">reason [RemoteTransportException[[es-master][192.168.0.10:9300][internal:discovery/zen/join]]; </span><br><span class="line">nested: IllegalArgumentException[can&apos;t add node &#123;es-master&#125;&#123;KTKlgNlqllbkaw&#125;&#123;7QMJWBW40MIw&#125;&#123;192.168.0.11&#125;&#123;192.168.0.11:9300&#125;</span><br><span class="line">&#123;ml.max_open_jobs=10, ml.enabled=true&#125;, found existing node &#123;es-master&#125;&#123;KTKlgNlqllbkaw&#125;&#123;7QMJWBW40MIw&#125;&#123;192.168.0.10&#125;&#123;192.168.0.10:9300&#125;</span><br><span class="line">&#123;ml.max_open_jobs=10, ml.enabled=true&#125; with the same id but is a different node instance]; ]</span><br></pre></td></tr></table></figure><p>아마 이미지를 복사하지 않고 하나씩 만들었다면 위와 같은 로그가 나타나지 않을 것입니다. 처음 저장한 이미지에서 elasticsearch의 path.data 경로에 이미 생성된 노드의 정보가 있어서 오류가 난 것입니다. 추가한 노드들에서는 이 데이터들을 먼저 삭제 한 후에 실행을 해야 합니다.</p><p>데이터 노드를 추가한 뒤에 먼저 다음 설정들을 진행합니다.</p><ul><li><p>서비스 중지</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo service elasticsearch stop</span><br></pre></td></tr></table></figure></li><li><p>데이터 디렉토리 삭제</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo rm -rf /var/lib/elasticsearch/nodes</span><br></pre></td></tr></table></figure></li><li><p>호스트 네임 변경: 노드 이름이 호스트명으로 할당되도록 설정되어 있으므로, 각 데이터 노드들의 호스트명을 해당 노드에 맞게 바꿔줍니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/sysconfig/network</span><br><span class="line">HOSTNAME=es-data-1</span><br></pre></td></tr></table></figure></li><li><p>이제 서버를 재시작 합니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo reboot</span><br></pre></td></tr></table></figure></li></ul><p>데이터 노드를 하나씩 재실행 시키면서 마스터 노드의 로그를 보면 노드가 하나씩 바인딩 되는 것을 확인할 수 있습니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[2018-01-02T05:57:55,000][INFO ][o.e.c.s.MasterService    ] [es-master] zen-disco-node-join[&#123;es-data-1&#125;&#123;OgBrTj6zQ&#125;&#123;WTWfWw3w&#125;&#123;192.168.0.3&#125;&#123;192.168.0.3:9300&#125;&#123;ml.max_open_jobs=10, ml.enabled=true&#125;], reason: added &#123;&#123;es-data-1&#125;&#123;OgBrTj6zQ&#125;&#123;WTWfWw3w&#125;&#123;192.168.0.3&#125;&#123;192.168.0.3:9300&#125;&#123;ml.max_open_jobs=10, ml.enabled=true&#125;,&#125;</span><br><span class="line">[2018-01-02T05:57:55,937][INFO ][o.e.c.s.ClusterApplierService] [es-master] added &#123;&#123;es-data-1&#125;&#123;OgBrTj6zQ&#125;&#123;WTWfWw3w&#125;&#123;192.168.0.3&#125;&#123;192.168.0.3:9300&#125;&#123;ml.max_open_jobs=10, ml.enabled=true&#125;,&#125;, reason: apply cluster state (from master [master &#123;es-master&#125;&#123;KTKlgNlqRcKqfyzLllbkaw&#125;&#123;AcalEOAwS-OHeQYQm_qq1Q&#125;&#123;192.168.0.1&#125;&#123;192.168.0.1:9300&#125;&#123;ml.max_open_jobs=10, ml.enabled=true&#125; committed version [13] source [zen-disco-node-join[&#123;es-data-1&#125;&#123;OgBrTj6zQ&#125;&#123;WTWfWw3w&#125;&#123;192.168.0.3&#125;&#123;192.168.0.3:9300&#125;&#123;ml.max_open_jobs=10, ml.enabled=true&#125;]]])</span><br><span class="line"></span><br><span class="line">[2018-01-02T05:58:51,582][INFO ][o.e.c.s.MasterService    ] [es-master] zen-disco-node-join[&#123;es-data-2&#125;&#123;9lSNRqQ&#125;&#123;XqoDP-1g&#125;&#123;192.168.0.2&#125;&#123;192.168.0.2:9300&#125;&#123;ml.max_open_jobs=10, ml.enabled=true&#125;], reason: added &#123;&#123;es-data-2&#125;&#123;9lSNRqQ&#125;&#123;XqoDP-1g&#125;&#123;192.168.0.2&#125;&#123;192.168.0.2:9300&#125;&#123;ml.max_open_jobs=10, ml.enabled=true&#125;,&#125;</span><br><span class="line">[2018-01-02T05:58:52,286][INFO ][o.e.c.s.ClusterApplierService] [es-master] added &#123;&#123;es-data-2&#125;&#123;9lSNRqQ&#125;&#123;XqoDP-1g&#125;&#123;192.168.0.2&#125;&#123;192.168.0.2:9300&#125;&#123;ml.max_open_jobs=10, ml.enabled=true&#125;,&#125;, reason: apply cluster state (from master [master &#123;es-master&#125;&#123;KTKlgNlqRcKqfyzLllbkaw&#125;&#123;AcalEOAwS-OHeQYQm_qq1Q&#125;&#123;192.168.0.1&#125;&#123;192.168.0.1:9300&#125;&#123;ml.max_open_jobs=10, ml.enabled=true&#125; committed version [26] source [zen-disco-node-join[&#123;es-data-2&#125;&#123;9lSNRqQ&#125;&#123;XqoDP-1g&#125;&#123;192.168.0.2&#125;&#123;192.168.0.2:9300&#125;&#123;ml.max_open_jobs=10, ml.enabled=true&#125;]]])</span><br><span class="line"></span><br><span class="line">[2018-01-02T05:59:27,587][INFO ][o.e.c.s.MasterService    ] [es-master] zen-disco-node-join[&#123;es-data-3&#125;&#123;3OLGwIZQ&#125;&#123;wjDTfuTA&#125;&#123;192.168.0.4&#125;&#123;192.168.0.4:9300&#125;&#123;ml.max_open_jobs=10, ml.enabled=true&#125;], reason: added &#123;&#123;es-data-3&#125;&#123;3OLGwIZQ&#125;&#123;wjDTfuTA&#125;&#123;192.168.0.4&#125;&#123;192.168.0.4:9300&#125;&#123;ml.max_open_jobs=10, ml.enabled=true&#125;,&#125;</span><br><span class="line">[2018-01-02T05:59:28,562][INFO ][o.e.c.s.ClusterApplierService] [es-master] added &#123;&#123;es-data-3&#125;&#123;3OLGwIZQ&#125;&#123;wjDTfuTA&#125;&#123;192.168.0.4&#125;&#123;192.168.0.4:9300&#125;&#123;ml.max_open_jobs=10, ml.enabled=true&#125;,&#125;, reason: apply cluster state (from master [master &#123;es-master&#125;&#123;KTKlgNlqRcKqfyzLllbkaw&#125;&#123;AcalEOAwS-OHeQYQm_qq1Q&#125;&#123;192.168.0.1&#125;&#123;192.168.0.1:9300&#125;&#123;ml.max_open_jobs=10, ml.enabled=true&#125; committed version [36] source [zen-disco-node-join[&#123;es-data-3&#125;&#123;3OLGwIZQ&#125;&#123;wjDTfuTA&#125;&#123;192.168.0.4&#125;&#123;192.168.0.4:9300&#125;&#123;ml.max_open_jobs=10, ml.enabled=true&#125;]]])</span><br></pre></td></tr></table></figure><h2 id="configuration-설정"><a href="#configuration-설정" class="headerlink" title="configuration 설정."></a>configuration 설정.</h2><p>클러스터 구성이 완료 되었으니 이제 각 노드별로 상이한 옵션들을 설정 하겠습니다.<br>먼저 마스터 노드의 Java Heap 메모리는 4gb로 조정합니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/elasticsearch/jvm.options</span><br><span class="line"></span><br><span class="line">-Xms4g</span><br><span class="line">-Xmx4g</span><br></pre></td></tr></table></figure><p>마스터 노드는 데이터를 저장하지 않도록 <code>elasticsearch.yml</code> 에서 <code>node.master: true</code>, <code>node.data: false</code> 를 추가합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/elasticsearch/elasticsearch.yml</span><br><span class="line"></span><br><span class="line">node.master: true</span><br><span class="line">node.data: false</span><br></pre></td></tr></table></figure></p><p>각 데이터 노드들은 반대로 <code>node.master: false</code>, <code>node.data: true</code> 를 추가합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/elasticsearch/elasticsearch.yml</span><br><span class="line"></span><br><span class="line">node.master: false</span><br><span class="line">node.data: true</span><br></pre></td></tr></table></figure></p><p>이제 모든 노드들의 서비스 또는 서버를 재 시작합니다.</p><p><img src="reboot_all.png" alt=""></p><p>지금까지 클러스터 구성 및 마스터, 데이터 노드 설정에 대해 살펴보았습니다.<br>다음 포스트에서는 Kibana를 설치하고 클러스터에 데이터들이 저희 구상대로 정상적으로 분배 되었는지 X-Pack Monitoring 을 통해서 확인 해 보도록 하겠습니다.</p><blockquote><p><a href="/2018/01/2018-01-build-es-cluster-1">1. 서버 생성 및 Elasticsearch RPM 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-2">2. 메모리, 네트워크 설정 및 플러그인 설치</a><br><strong>3. 클러스터 구성 및 마스터, 데이터 노드 설정</strong><br><a href="/2018/01/2018-01-build-es-cluster-4">4. Kibana 설치 및 X-Pack Monitoring 확인</a><br><a href="/2018/01/2018-01-build-es-cluster-5">5. NFS 구성 및 elasticsearch 추가 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-6">6. X-Pack Security를 이용한 SSL 및 TLS 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-7">7. X-Pack License 적용 및 사용자 생성</a><br><a href="/2018/01/2018-01-build-es-cluster-8">8. Logstash 설치 및 Elasticsearch 기본 템플릿 설정</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;이번 포스트에서는 클러스터 구성 및 마스터, 데이터 노드 설정에 대해서 다루도록 하겠습니다. 이전 또는 이후 내용들은 아래 포스트에서 확인하세요.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/2018/01/2018-01-build-es-
      
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/tags/Elasticsearch/"/>
    
      <category term="Elastic" scheme="http://kimjmin.net/tags/Elastic/"/>
    
      <category term="Elastic Cluster Settings" scheme="http://kimjmin.net/tags/Elastic-Cluster-Settings/"/>
    
  </entry>
  
  <entry>
    <title>Elastic Cluster 구성 2</title>
    <link href="http://kimjmin.net/2018/01/2018-01-build-es-cluster-2/"/>
    <id>http://kimjmin.net/2018/01/2018-01-build-es-cluster-2/</id>
    <published>2018-01-01T15:00:00.000Z</published>
    <updated>2018-01-12T05:41:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>이번 포스트에서는 네트워크 설정 및 플러그인 설치에 대해서 다루도록 하도록 하겠습니다. 이전 또는 이후 내용들은 아래 포스트에서 확인하세요.</p><blockquote><p><a href="/2018/01/2018-01-build-es-cluster-1">1. 서버 생성 및 Elasticsearch RPM 설치</a><br><strong>2. 메모리, 네트워크 설정 및 플러그인 설치</strong><br><a href="/2018/01/2018-01-build-es-cluster-3">3. 클러스터 구성 및 마스터, 데이터 노드 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-4">4. Kibana 설치 및 X-Pack Monitoring 확인</a><br><a href="/2018/01/2018-01-build-es-cluster-5">5. NFS 구성 및 elasticsearch 추가 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-6">6. X-Pack Security를 이용한 SSL 및 TLS 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-7">7. X-Pack License 적용 및 사용자 생성</a><br><a href="/2018/01/2018-01-build-es-cluster-8">8. Logstash 설치 및 Elasticsearch 기본 템플릿 설정</a></p></blockquote><h2 id="Java-Heap-메모리-설정"><a href="#Java-Heap-메모리-설정" class="headerlink" title="Java Heap 메모리 설정."></a>Java Heap 메모리 설정.</h2><p>Java Heap 메모리는 <code>jvm.options</code> 파일에서 설정합니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/elasticsearch/jvm.options</span><br></pre></td></tr></table></figure><p>마스터 노드는 4GB, 데이터 노드는 8GB로 각각 설정을 할 예정입니다. 여기서는 우선 8GB로 설정 합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-Xms8g</span><br><span class="line">-Xmx8g</span><br></pre></td></tr></table></figure></p><p>Java Heap 외에 시스템 메모리의 절반은 루씬 파일 캐시를 위해 남겨둬야 합니다. 자세한 설명이 아래 블로그들에 나와 있으니 한번은 꼭 읽어보도록 권해 드립니다.</p><ul><li><a href="https://www.elastic.co/kr/blog/performance-considerations-elasticsearch-indexing" target="_blank" rel="noopener">Elasticsearch 인덱싱에 대한 성능 고려 사항</a></li><li><a href="https://www.elastic.co/kr/blog/performance-indexing-2-0" target="_blank" rel="noopener">Elasticsearch 2.0 인덱싱 성능 고려사항</a></li><li><a href="https://www.elastic.co/blog/a-heap-of-trouble" target="_blank" rel="noopener">A Heap of Trouble: Managing Elasticsearch’s Managed Heap</a></li></ul><h2 id="네트워크-설정"><a href="#네트워크-설정" class="headerlink" title="네트워크 설정"></a>네트워크 설정</h2><p>네트워크 설정은 <code>elasticsearch.yml</code> 설정 파일의 <code>network.host</code> 부분을 수정합니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/elasticsearch/elasticsearch.yml</span><br></pre></td></tr></table></figure><p>보통은 <code>network.host: 192.168.0.1</code> 과 같은 형식으로 IP 주소를 직접 입력해도 되지만, 더 간편하게 <code>_local_</code>, <code>_site_</code>, <code>_global_</code> 같은 값 들을 이용할 수도 있습니다. 저희 서버는 아래와 같이 설정하였습니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">network.host: _site_</span><br></pre></td></tr></table></figure><p>network.host 의 값들에 대해서는 아래 페이지를 참고하시기 바랍니다.<br><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.1/modules-network.html#network-interface-values" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/6.1/modules-network.html#network-interface-values</a></p><h2 id="Bootstrap-Check"><a href="#Bootstrap-Check" class="headerlink" title="Bootstrap Check"></a>Bootstrap Check</h2><p>기본적으로 아래 문서에 나와있는 설정들은 모두 확인 하도록 합니다.<br><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.1/important-settings.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/6.1/important-settings.html</a></p><h3 id="bootstrap-memory-lock-활성"><a href="#bootstrap-memory-lock-활성" class="headerlink" title="bootstrap.memory_lock 활성"></a>bootstrap.memory_lock 활성</h3><p><code>elasticsearch.yml</code> 설정 파일에서 <code>bootstrap.memory_lock</code> 을 활성화 합니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bootstrap.memory_lock: true</span><br></pre></td></tr></table></figure><p>설정 후 elasticsearch를 재시작하면 실행에 실패하는 경우가 있습니다. 시스템 로그를 보면 친절하게 어떻게 설정을 해 줘야 하는지 안내하고 있습니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[2017-12-29T06:16:43,809][WARN ][o.e.b.JNANatives         ] Unable to lock JVM Memory: error=12, reason=Cannot allocate memory</span><br><span class="line">[2017-12-29T06:16:43,811][WARN ][o.e.b.JNANatives         ] This can result in part of the JVM being swapped out.</span><br><span class="line">[2017-12-29T06:16:43,811][WARN ][o.e.b.JNANatives         ] Increase RLIMIT_MEMLOCK, soft limit: 65536, hard limit: 65536</span><br><span class="line">[2017-12-29T06:16:43,812][WARN ][o.e.b.JNANatives         ] These can be adjusted by modifying /etc/security/limits.conf, for example:</span><br><span class="line"># allow user &apos;elasticsearch&apos; mlockall</span><br><span class="line">elasticsearch soft memlock unlimited</span><br><span class="line">elasticsearch hard memlock unlimited</span><br><span class="line">[2017-12-29T06:16:43,812][WARN ][o.e.b.JNANatives         ] If you are logged in interactively, you will have to re-login for the new limits to take effect.</span><br><span class="line">...</span><br><span class="line">[1] bootstrap checks failed</span><br><span class="line">[1]: memory locking requested for elasticsearch process but memory is not locked</span><br></pre></td></tr></table></figure><p><code>/etc/security/limits.conf</code> 파일을 열고<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/security/limits.conf</span><br></pre></td></tr></table></figure></p><p><code>elasticsearch soft memlock unlimited</code>, <code>elasticsearch hard memlock unlimited</code> 내용을 추가 해 줍니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">#ftp             hard    nproc           0</span><br><span class="line">#@student        -       maxlogins       4</span><br><span class="line"></span><br><span class="line">elasticsearch soft memlock unlimited</span><br><span class="line">elasticsearch hard memlock unlimited</span><br><span class="line"></span><br><span class="line"># End of file</span><br></pre></td></tr></table></figure></p><h3 id="Unicast-설정"><a href="#Unicast-설정" class="headerlink" title="Unicast 설정"></a>Unicast 설정</h3><p>다른 노드들이 마스터 노드와 연결될 수 있도록 <code>discovery.zen.ping.unicast.hosts</code> 부분을 마스터노드의 ip 주소로 입력 해 줍니다. 네트워크 주소는 <code>ifconfig</code> 또는 <code>ip addr</code> 명령으로 확인합니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">discovery.zen.ping.unicast.hosts:</span><br><span class="line">  - 192.168.1.10:9300</span><br></pre></td></tr></table></figure><p>위 예문에는 <code>192.168.1.10</code> 이라고 적었지만, 실제로 설치된 서버의 IP 주소를 적으면 됩니다.</p><h3 id="⚠️-Split-Brain-문제"><a href="#⚠️-Split-Brain-문제" class="headerlink" title="⚠️ Split Brain 문제"></a>⚠️ Split Brain 문제</h3><p>저는 마스터 노드를 1개만 운영 할 것이기 때문에 <code>discovery.zen.minimum_master_nodes</code> 설정은 따로 하지 않았습니다.</p><p>보통 노드가 10개 내의 클러스터는 마스터 노드를 따로 구분하지 않고 데이터 노드 중 임의의 노드가 마스터 역할을 병행해서 수행하도록 해도 큰 문제는 없습니다. 10개 이상의 노드로 구성된 클러스터인 경우 마스터 전용 노드와 데이터 전용 노드를 분리하는 것이 좋으며, 이 때 마스터 기능의 수행이 가능한 후보(master-eligible) 노드를 3(또는 그 이상의 홀수)개를 두어 실제 마스터 노드가 다운된 경우 다른 노드가 그 역할을 대신 할 수 있도록 합니다. 2개만 두는 경우에는 네트워크 단절로 인한 클러스터 분리 문제 (quorum)로 인해 하나의 클러스터가 서로 다른 마스터를 가진 2개의 클러스터로 나누어 져서 나중에 동기화 문제가 생길 수 있습니다. 이를 <a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.1/modules-node.html#split-brain" target="_blank" rel="noopener">Split Brain</a> 이라고 합니다.</p><p>마스터 후보 노드를 3개(또는 그 이상의 홀수)로 두는 경우에는 네트워크 단절로 인해 클러스터가 분리가 되면 마스터 후보가 2개인 클러스터만 실제로 동작하고 1개인 클러스터는 동작을 멈추게 됩니다. 그렇게 해서 다시 네트워크가 복구 되었을 때 활성 상태였던 클러스터 노드들의 업데이트 정보가 비활성 상태였던 클러스터 노드들로 자연스럽게 동기화가 될 수 있습니다.</p><h2 id="X-Pack-설치"><a href="#X-Pack-설치" class="headerlink" title="X-Pack 설치"></a>X-Pack 설치</h2><p>X-Pack 설치에 대한 내용은 아래 도큐먼트를 참고해서 진행합니다.<br><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/installing-xpack-es.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/installing-xpack-es.html</a></p><h3 id="X-Pack-플러그인-설치"><a href="#X-Pack-플러그인-설치" class="headerlink" title="X-Pack 플러그인 설치"></a>X-Pack 플러그인 설치</h3><p>elasticsearch 가 설치된 디렉토리에서 <code>bin/elasticsearch-plugin install x-pack</code> 명령으로 설치가 가능합니다. X-Pack 그리고 대부분의 플러그인들은 모든 노드들에 동일하게 설치가 되어 있어야 합니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ ]$ cd /usr/share/elasticsearch</span><br><span class="line">[ ]$ sudo bin/elasticsearch-plugin install x-pack</span><br><span class="line">-&gt; Downloading x-pack from elastic</span><br><span class="line">[=================================================] 100%</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">@     WARNING: plugin requires additional permissions     @</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">* java.io.FilePermission \\.\pipe\* read,write</span><br><span class="line">* java.lang.RuntimePermission accessClassInPackage.com.sun.activation.registries</span><br><span class="line">* java.lang.RuntimePermission getClassLoader</span><br><span class="line">* java.lang.RuntimePermission setContextClassLoader</span><br><span class="line">* java.lang.RuntimePermission setFactory</span><br><span class="line">* java.net.SocketPermission * connect,accept,resolve</span><br><span class="line">* java.security.SecurityPermission createPolicy.JavaPolicy</span><br><span class="line">* java.security.SecurityPermission getPolicy</span><br><span class="line">* java.security.SecurityPermission putProviderProperty.BC</span><br><span class="line">* java.security.SecurityPermission setPolicy</span><br><span class="line">* java.util.PropertyPermission * read,write</span><br><span class="line">* java.util.PropertyPermission sun.nio.ch.bugLevel write</span><br><span class="line">See http://docs.oracle.com/javase/8/docs/technotes/guides/security/permissions.html</span><br><span class="line">for descriptions of what these permissions allow and the associated risks.</span><br><span class="line"></span><br><span class="line">Continue with installation? [y/N]y</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">@        WARNING: plugin forks a native controller        @</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">This plugin launches a native controller that is not subject to the Java</span><br><span class="line">security manager nor to system call filters.</span><br><span class="line"></span><br><span class="line">Continue with installation? [y/N]y</span><br><span class="line">Elasticsearch keystore is required by plugin [x-pack], creating...</span><br><span class="line">-&gt; Installed x-pack</span><br></pre></td></tr></table></figure><h3 id="X-Pack-Security-패스워드-설정"><a href="#X-Pack-Security-패스워드-설정" class="headerlink" title="X-Pack Security 패스워드 설정"></a>X-Pack Security 패스워드 설정</h3><p>5.x 에서는 기본적으로 슈퍼유저 계정인 elastic에 패스워드 changeme 가 기본적으로 생성되었으나, 6.0 부터는 기본 패스워드가 생성되지 않습니다. X-Pack 설치 이후에는 바로 <code>setup-passwords</code> 프로그램을 이용해서 주요 시스템 계정인 <code>elastic</code>, <code>kibana</code>, <code>logstash_system</code>의 패스워드를 생성 해 줘야 합니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ ]$ cd /usr/share/elasticsearch</span><br><span class="line">[ ]$ sudo bin/x-pack/setup-passwords interactive</span><br><span class="line">Initiating the setup of reserved user elastic,kibana,logstash_system passwords.</span><br><span class="line">You will be prompted to enter passwords as the process progresses.</span><br><span class="line">Please confirm that you would like to continue [y/N]y</span><br><span class="line"></span><br><span class="line">Enter password for [elastic]:</span><br><span class="line">Reenter password for [elastic]:</span><br><span class="line">Enter password for [kibana]:</span><br><span class="line">Reenter password for [kibana]:</span><br><span class="line">Enter password for [logstash_system]:</span><br><span class="line">Reenter password for [logstash_system]:</span><br><span class="line">Changed password for user [kibana]</span><br><span class="line">Changed password for user [logstash_system]</span><br><span class="line">Changed password for user [elastic]</span><br><span class="line">[ ]$</span><br></pre></td></tr></table></figure><h3 id="SSL-TLS"><a href="#SSL-TLS" class="headerlink" title="SSL/TLS"></a>SSL/TLS</h3><p>X-Pack Security는 노드간, 그리고 클러스터와 클라이언트 간의 통신을 암호화 하는 SSL/TLS 기능을 가지고 있습니다. 특히 elasticsearch 6.0 부터는 X-Pack Security를 사용하기 위해서는 SSL/TLS 설정을 반드시 활성화 해야 오류나 경고 메시지가 나타나지 않습니다.<br>SSL/TLS 설정은 다음 포스트에서 클러스터의 모든 노드들의 생성이 끝난 뒤에 설정 하도록 하겠습니다.</p><h2 id="한글-형태소-분석기-설치"><a href="#한글-형태소-분석기-설치" class="headerlink" title="한글 형태소 분석기 설치"></a>한글 형태소 분석기 설치</h2><p>아래 블로그 포스트 또는 각 커뮤니티의 문서를 참고해서 설치하도록 합니다.<br>아리랑 : <a href="https://www.elastic.co/kr/blog/arirang-analyzer-with-elasticsearch" target="_blank" rel="noopener">https://www.elastic.co/kr/blog/arirang-analyzer-with-elasticsearch</a></p><p>정상적으로 설치가 되면 elasticsearch를 재시작 후 로그에 다음과 같이 플러그인이 나타납니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[2017-12-29T07:18:31,240][INFO ][o.e.p.PluginsService     ] [kr-demo-master] loaded plugin [analysis-arirang]</span><br></pre></td></tr></table></figure></p><p>여기까지 Elasticsearch의 공통적인 설치 및 설정들이 완료되었습니다.<br>다음 포스트에서는 지금까지 만든 설정들을 복사해서 1개의 마스터 노드와 3개의 데이터 노드 시스템을 생성하고, 각 노드별로 구분되어야 할 환경들을 설정 해 보도록 하겠습니다.</p><blockquote><p><a href="/2018/01/2018-01-build-es-cluster-1">1. 서버 생성 및 Elasticsearch RPM 설치</a><br><strong>2. 메모리, 네트워크 설정 및 플러그인 설치</strong><br><a href="/2018/01/2018-01-build-es-cluster-3">3. 클러스터 구성 및 마스터, 데이터 노드 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-4">4. Kibana 설치 및 X-Pack Monitoring 확인</a><br><a href="/2018/01/2018-01-build-es-cluster-5">5. NFS 구성 및 elasticsearch 추가 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-6">6. X-Pack Security를 이용한 SSL 및 TLS 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-7">7. X-Pack License 적용 및 사용자 생성</a><br><a href="/2018/01/2018-01-build-es-cluster-8">8. Logstash 설치 및 Elasticsearch 기본 템플릿 설정</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;이번 포스트에서는 네트워크 설정 및 플러그인 설치에 대해서 다루도록 하도록 하겠습니다. 이전 또는 이후 내용들은 아래 포스트에서 확인하세요.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/2018/01/2018-01-build-es-clu
      
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/tags/Elasticsearch/"/>
    
      <category term="Elastic" scheme="http://kimjmin.net/tags/Elastic/"/>
    
      <category term="Elastic Cluster Settings" scheme="http://kimjmin.net/tags/Elastic-Cluster-Settings/"/>
    
  </entry>
  
  <entry>
    <title>Elastic Cluster 구성 1</title>
    <link href="http://kimjmin.net/2018/01/2018-01-build-es-cluster-1/"/>
    <id>http://kimjmin.net/2018/01/2018-01-build-es-cluster-1/</id>
    <published>2017-12-31T15:00:00.000Z</published>
    <updated>2018-01-12T05:41:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>이번에 필요에 의해 새로 Elastic Stack 클러스터를 구성하게 되었습니다. 구성 방법에 대해서는 여러 레퍼런스가 있지만, 처음부터 다시 한번 쭉 정리 할 생각으로 블로그 포스트에 시리즈로 작성하려고 합니다.</p><blockquote><p><strong>1. 서버 생성 및 Elasticsearch RPM 설치</strong><br><a href="/2018/01/2018-01-build-es-cluster-2">2. 메모리, 네트워크 설정 및 플러그인 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-3">3. 클러스터 구성 및 마스터, 데이터 노드 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-4">4. Kibana 설치 및 X-Pack Monitoring 확인</a><br><a href="/2018/01/2018-01-build-es-cluster-5">5. NFS 구성 및 elasticsearch 추가 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-6">6. X-Pack Security를 이용한 SSL 및 TLS 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-7">7. X-Pack License 적용 및 사용자 생성</a><br><a href="/2018/01/2018-01-build-es-cluster-8">8. Logstash 설치 및 Elasticsearch 기본 템플릿 설정</a></p></blockquote><p>구성은 최대한 실제 서비스 되는 구성에 가깝게 설치 해 볼 예정입니다. 개략적인 컨셉 아키텍쳐는 다음과 같습니다.</p><p><img src="es-demo-architecture.png" alt=""></p><blockquote><ul><li>3개의 데이터 전용 노드, 1개의 마스터 전용 노드로 구성합니다.</li><li>Master Node가 설치된 서버에는 Kibana, Logstash 및 기타 프로그램들을 같이 설치합니다.</li><li>마스터 노드만 HTTP REST API를 열고, Data Node 들은 Transport 통신만을 합니다.</li><li>Kibana, Logstash 및 기타 프로그램은 Master Node 와 REST로 통신합니다.</li><li>데이터는 Master Node 를 통해서만 색인됩니다.</li></ul></blockquote><h3 id="서버-생성"><a href="#서버-생성" class="headerlink" title="서버 생성"></a>서버 생성</h3><p>AWS 에서 EC2 인스턴스를 생성하도록 합니다. 인스턴스 생성은 AWS EC2 콘솔에서 그냥 실행하면서 넘어가면 되기 때문에 과정을 따로 설명하진 않겠습니다. 제가 구성한 환경은 아래와 같습니다.</p><blockquote><ul><li>m4.xlarge: 4 vCPU / 16GB</li><li>OS: Amazon Linux AMI 2017.09.1</li><li>EBS: 200GB</li></ul></blockquote><h3 id="시간대-설정"><a href="#시간대-설정" class="headerlink" title="시간대 설정"></a>시간대 설정</h3><p>서버의 초기 시간 설정이 UTP로 되어 있는데, 대한민국 서울 시간으로 변경 해 줍니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo cp -p /usr/share/zoneinfo/Asia/Seoul /etc/localtime</span><br></pre></td></tr></table></figure></p><h3 id="Java-업그레이드"><a href="#Java-업그레이드" class="headerlink" title="Java 업그레이드"></a>Java 업그레이드</h3><p>Elasticsearch 를 지원하는 Java 버전은 <a href="https://www.elastic.co/support/matrix#matrix_jvm" target="_blank" rel="noopener">Support Matrix</a> 페이지에서 확인이 가능합니다. 1.8 버전에서 안정적으로 사용이 가능합니다.</p><p>제가 설치한 AWS 서버에는 기본적으로 Java 1.7 버전이 설치가 되어 있습니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ ~]$ java -version</span><br><span class="line">java version &quot;1.7.0_161&quot;</span><br><span class="line">OpenJDK Runtime Environment (amzn-2.6.12.0.75.amzn1-x86_64 u161-b00)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 24.161-b00, mixed mode)</span><br></pre></td></tr></table></figure><p>Amazon Linux 는 CentOS 기반이기 때문에 Yum 설치가 가능합니다. Java를 1.8로 업데이트 해 줍니다.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum remove java-1.7.0-openjdk.x86_64 -y</span><br><span class="line">sudo yum install java-1.8.0-openjdk-devel.x86_64 -y</span><br></pre></td></tr></table></figure><h3 id="Elasticsearch-설치"><a href="#Elasticsearch-설치" class="headerlink" title="Elasticsearch 설치"></a>Elasticsearch 설치</h3><p>다음 링크를 참고하여 elasticsearch 를 yum 을 이용한 rpm 으로 설치하겠습니다.<br><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rpm.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/rpm.html</a></p><p>최신 버전의 elasticsearch를 yum 으로 설치하기 위해서는 <code>/etc/yum.repos.d/</code> 디렉토리 아래에 <code>elasticsearch.repo</code> 파일을 만들고 아래와 같이 내용을 입력해야 합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[elasticsearch-6.x]</span><br><span class="line">name=Elasticsearch repository for 6.x packages</span><br><span class="line">baseurl=https://artifacts.elastic.co/packages/6.x/yum</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch</span><br><span class="line">enabled=1</span><br><span class="line">autorefresh=1</span><br><span class="line">type=rpm-md</span><br></pre></td></tr></table></figure></p><p>파일을 추가하고 나서 이제 yum을 이용해서 Elasticsearch를 설치합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum install elasticsearch -y</span><br></pre></td></tr></table></figure></p><p>위와 같이 하면 최신 버전이 설치되고, 특정 버전을 설치하고 싶으면 다음과 같이 뒤에 버전을 명시 해 주면 됩니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum install elasticsearch-6.0.0 -y</span><br></pre></td></tr></table></figure></p><p>elasticsearch rpm 설치 문서에 나와 있는대로 <code>ps -p 1</code> 를 이용해서 SysV <code>init</code> 과 <code>systemd</code> 중 어떤 서비스를 사용하는지 확인합니다. 제가 만든 인스턴스는 init 을 사용하고 있습니다. 서비스에 등록하기 위해 다음 명령을 실행합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo chkconfig --add elasticsearch</span><br></pre></td></tr></table></figure></p><p>Elasticsearch는 이제 service 명령으로 실행 또는 종료가 가능합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo -i service elasticsearch start</span><br><span class="line">sudo -i service elasticsearch stop</span><br></pre></td></tr></table></figure></p><h2 id="호스트명-변경"><a href="#호스트명-변경" class="headerlink" title="호스트명 변경"></a>호스트명 변경</h2><p>호스트명을 변경하기 위해서는 <code>/etc/sysconfig/network</code> 파일의 <code>HOSTNAME=</code> 부분을 수정합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/sysconfig/network</span><br><span class="line">HOSTNAME=es-master</span><br></pre></td></tr></table></figure></p><p>나중에 설정 및 모니터링을 편하게 하기 위함이며 생성하는 각 인스턴스 별로 <code>HOSTNAME=es-master</code>, <code>HOSTNAME=es-data-1</code>, <code>HOSTNAME=es-data-2</code> 등과 같이 설정 해 줍니다.<br>호스트명을 변경 한 후에는 인스턴스를 재시작 해야 합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo reboot</span><br></pre></td></tr></table></figure></p><p>인스턴스 재 시작 후에 호스트명이 제대로 바뀌었는지, elasticsearch 서비스는 자동으로 잘 실행 되는지 한번 확인 해 봅니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ ~]$ hostname</span><br><span class="line">es-master</span><br><span class="line">[ ~]$ curl localhost:9200</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot; : &quot;KTKlgNl&quot;,</span><br><span class="line">  &quot;cluster_name&quot; : &quot;elasticsearch&quot;,</span><br><span class="line">  &quot;cluster_uuid&quot; : &quot;uFE9aZzTR6CQxoLlJ_aogA&quot;,</span><br><span class="line">  &quot;version&quot; : &#123;</span><br><span class="line">    &quot;number&quot; : &quot;6.0.0&quot;,</span><br><span class="line">    &quot;build_hash&quot; : &quot;8f0685b&quot;,</span><br><span class="line">    &quot;build_date&quot; : &quot;2017-11-10T18:41:22.859Z&quot;,</span><br><span class="line">    &quot;build_snapshot&quot; : false,</span><br><span class="line">    &quot;lucene_version&quot; : &quot;7.0.1&quot;,</span><br><span class="line">    &quot;minimum_wire_compatibility_version&quot; : &quot;5.6.0&quot;,</span><br><span class="line">    &quot;minimum_index_compatibility_version&quot; : &quot;5.0.0&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;tagline&quot; : &quot;You Know, for Search&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Elasticsearch-설정"><a href="#Elasticsearch-설정" class="headerlink" title="Elasticsearch 설정"></a>Elasticsearch 설정</h2><p>이제 Elasticsearch의 설치가 완료 되었습니다. RPM 버전의 기본적인 설치 경로들은 아래와 같습니다.</p><ul><li>기본 프로그램 (<strong>$ES_HOME</strong>) : <code>/usr/share/elasticsearch</code><ul><li>실행 파일 : <code>bin/elasticsearch</code></li><li>플러그인 : <code>plugins</code></li></ul></li><li>설정 : <code>/etc/elasticsearch</code><ul><li><code>elasticsearch.yml</code></li><li><code>jvm.options</code></li><li><code>log4j2.properties</code></li></ul></li><li>데이터 (<strong>path.data</strong>) : <code>/var/lib/elasticsearch</code></li><li>로그 (<strong>path.logs</strong>) : <code>/var/log/elasticsearch</code></li></ul><p>데이터와 로그 파일의 경로는 <code>/etc/elasticsearch/elasticsearch.yml</code> 설정 파일에서 수정이 가능합니다.<br>모든 경로에 접근하기 위해서는 기본적으로 root 권한을 필요로 합니다. 예를 들어 elasticsearch.yml 설정 파일을 vim 으로 편집하려고 하면 다음과 같이 실행해야 합니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/elasticsearch/elasticsearch.yml</span><br></pre></td></tr></table></figure></p><p>Elasticsearch의 기본 클러스터명은 <strong>elasticsearch</strong> 로 되어 있습니다. Elasticsearch의 노드들은 클러스터명을 기준으로 바인딩이 되기 때문에 처음 설치가 끝나면 우선적으로 클러스터명을 바꿔 줘야 나중에 실수로 노드가 엉뚱한 클러스터에 바인딩 되는 것을 막을 수 있습니다. <code>elasticsearch.yml</code>설정 파일을 열고 먼저 클러스터명을 변경 해 줍니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cluster.name: es-demo</span><br></pre></td></tr></table></figure></p><p>노드들도 나중에 구분하기 편하도록 노드명에 호스트 이름을 사용하도록 설정 해 줍니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node.name: $&#123;HOSTNAME&#125;</span><br></pre></td></tr></table></figure></p><p>이제 elasticsearch 를 재시작하여 노드명과 클러스터명이 정상적으로 반영이 되었는지를 확인 해 봅니다.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ ~]$ sudo service elasticsearch restart</span><br><span class="line">Stopping elasticsearch:                                    [  OK  ]</span><br><span class="line">Starting elasticsearch:                                    [  OK  ]</span><br><span class="line">[ ~]$ curl localhost:9200</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot; : &quot;es-master&quot;,</span><br><span class="line">  &quot;cluster_name&quot; : &quot;es-demo&quot;,</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>이제 Elasticsearch의 기본 설치가 끝났습니다.<br>다음 포스트에서는 운영에서 사용하기 위한 메모리, 네트워크 및 기타 세부 설정들을 해 보도록 하겠습니다. Elasticsearch 노드는 네트워크 설정이 되어있지 않으면 개발 모드로 실행되어 localhost 에서만 접근이 가능하며 부트스트랩 체크를 하지 않습니다. 네트워크 설정을 실제 IP 주소로 변경하고 실행하게 되면 운영 모드로 인식을 하고 부트스트랩 체크를 하게 되며 여러가지 운영 설정 등을 바꿔줘야 합니다.</p><blockquote><p><strong>1. 서버 생성 및 Elasticsearch RPM 설치</strong><br><a href="/2018/01/2018-01-build-es-cluster-2">2. 메모리, 네트워크 설정 및 플러그인 설치</a><br><a href="/2018/01/2018-01-build-es-cluster-3">3. 클러스터 구성 및 마스터, 데이터 노드 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-4">4. Kibana 설치 및 X-Pack Monitoring 확인</a><br><a href="/2018/01/2018-01-build-es-cluster-5">5. NFS 구성 및 elasticsearch 추가 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-6">6. X-Pack Security를 이용한 SSL 및 TLS 설정</a><br><a href="/2018/01/2018-01-build-es-cluster-7">7. X-Pack License 적용 및 사용자 생성</a><br><a href="/2018/01/2018-01-build-es-cluster-8">8. Logstash 설치 및 Elasticsearch 기본 템플릿 설정</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;이번에 필요에 의해 새로 Elastic Stack 클러스터를 구성하게 되었습니다. 구성 방법에 대해서는 여러 레퍼런스가 있지만, 처음부터 다시 한번 쭉 정리 할 생각으로 블로그 포스트에 시리즈로 작성하려고 합니다.&lt;/p&gt;
&lt;blockquote&gt;

      
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/tags/Elasticsearch/"/>
    
      <category term="Elastic" scheme="http://kimjmin.net/tags/Elastic/"/>
    
      <category term="Elastic Cluster Settings" scheme="http://kimjmin.net/tags/Elastic-Cluster-Settings/"/>
    
  </entry>
  
  <entry>
    <title>기술 문서 번역에 대하여</title>
    <link href="http://kimjmin.net/2017/11/2017-11-technical-translations/"/>
    <id>http://kimjmin.net/2017/11/2017-11-technical-translations/</id>
    <published>2017-11-12T15:00:00.000Z</published>
    <updated>2017-11-24T22:42:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>정말 오랫만에 포스팅을 하네요. 오늘 일 하다가 재미있는게 있어 페이스북에 끄적일까 하다가 좀 더 오래 기록하고 싶은 마음에 블로그에 끄적여봅니다.</p><p>5.0 버전이 출시된게 엊그제 같은데 6.0 출시 준비를 앞두고 있습니다. 항상 그렇듯이 새 버전이 나올때면 홈페이지 리뉴얼과 관련 보도자료, 블로그 등일 쏟아낼 준비를 하기에 마케팅, 웹 페이지 관리 인원들은 이맘때 쯤 정신 없이 바쁜 시간을 보냅니다.</p><p>저도 업무상 한국 로컬라이징 컨텐츠들의 1차 리뷰어로 지정이 되어 있어서 여러가지 번역 및 리뷰 업무들이 쏟아져 들어오기 마련입니다. 5.0 출시할 때 30페이지 정도 번역 리뷰했던 기억이 나는데 (<a href="/2016/11/elastic-stack-5-release">관련 포스트</a>) 이번에도 그 때 만큼은 아니더라도 여러 새로운 페이지들이 있어 작업 요청들이 계속 날아오고 있네요.</p><p>그래도 제가 항상 뿌듯하게 생각했던 것 중 하나가, Elastic 이라는 회사가 (모든 페이지는 아니지만) 로컬라이징 하는 부분에 있어서 제공하고 있는 6개의 언어 중 대한민국의 한글 페이지가 있다는 점입니다.</p><p><img src="local_pages.png" alt=""></p><p>더군다나 이게 일본어 다음으로 불어, 독일어보다 먼저 제공되고 있었던 점에 대해 항상 자랑스럽게 생각하고 있습니다. Elastic이 한국 시장을 그만큼 많이 신경쓰고 있다는 뜻으로 볼 수도 있고, 로컬 Evangelist 입장에서 (괜히 혼자) 열심히 한 것 같은 보람도 느끼고요. 그리고 요즘은 저희 한국 지역에도 직원분들이 많이 합류하시고, 한국어 정보 전용 페이지(<a href="https://info.elastic.co/Korea-Local-Page" target="_blank" rel="noopener">https://info.elastic.co/Korea-Local-Page</a>) 도 만들고, 이래 저래 많이 발전해서 기쁩니다.</p><p>여튼, 짧게 쓰려고 했는데, 서론이 길었습니다. 오늘도 6.0 관련 포스트 번역 리뷰를 하다 보니 재미있는 일이 있어서 끄적입니다. <a href="/2016/11/elastic-stack-5-release">5.0 번역 포스트</a>에서도 그렇고 <a href="https://www.elastic.co/kr/blog/introducing-elastic-cloud-and-elastic-cloud-enterprise" target="_blank" rel="noopener">Elastic Cloud 관련 블로그</a> 에 썼던 것도 그렇고, 기술 문서 번역, 특히 Elastic 의 기술 문서 번역은 참 쉽지 않은것 같습니다. (이게 다 원문을 이상하게 쓰는 우리 테크니컬 라이터 Tyler 때문이다… 사실 이 친구가 저희 Evangelist 팀 리드이면서 제 매니저 입니다.)</p><p>오늘 번역 리뷰하다가 발견한 이슈들 입니다.</p><p><strong><em><code>culmination of thousands of pull requests</code> –&gt; <code>수천건의 가져오기 요청의 정점에 도달</code></em></strong><br>네… Git을 안 써봤으면 개발자도 모르는 <code>pull requests</code> 라는 용어를 번역가 분들이 어찌 알겠습니까. 저는 <code>수천건의 풀 리퀘스트 요청에 대한 결과가 정점을 찍는 날입니다</code>로 바꿨습니다.</p><p><strong><em><code>GA(General Availability)</code> –&gt; <code>일반 가용성</code></em></strong><br>RC, GA 같은 용어들도 계속 제품 릴리스를 찾는 분이거나 프로덕트 매니지먼트 하시는 분이 아니면 모를수도 있죠. 저는 <code>일반 사용자 버전</code>으로 바꿨습니다.</p><p><strong><em><code>GA’ing multiple products on the same day isn’t enough</code> –&gt; <code>다양한 상품의 일반 가용성 확보로는 충분치 않기에</code></em></strong><br>마찬가지로 GA 관련 용어네요. 일부 기능은 아직 GA 버전에서 제공 안 된다는 내용인데 저는 <code>여러 제품의 일반 사용 버전의 출시가 여의치가 않은 관계로</code> 라고 바꿨습니다.</p><p><strong><em><code>Either you craft the next great novel</code> –&gt; <code>소설을 창작하거나</code></em></strong><br>이건 원문 쓴 친구를 탓해야 할 것 같은데요. 이런 문학적인 표현을 너무 좋아해서… 저도 고민 많이 했는데 <code>새로운 위대한 이야기 부터 시작 해 보시겠습니까?</code> 라고 일단 적었습니다.</p><p><strong><em><code>sparse data</code> –&gt; <code>스파스  데이터</code></em></strong><br>sparse 라는 단어가 군데군데 비어있다는 뜻인데 번역하기 애매하다보니. 스파스 데이터 라고도 쓰이긴 합니다. 성김 데이터 라고 하기에는 이상해서 일단 <code>데이터 파편</code> 이라고 했습니다. 혹시 더 좋은 번역 있으면 제보 부탁드립니다.</p><p><strong><em><code>more accessible via contrast changes</code> –&gt; <code>대비 및 변화 접근이 용이</code></em></strong><br>이건 시각화 도구인 Kibana 관련 내용인데, 이것도 시각 장애인, 색약 대한 웹 접근성에 대해 알고 계신 분이 아니면 이해하기 힘든 용어입니다. 저는 <code>더 나은 접근성을 위한 색상 대비</code> 라고 고쳤습니다.</p><p>그리고 하이라이트<br><strong><em><code>Beats &lt;3 containers and, also, Beats &lt;3 modules</code> –&gt; <code>3개 미만 컨테이너와 Beats 및 3개 미만 모듈의 Beats</code></em></strong><br>처음에 3개 미만의 컨테이너 라고 하길래 대체 뭔 소리인가 하고 원문을 찾아봤습니다. &lt;3 이 하트를 옆으로 뉘어 놓은 이모티콘을 나타내는건데, 이걸 3개 미만이라고 번역했네요. <code>Beats는 컨테이너를 사랑❤️합니다. 또한 Beats는 모듈을 사랑❤️합니다</code>로 고쳤습니다.</p><p>그리고 아예 번역이 안 된 문단이 있었는데 거기 아래와 같은 문장이 있습니다.<br><strong><em><code>First class support for Spark’s Structured Streaming has landed</code></em></strong><br>이것도 원문을 쓴 친구가 First class … landad 라고 써서 항공기의 퍼스트 클래스를 타고 착륙하다는 뜻으로 말장난을 써 놓은것 같습니다. 고민 하다가 <code>Spark의 Structured Streaming에 대한 First Class등급의 지원이 6.0에 안착했습니다</code> 라고 번역했네요.</p><p>리뷰 끝내고 생각 해 보니 위 내용을 번역하려면 정말 쉽지는 않겠구나 싶었습니다. 저보다 영어 잘 하시는 분들이 물론 많으시겠지만, 제가 이런 저런 잡다한거 해 본 경험이 이런데서 도움이 될줄 누가 알았겠는가 싶네요.<br>Git을 안 해봤으면 pull request를 몰랐을테고, Front-End 쪽 안 건드려 봤으면 색약, 시각장애인 지원 관련 웹 접근성이란 주제에 대해 연관지어 생각 못 해봤을 것 같습니다. 그리고 저희 프로덕트들에 대한 내용도 알아야 하고, 히피스러운 우리 테크니컬 라이터 친구의 생각도 알아야 하고요.<br>거기에, 오늘은 없었지만 예전에는 스타워즈, 스타트렉 덕후가 아니면 알지 못하는 표현까지 나온적도 있었고요.</p><p>여하튼 배운 것은 살다 보면 어떻게든 쓰이는 날이 오기 마련인 것 같습니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;정말 오랫만에 포스팅을 하네요. 오늘 일 하다가 재미있는게 있어 페이스북에 끄적일까 하다가 좀 더 오래 기록하고 싶은 마음에 블로그에 끄적여봅니다.&lt;/p&gt;
&lt;p&gt;5.0 버전이 출시된게 엊그제 같은데 6.0 출시 준비를 앞두고 있습니다. 항상 그렇
      
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/tags/Elasticsearch/"/>
    
      <category term="Elastic" scheme="http://kimjmin.net/tags/Elastic/"/>
    
  </entry>
  
  <entry>
    <title>2017 파이콘 부스 운영기</title>
    <link href="http://kimjmin.net/2017/08/2017-08-pycon-seoul/"/>
    <id>http://kimjmin.net/2017/08/2017-08-pycon-seoul/</id>
    <published>2017-08-20T00:00:00.000Z</published>
    <updated>2017-11-24T22:42:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>정말 오랬만에 포스팅 하네요. 올해도 파이콘에서 열심히 약을 팔다 왔습니다. 작년과 마찬가지로 세션은 하나도 듣지 못하고 부스만 운영하다가 와서 파이콘 운영기가 아니라 <strong>파이콘 부스 운영기</strong> 입니다. 다녀와서 빨리 쓰려고 했는데 같은 주에 밋업을 해서 그런건지, 이번에는 혼자 한 것도 아니었는데 나이가 한살 더 먹었다고 그런건지 너무 피곤하고 몸 회복에 일주일은 걸린 것 같네요. 아마 행사 전 날 잠을 많이 못 잔게 제일 큰 원인이 아니었던가 싶습니다.</p><p>작년에는 트위터 해시태그 집계 (<a href="/2016/08/pyconapac-seoul-2016/">작년 포스트 참조</a>) 데모를 만들어서 트위터에 해시태그 남긴 분들께 선물 드리고 그랬는데요, 이번에는 선물 갯수도 좀 애매하게 남고 그래서 무엇을 할까 하다가 Elastic Cloud 계정을 만들고 Metricbeat 수집 데모를 만든 분들께 선물 드리자는 아이디어가 전날 저녁 10시 쯤 떠올랐습니다. 막 뿌릴 수가 없으니 아무래도 미션 난이도는 좀 있어야겠고, 그렇다고 해서 너무 어려우면 아무도 안 할것 같고 했는데, 개인적으로 적절하게 잘 준비한 것 같아서 뿌듯했습니다.</p><p>이벤트 때문에 자정 넘어서 까지 회사 블로그에 포스트를 작성했습니다. (<a href="https://www.elastic.co/kr/blog/metricbeat-with-elastic-cloud" target="_blank" rel="noopener">Elastic Cloud 에서 Metricbeat 으로 시스템 모니터링 하기</a>) 행사 준비도 하고, 회사에 블로그에 글도 썼으니 돌 하나로 새 두마리를 잡은 기분이네요😁. 여담으로 제가 써 놓고도 컨텐츠가 참 괜찮은것 같아서 영어로도 대충 번역 해 놓고 영문 블로그 관리하는 친구들에게 리뷰 부탁했더니 이거 똑같은 내용 누가 지금 쓰고 있다고 해서 오잉~? 하고 있는 중입니다. 지금 (URL 때문에) 중복해서 두개 올릴지, URL을 통합시킬지… 뭐, 저는 한글 페이지만 살아있으면 되니까 영문 페이지는 알아서 결정하라고 하고 일단 손 떼고 구경중입니다.</p><p>작년에는 전날 미리 행사장에 짐 가져다 놓았는데, 이번에는 당일 아침에 설치하려고 차에만 실어 놓았습니다. 아들내미가 자꾸 굴러다니면서 저를 발로 차고, 얼굴을 덮고 해서 새벽 4시 쯤 깼는데, 더 잠도 안 올것 같고 해서 잽싸게 씻고, 이벤트 내용 프린트 하고, 다시 졸음이 오기 전에 빨리 행사장에 갔습니다. 아직 아무도 안 왔고, 짐 지키시는 보안요원, 자원 봉사자 몇분만 계시고 부스 바로 앞에 빈백이 있어서 올레!! 를 외치며 널부러졌습니다. </p><p><img src="IMG_3089.jpg" alt=""> <img src="IMG_3098.jpg" alt=""></p><p>제가 자고 있던 사이 파이콘에서 사진을 담당하신 <a href="https://www.facebook.com/diginori.min" target="_blank" rel="noopener">민경국</a>님이 스브적 도촬을 하고 가셨네요.</p><p><img src="jm_at_beanbag.jpg" alt=""></p><p>참고로 옆에 있는거 소주 아닙니다. 씨그램입니다.</p><p>그리고 <a href="https://www.facebook.com/tebica" target="_blank" rel="noopener">박민우</a>님이 찍어 보내주신 사진.</p><p><img src="IMG_3096.jpg" alt=""></p><p>8시 반 까지 널부러져 자다가 입사 3주 되신 저희 Customer Success Manager 김진영님이 오셔서 같이 부스 설치하고 영업 준비를 시작했습니다.</p><p><img src="IMG_3092.jpg" alt=""> <img src="IMG_5507.JPG" alt=""> </p><p>보통 다른 개발자 행사들 가 보면 Elastic 알고 오시는 분 들이 보통 절반 이상입니다. 그런데 파이콘은 참석 연령대가 적어서인지 아직 Elastic Stack 에 대해서 잘 모르시는 분들의 비율이 아직 많습니다. 학생이나 나이가 아직 젊은 개발자 분들은 보통 이런 데이터 솔루션 보다는 보통 모바일이나 게임, 요즘은 딥 러닝 쪽에 주로 관심들이 많아서 그런 것 같다는게 저의 생각입니다.</p><p><img src="pycon_attendees.png" alt=""></p><p>파이콘에서 설문으로 받은 Elastic 경험 비율 표 입니다. 모수가 적어 정확하진 않겠지만 그래도 다른 컨퍼런스때와 비교하면 차이가 꽤 납니다.</p><p>올해도 작년에 옆에 계셨던 스마트스터디가 옆 부스에 계셔서 반가웠습니다. 열심히 기술 부채를 나눠주고 계시던데, 저도 하나 받아왔습니다. 그 밖에도 행사 다 끝나고 저희 애들 가져다주라고 비타민이랑 스티커 챙겨주셔서 감사했습니다. 😭(주륵)</p><p><img src="IMG_5524.JPG" alt=""></p><p>슬슬 손님들이 몰려오고</p><p><img src="IMG_5514.JPG" alt=""> <img src="IMG_5533.JPG" alt=""> <img src="IMG_5559.JPG" alt=""></p><p>드디어 첫번째로 미션 완료하신 분도 나타났습니다.</p><p><img src="IMG_5521.JPG" alt=""> </p><p>미션 완료하신 분들께는 티셔츠를 드렸습니다. 검은색, 파란색, 민트색, 핑크색이 있었는데 검은색은 첫날 다 나갔고 핑크색은 마지막까지 몇장 남았습니다. 미션 내용 프린트해서 부스에 출력 해 놓고, 또 페이스북 파이썬 코리아 그룹에도 남겼는데 행사 듣다가 페이스북에 올라온 내용 보고 완료 하셔서 가져오셨다고 했습니다. </p><p>“블로그에 설명 잘 되어 있어서 쉽게 했습니다” 라고 해 주셔서 참 감사했습니다. 😁</p><p>보통 다른 행사 가면 제일 많이 듣는 이야기가</p><ul><li>지금 Elasticsearch 쓰고 있는데 질문좀 해도 될까요?</li><li>한국에도 Elastic 지사가 있었어요?</li><li>여기는 Amazon Elasticsearch 서비스 컨설팅 하는 업체인가요? 😩</li></ul><p>인데, 이번 파이콘에서는 </p><ul><li>잘 몰라서 그러는데 한번 설명좀 해 주세요</li><li>미션 하려고 하는데 이 부분에서 막혀요</li></ul><p>라는 질문을 제일 많이 받았던 것 같습니다. 특히 오셔서 상당히 열정적으로 질문 하신 어느 학생 분, 제가 책 선물 해 드렸는데, 첫 날 Elastic Stack 처음 봤다고 하시고는 둘째날에는 미션까지 완료 하고 오셔서 저를 감동케 하셨습니다.</p><p>이번에는 김진영님이 많이 도와주셔서 정말 지난 행사때 들과 비교해서 많이 편했던 것 같습니다. 저희 Elastic 조인 하신지 얼마 되지 않으셨는데 오시는 분들께 설명도 잘 드리고 대응도 잘 해 주셔서 정말 편했습니다. 저도 중간 중간 다른 부스들 다니면서 여유 부리면서 구경도 좀 하고 그랬습니다.</p><p>JetBrain 부스에서 룰렛 돌려서 받은 경품입니다.</p><p><img src="IMG_3100.jpg" alt=""></p><p>보통은 행사 가면 저희 최신 기능 위주로 (X-Pack, 머신러닝 등) 설명하곤 했는데 머신러닝 물어보시는 분도 계셨지만 그것 보다는 기본적인 질문들이 많아서 예전에 제가 만들어 사골처럼 우려먹고 있는 <a href="https://www.elastic.co/kr/blog/seoul-metro-2014" target="_blank" rel="noopener">서울시 지하철 대시보드</a>랑 이번에 이벤트 미션으로 한 Metricbeat 데모를 많이 활용 했던 것 같습니다. 그리고 개발자 분들이 좋아할 것 같아서 저희 회사 Github 데모도 많이 활용했습니다. Logstash의 Github API로 Elasticsearch 에 실시간으로 데이터를 받아 저장하는데, 누가 얼마만큼 서밋을 쳤고, 하는게 다 시각화 되서 나옵니다. 오른쪽 위의 리스트가 활동 많이 한 순서대로 Elastic 개발자들 Github 아이디 입니다.</p><p><img src="github_demo.png" alt=""></p><p>어떤 분들은 보시고 회사 참 잔인하다고 하셨는데, 평가 지표로 쓰는건 아니고 그냥 저희끼리 재미로 만든겁니다. 참고로 솔루션 아키텍트들이나 교육 엔지니어 같은 사람들도 본인이 출장 다닌 경로나 업무했던 기록들을 Elasticsearch 에 색인해서 (재미로) 시각화 해서 만들어 두기도 합니다. 잘 만들면 그게 그 팀 공식 대시보드가 되기도 하고요.</p><p>저희 DevRel(에반젤리스트) 팀의 대선배이자 제가 롤 모델로 삼고 있는 저희 프랑스 직원인 David Pilato 도 Elatic 입사 4주년에 본인 블로그에 자신이 그 동안 다닌 밋업, 컨퍼런스들을 통계 내는 대시보들을 만든 내용을 포스팅했습니다. <a href="http://david.pilato.fr/blog/2017/01/09/4-years-at-elastic/" target="_blank" rel="noopener">David Pilato의 블로그 - 4 Years at Elastic!</a>. 1년간 컨퍼런스 74개, 출장 거리 5만4천 킬로미터, 거기에 다비드는 Elasticsearch 커미터로서 개발도 열심히 하고 있습니다. (갑자기 부끄러워지는… 하하…)</p><p>Elastic Stack 이 Elasticsearch, Kibana, Logstash, Beats 인데, 얘네들은 전부 자바, 자바스크립트, 루비, 고(go) 로 만들어서 사실 저희 제품 중에 파이썬으로 만든것은 없습니다. 그래도 저희 엔지니어들이 파이썬은 무슨 2외국어 마냥 즐겨 쓰는 사람이 많고, 저희 테스팅 벤치마크 툴인 <a href="https://github.com/elastic/rally" target="_blank" rel="noopener">Rally</a> 라던가 매니지먼트 툴인 <a href="https://github.com/elastic/curator" target="_blank" rel="noopener">Curator</a> 등은 파이썬으로 되어 있습니다. 그리고 또 다른 대선배이자 저희 컨설턴트인 <a href="https://www.facebook.com/honza.kral" target="_blank" rel="noopener">Honza Král</a> 같은 경우 유럽쪽 파이썬 커뮤니티의 유명인사 이기도 하고요. </p><p>작년에는 저희가 Prelert 를 인수해서 머신러닝 기능을 추가 한 것이 화제였는데, 올해도 Opbeat 을 인수하면서 APM 솔루션을 런칭할 준비를 하고 있습니다. <a href="https://www.elastic.co/blog/starting-down-the-path-for-elastic-apm" target="_blank" rel="noopener">관련 블로그 포스트</a>. Opbeat은 아직 새 이름은 정해지진 않았는데, 현재 지원하고 있는 라이브러리가 node.js 그리고 Python 입니다. 제가 Opbeat 공부할 시간이 좀 있었으면 이번 파이콘에서 발표 신청도 아마 욕심 내 보지 않았을까 싶은데요 (넌 파이썬 쥐똥만큼도 모르잖아… 아마 안될거야…). 내년을 위해 지금부터 파이썬을 배워야 하나 고민입니다.</p><p>어쩌다 보니 절반은 또 저희 회사 이야기가 됬네요. 여튼 올해도 참 즐겁고 유익한 컨퍼런스였습니다. 내년에도 함께 할 수 있었으면 좋겠습니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;정말 오랬만에 포스팅 하네요. 올해도 파이콘에서 열심히 약을 팔다 왔습니다. 작년과 마찬가지로 세션은 하나도 듣지 못하고 부스만 운영하다가 와서 파이콘 운영기가 아니라 &lt;strong&gt;파이콘 부스 운영기&lt;/strong&gt; 입니다. 다녀와서 빨리 쓰려
      
    
    </summary>
    
      <category term="ICT" scheme="http://kimjmin.net/categories/ICT/"/>
    
    
      <category term="PyCon" scheme="http://kimjmin.net/tags/PyCon/"/>
    
      <category term="Conference" scheme="http://kimjmin.net/tags/Conference/"/>
    
  </entry>
  
  <entry>
    <title>Engineering all hands in South Lake Tahoe 2017</title>
    <link href="http://kimjmin.net/2017/03/2017-03-lake-Tahoe/"/>
    <id>http://kimjmin.net/2017/03/2017-03-lake-Tahoe/</id>
    <published>2017-03-09T15:00:00.000Z</published>
    <updated>2017-11-24T22:42:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>샌프란시스코에서 Elastic{on} 2017 행사가 끝나고 사우스 레이크 타호에서 또다른 출장 겸 가족 여행 시간을 가졌습니다. 샌프란시스코 행사 겸 여행기는 <a href="/2017/03/2017-03-elasticon17/">이전 포스트</a> 를 참고하세요.</p><p>Elastic은 전 세계에 직원을 두고 있지만 지사 개념보다는 리모트 근무 개념이라 같은 팀이라도 다른 국가에 거주하곤 합니다. 엔지니어링 팀 경우 1년에 두번 전체 모임을 갖는데 9~10월 가을 중 유럽에서, 그리고 2~3월 Elastic{on} 행사 이후 미국에서 모임을 갖습니다. 작년 가을에는 <a href="/2016/09/eng-all-hands-prague">체코의 프라하에서 모임</a>을 가졌고, 올 봄에도 Elastic{on}이 끝나고 캘리포니아와 네바다 주 경계에 있는 사우스 레이크 타호에서 전체 모임을 가졌습니다.</p><p>보통은 3박 4일, 팀에 따라서는 4박 5일 동안 함께 머무릅니다. 첫 날은 샌프란시스코에서 타호까지 버스로 이동하는 날이라 저녁식사만 같이 하고 보통 모임은 하지 않습니다. 아침에 호텔에 집합해서 버스 여러대에 나누어 타고 4시간 정도 걸리는데 지나는 동안 설산 풍경을 자주 보게 됩니다. 나무들도 2~30 미터는 되는 쭉쭉 솟은 나무들이 우거진 숲도 정말 멋집니다.</p><p><img src="IMG_1506.jpg" alt=""> <img src="IMG_1510.jpg" alt=""> </p><p>점심은 버스에서 나눠 준 도시락으로 해결 했고, 오후 느즈막히 호텔에 도착했습니다. 아내님은 호텔 방에서 짐정리 하고 쉬는 동안 저 혼자 애들 데리고 근처 마트에 장을 보러 나왔습니다. 장 보러 가던 중 딸 래은이가 유모차에서 잠드는 바람에 혼자 유모차와 카트를 같이 끌 수 없어 하는 수 없이 딸아이는 카트에 뉘이고 유모차도 접어서 카트 밑에 싣고 장을 봤네요.</p><p><img src="IMG_1512.jpg" alt=""> </p><p>같이 장 보던 사람들이 보고 많이 웃었습니다. 역시 샌프란의 정신나간 물가에서 생활하다가 오니 이곳 물가는 정말 싸게 느껴집니다. 물 가격은 절반이었던 것 같네요.</p><p>휴양지 답게 분위기나 날씨가 정말 좋습니다. 특히 하늘이 맑고 청명한게 한국에 돌아와 하루하루 미세먼지 걱정을 하면서 살다 보니 그곳이 정말 그립네요.</p><p><img src="IMG_1514.jpg" alt=""> <img src="IMG_1517.jpg" alt=""> </p><p>산 정상 넘어까지 운행하는 곤돌라가 있는데 탑승장이 번화가 한 가운데 있어서 바로 머리 위로 곤돌라가 지나가는 모습을 볼 수 있습니다. 제법 빠르게 지나가는데 아들 래원이가 보면서 감탄을 멈추지 않더군요. 딸은 세상 모르고 자고 있습니다…</p><p><img src="IMG_1519.jpg" alt=""></p><p>근처 가게들은 전부 스키복, 스키용품 판매, 대여점들입니다.</p><p>장을 보고 돌아오니 직원들이 거의 다들 도착해서 로비에 모여서 떠들고 있습니다.</p><p><img src="IMG_1555.jpg" alt=""> </p><p>일본 직원이 닌텐도 스위치를 가져와서 자랑도 하고 있고요.</p><p><img src="IMG_1531.jpg" alt=""> </p><p>저녁식사 전에 특별히 Elastic 이사회 중 한 멤버가 (이름은 잊어버렸습니다) 와서 직원들과 특별 간담회 시간을 가졌습니다. IPO에 대한 질문들도 있었는데 딱히 명확한 정보 공유는 없었던 것 같고요, Elastic 처럼 유니크한 개발 문화를 가진 회사가 이렇게 잘 성장하는 것이 정말 놀랍다는 식의 말만 되풀이 했던 것 같습니다.</p><p><img src="IMG_1525.jpg" alt=""> </p><p>여하튼 저녁을 먹고 일찍 잠들었습니다. 샌프란에서 힘들어하던 꼬맹이들도 시차 적응 완벽하게 해서 잘 놀았습니다. 호텔에 수영장도 있어서 애들 수영복이랑 튜브도 챙겨왔는데 알뜰하게 잘 놀았던것 같습니다.</p><p><img src="IMG_1580.jpg" alt=""> <img src="IMG_1556.jpg" alt=""> </p><p>둘째 날 오전에 Engineering VP인 케빈의 진행으로 본격적으로 일정이 시작했습니다. 특별히 작년에는 없던 시상식? 같은걸 했는데, 어떤 경로로 선정했는지 모르겠지만 (아마 팀 리더들 의견을 반영하지 않았나 싶습니다.) 자기 업무 범위를 넘어(서양 애들이 다 그런지, 저희 회사만 그런지 모르겠는데 “beyond” 라는 표현을 참 좋아합니다.) 팀, 회사 전체 적으로 많은 도움을 주거나 긍정적인 영향을 끼친 직원들을 불러 시상을 하고, 다음달 월급에 보너스가 추가된다고 발표했습니다.</p><p><img src="IMG_1534.jpg" alt=""> </p><p>출장 끝나고 돌아와서는 전체 메일로 다음번 시상을 위해 동료를 추천 하라는 메일이 왔습니다. 쓰레드로 긍정적인 의견, 부정적인 의견도 많이 회람되었는데요, 다음 부터는 이 행사도 공식화 할 예정인것 같습니다.</p><p>그리고 보통 행사 첫 순서는 샤이 배논이 나와 이야기하고 간담회 하는 시간이 있는데, 외할머니 상 때문에 Elastic{on} 키노트만 끝내고 이스라엘로 돌아가서 대신 각 팀 리더들이 모두 나와 직원들과 질문 응답 하는 시간을 가졌습니다.</p><p><img src="IMG_1535.jpg" alt=""> </p><p>양 끝에 짤려 조금 더 있기는 한데 대충 20명 가까이 나왔던 것 같습니다. 올해 엔지니어링 all hands 참석한 사람이 (엔지니어만) 270명 정도 되었는데, (제가 입사할 때 전 직원이 200명, 엔지니어는 120여명) 이제 팀도 정말 많아졌습니다. 사진에 마이크를 들고 있는 사람은 로그스태시 창시자이자 Tech Lead인 Jordan Sissel 입니다. 참고로 저희 대부분 엔지니어링 팀에는 Team Lead 와 Tech Lead 가 있습니다. 팀 리드는 팀원들을 관리하고 다른 팀, 회사 전체와 커뮤니케이션하는 역할, 테크 리드는 해당 프로덕트의 큰 그림을 그리고 기술적인 부분을 총괄하는 역할 정도로 생각하면 될 것 같습니다. 한국 기업에서 조직생활 할 때는 대부분 직급에 따른 그룹장, 팀장, 프로젝트별 PM, 기능별 PL 정도 였던 것 같은데 Elastic을 비롯한 외국 IT 기업들은 역할들이 좀 더 세분화되어 있고 구체적인것 같습니다. 솔직히 저는 아직도 Engineering VP 와 CTO 의 차이를 잘 모르겠습니다. (작은 회사는 한 사람이 두 역할을 대부분 병행하기는 합니다.)</p><p>전체 간담회가 끝나고 오후부터는 본격적으로 팀별로, 그리고 Cross-Team 미팅 시간들을 가졌습니다. 저는 Beats 팀과 Evangelist 팀 두곳에 속해있습니다. 참고로 저희 직원들은 2개 이상 팀에 걸쳐 있는, 포지션이 애매모호한 직원들이 많습니다. 역시 여러번 출장을 오게 되니 점점 사진은 안 찍게 되네요. 아래 사진은 Beats 팀의 새로운 멤버 카를로스가 찍은 Beats 팀 사진입니다. 두명 정도가 빠졌네요.</p><p><img src="DSC01336.JPG" alt=""> </p><p>Evangelist 팀은 몇명 안 되서 항상 모이면 모여서 셀피로 사진을 찍습니다. </p><p><img src="IMG_1553.jpg" alt=""> </p><p>참고로 Evangelist 팀은 두명(여성 둘 - 미국) 빼고 국적이 전부 다릅니다.</p><p>아래 사진이 Beats - Logstash 팀 크로스 미팅 중 찍은, <a href="https://www.facebook.com/kimjmin81/posts/1482567221784652" target="_blank" rel="noopener">SNS 에서 화제</a>가 되었던 조던의 사진입니다. 아직 돌이 안 된 아이를 안고 와서 회의 리딩하는 모습입니다. (프리젠테이션 내용은 살짝 가렸습니다.)</p><p><img src="IMG_1550.JPG" alt=""> <img src="IMG_1552.jpg" alt=""> </p><p>보통 저녁도 식당 예약해서 직원들 다 같이 먹는데 한번은 길 건너 네바다주에 있는 카지노 식당에서 저녁을 먹었습니다. 호텔이 캘리포니아 주 끝자락에 있어서 길 하나만 건너면 카지노 천국입니다.</p><p><img src="IMG_1538.jpg" alt=""> <img src="IMG_1541.jpg" alt=""></p><p>출장 기간 중 하루는 Fun Day 라고 해서 직원들 다 같이 관광, 여가 활동을 합니다. 가족들도 같이 해도 되고요. 작년에는 스키, 스노모빌, 하이킹 등이 있었는데 올해는 스키, 유람선, 보트낚시가 있었습니다. 저는 가족들과 유람선을 타러 갔는데, 풍경도 너무 좋고 레이크 타호 물이 정말 깨끗했습니다.</p><p><img src="IMG_1562.jpg" alt=""> <img src="IMG_1569.jpg" alt=""> </p><p>위 사진 두장은 Fun Day가 아니고 다른날 저녁에 산책하며 찍은 사진입니다. 아래서부터 유람선 사진입니다.</p><p><img src="IMG_1582.jpg" alt=""> <img src="IMG_1586.jpg" alt=""> <img src="IMG_1588.jpg" alt=""> <img src="IMG_1595.jpg" alt=""> <img src="IMG_1603.jpg" alt=""></p><p><img src="IMG_1607.jpg" alt=""> <img src="IMG_1608.jpg" alt=""> <img src="IMG_1610.jpg" alt=""> <img src="IMG_1614.jpg" alt=""> <img src="IMG_1621.jpg" alt=""> <img src="IMG_1624.jpg" alt=""></p><p>날씨도 좋고 풍경도 정말 한폭의 그림을 보는것 같았습니다. 다녀온 지 한달이 다 되어가는데, 아내님은 아직도 타호 앓이 중이십니다. 타호 지역의 특징은 아직 눈이 녹지 않은 영하의 날씨인데 햇볓이 정말 강해서 날이 안 춥습니다. 호수 건너 산기슭을 보니 제작년까지 재밌게 했던 게임 스카이림이 떠오르네요. 아… 스카이림 하고싶어라. ㅠ_ㅠ</p><p>유람선 관광을 마치고 나서는 곤돌라를 탔습니다. 스키장 가려면 꼭 타야 해서 보통 스키 패키지로 종일권 끊는데 그냥 곤돌라 관광만 하는 1회용 표는 성인 1명 가격이 50달러 가까이 되어서 작년에 혼자 왔을때는 아까워서 안 탔습니다. 올해는 래은이는 공짜, 래원이도 12달러 정도라 한번 타 봤는데 정말 타기를 잘 했던것 같습니다.</p><p><img src="IMG_1635.jpg" alt=""> <img src="IMG_1636.jpg" alt=""> <img src="IMG_1638.jpg" alt=""> <img src="IMG_1642.jpg" alt=""> <img src="IMG_1649.jpg" alt=""></p><p>창 아래로 숲도 보이고 저 멀리 호수도 보입니다. 꽤 높이까지 올라가느라 고소공포증 있는 사람은 쵸큼 무서울 수 있습니다. 산 정상 부근에 전망대가 있어 여기서 한번 내렸다가 전망대 보고 다시 산 넘어까지 갑니다.</p><p><img src="IMG_1654.jpg" alt=""> <img src="IMG_1658.jpg" alt=""> <img src="IMG_1660.jpg" alt=""> <img src="IMG_1663.jpg" alt=""> <img src="IMG_1667.jpg" alt=""></p><p><img src="IMG_1672.jpg" alt=""> <img src="IMG_1675.jpg" alt=""> <img src="IMG_1682.jpg" alt=""></p><p>올라오면 날씨는 약간 더 쌀쌀해지지만 햇빛도 강해져서 오히려 더 따뜻한 느낌입니다. 호수가 한눈에 보이니 참 시원합니다. 전망대를 한바퀴 돈 뒤 다시 곤돌라를 타고 끝까지 가니 거기서 부터 스키장입니다. 사람들이 다 스키를 어디서 타는가 했더니 스키장이 산 넘어에 있었습니다.</p><p><img src="IMG_1690.jpg" alt=""> <img src="IMG_1696.jpg" alt=""> <img src="IMG_1708.jpg" alt=""></p><p>저희는 스키타러 온 것이 아니고 장비도 없어서 눈길만 걷다 왔는데 애들이 너무 좋아합니다. 내려갈 생각을 안 합니다. 코스가 50여개 정도 있다고 본 것 같은데 사우스 레이크 타호는 정말 스키어, 보더들의 천국인것 같았습니다. 내려오는 곤돌라는 나이 지긋한 남자분 둘과 같이 탔는데 얼핏 봐도 60은 되어 보이는 분들이 매년 스키타러 온다고 했습니다.</p><p>타호에서의 일정도 모두 마치고 저는 4일 더 휴가를 내서 LA 쪽에서 가족 여행을 더 하고 왔습니다. 처음에는 LA까지 운전을 해서 갈까 했는데, 아이들도 아직 어리고, 너무 길에서 시간을 많이 쓰는것 같아 국내선 비행기를 타고 가기로 했습니다. 레이크 타호에서 가까운 곳은 리노(Reno) 라는 도시의 국내 공항이 있습니다. 여기는 네바다 주 라서 여기로 조금만 가다 보면 타호와는 완전히 다른 기후의 사막 풍경이 펼쳐집니다.</p><p><img src="IMG_1714.jpg" alt=""></p><p>공항에 왔는데, 카트 사용하는데 5달러 입니다… 저가 항공 탔더니 짐도 부치려면 개당 25불씩 추가로 내야 했고요.</p><p><img src="IMG_1726.jpg" alt=""></p><p>배가 별로 안 고파 전날 먹다가 남기고 싸 온 피자로 대충 때웠습니다. 지금 사진을 다시 보니 애들한테 좀 미안하네요.</p><p><img src="IMG_1728.jpg" alt=""></p><p>저는 BestBuy 자판기에서 아이팟 파는것도 예전에 봤는데, 아내님은 음식물 외의 이런 일상품을 파는 자판기를 처음 보셨습니다. 신기해서 한참을 보더군요.</p><p><img src="IMG_1736.jpg" alt=""></p><p>가장 인상적이었던 것은, 역시 네바다 주 라서 여기저기 슬롯머신들이 있었습니다. 비행기 타는 터미널 바로 앞 까지 있었는데, 사람들이 비행기를 기다리면서 간간히 플레이하고 있었습니다. 비행기 출발이 30분 정도 연장된다는 방송이 나오니 저도 가서 한판 땡기고 싶어지더군요. (실제로 하진 않았습니다.)</p><p><img src="IMG_1724.jpg" alt=""> <img src="IMG_1739.jpg" alt=""></p><p>비행기를 타고 화창한 날씨 가운데 정들었던 타호와 작별을 했습니다. 다음 목적지는 롱비치 입니다.</p><p><img src="IMG_1741.jpg" alt=""></p><p>이번 All Hands 를 하면서 느낀 점 한가지는 예전보다 비맥북 가진 사람들이 많이 보였습니다. IBM 씽크패드나 마이크로소프트의 서피스북을 쓰는 친구들도 있었습니다. 물론 아직까지 대부분은 맥을 쓰고 있습니다. 뉴 맥북 프로 가져온 직원들 보니 조금 부러웠습니다. 저도 업그레이드 하고 싶네요.</p><p>그리고 이번에 Engineering VP인 케빈과 개인적인 면담을 했는데, Evangelist가 제가 정말 좋아하는 일이고 즐겁기는 한데 앞으로의 커리어를 생각하면 다른 쪽으로도 경력을 좀 더 쌓아야 할 것 같은 느낌이 들어서 팀 포지셔닝 관련해서 이야기를 좀 했습니다. 일단 제가 잘 할 수 있고, 사업쪽에도 도움이 될 만한 부분을 나름 구상 해 가서 제안을 했는데 회사 정책에 반하는 부분이 있어서 그 이야기는 좀 잘 진행되진 않았던 것 같습니다. 결론적으로 지금 팀은 유지하기로 했습니다.</p><p>케빈과 이야기하면서 고마웠던 점은,</p><ul><li>케빈 자신은 어느 순간부터 VP of Engineering이 되고 싶다는 목표가 생겼고 지금은 그 일을 하고 있다. 하지만 개발 스킬로 따지면 자신 역시 주니어다.</li><li>조급해 하지 말고 앞으로 2,3년 뒤에 뭐가 되고 싶은지 포커스 해봐라. 개발자가 될건지, 아키텍트가 될건지, 트레이너가 될건지.</li><li>어떤 결정을 하던 간에 자신은 Fully Support 할 것이다.</li><li>지금의 커리어 문제는 걱정 말아라. 가장 중요한건 일을 하면서 너 자신이 행복한것이다.</li></ul><p>와 같은 이야기를 해 줘서 참 고마웠습니다. 지금 Beats 팀 리드인 모니카와 테크 리드인 튜더랑도 이야기 했는데, 그들도 지금 제가 Beats 프로젝트에 많이 기여하지 못하는 점은 신경쓰지 말고 하는 일이 행복하면 그걸로 자신들은 괜찮다는 식으로 이야기를 해 줬고요.</p><p>처음 입사했을 때 Evangelist 팀 리드였던 샤낙에게도 <strong>“나는 Elastic에 입사하게 된걸 정말 행운으로 생각한다”</strong> 라는 말을 한 적이 있었는데, 그 때 샤낙이 <strong>“Elastic 역시 너같은 직원을 두게 된 것이 큰 행운이다”</strong> 라는 이야기를 해 줘서 정말 고마웠던 적이 있었습니다. 관리자들이 하는 그냥 표면적인 이야기일수도 있지만 그래도 필요할 때 이런 이야기를 하면서 소통할 수 있다는게 참 좋습니다.</p><p>(안 짤리고 계속 잘 다녀야 할텐데 말이죠.)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;샌프란시스코에서 Elastic{on} 2017 행사가 끝나고 사우스 레이크 타호에서 또다른 출장 겸 가족 여행 시간을 가졌습니다. 샌프란시스코 행사 겸 여행기는 &lt;a href=&quot;/2017/03/2017-03-elasticon17/&quot;&gt;이전 포스트&lt;
      
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/categories/Elasticsearch/"/>
    
    
      <category term="Life" scheme="http://kimjmin.net/tags/Life/"/>
    
      <category term="Elastic" scheme="http://kimjmin.net/tags/Elastic/"/>
    
      <category term="Elasticon" scheme="http://kimjmin.net/tags/Elasticon/"/>
    
      <category term="가족" scheme="http://kimjmin.net/tags/%EA%B0%80%EC%A1%B1/"/>
    
      <category term="여행" scheme="http://kimjmin.net/tags/%EC%97%AC%ED%96%89/"/>
    
      <category term="미국" scheme="http://kimjmin.net/tags/%EB%AF%B8%EA%B5%AD/"/>
    
  </entry>
  
  <entry>
    <title>Elastic{on} 17 Review</title>
    <link href="http://kimjmin.net/2017/03/2017-03-elasticon17/"/>
    <id>http://kimjmin.net/2017/03/2017-03-elasticon17/</id>
    <published>2017-03-07T04:08:40.000Z</published>
    <updated>2017-11-24T22:42:22.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>이 포스트는 행사의 전반적인 분위기와 개인 여행기에 대한 기록입니다. 행사 때 발표 한 세부 내용은 4월에 Elastic 서울 밋업에서 나누도록 하겠습니다.<br>키노트 영상은 <a href="https://www.elastic.co/elasticon/conf/2017/sf" target="_blank" rel="noopener">Elastic 홈페이지</a>에 올라와 있으며, 행사에 대한 내용은 트위터의 <a href="https://twitter.com/hashtag/elasticon" target="_blank" rel="noopener">#elaticon 해시태그</a>로 검색하면 더 많이 볼 수 있습니다.</p></blockquote><p>2017년 3월 7일부터 9일까지 샌프란시스코에서 열리는 Elastic{on} 17 행사에 다녀왔습니다. Elastic에서 매년 봄에 하는 연례 행사임과 동시에 저희 직원들이 일년에 한번 한자리에 모이는 기회이기도 합니다. 저는 작년에 이어 두번째로 참여를 했고요, 작년에는 직원들이 가족들을 많이 데리고 왔기에 저도 올해는 가족들과 함께 여행을 했는데, 올해는 저희 말고는 참여한 가족이 많지는 않았습니다. ㅠ_ㅠ</p><p>어린 아이들을 데리고 해외 나가는 것은 여행이 아니라 또다른 육아일 뿐이란 것을 이미 <a href="/2016/06/time-in-berlin">작년 베를린</a>에서 경험했지만, <strong><em>인간의 욕심은 끝이 없고 항상 같은 실수를 반복하기에</em></strong> 이번에도 가족과 함께 비행기를 탔습니다. 어떤 분들은 애들 데려갈 비용을 차라리 조부모님께 드리고 애들 맡긴 다음 아내와 둘이 가라고, 3살 5살이면 어디 갔었는지 기억도 못 한다고 충고하셨지만, 저랑 아내 생각은 아이들이 기억은 못 하더라도 행복한 순간에 아이들과 함께라면 더 좋겠다 라는 생각이 있고, 그리고 결과적으로도 아이들과 함께 해서 (힘들긴 했지만) 아이들, 특히 첫째 래원이가 생각보다 많이 성장한 것을 볼 수 있어서 너무 좋았던 시간이었습니다.</p><p>여하튼, 그렇게 저희는 다 같이 샌프란행 비행기에 몸을 실었습니다.</p><p><img src="IMG_1230.jpg" alt=""> </p><h1 id="Day-0"><a href="#Day-0" class="headerlink" title="Day-0"></a>Day-0</h1><p>작년에 저 혼자 갔을때는 여권만 챙겨갔는데, 이번에는 도** *럼* 대통령도 있고 해서 혹시 몰라 <strong>ESTA 영수증, Elastic{on} 참석 확인증, 비행 스케줄, Elastic 재직 증명서</strong> 등을 싸그리 출력 해 갔습니다. 비행기에서 내려 애들 화장실 다녀오느라 저희가 입국심사 거의 마지막으로 했는데 저희 심사관이 점심시간이 가까워서 대충 보고 도장 찍고 보내준 뒤 점심 먹으러 갔습니다. 다행입니다.</p><p>여튼, 그렇게 공항에서 나와 리프트(Lyft, 우버와 비슷한 서비스 입니다.) 를 타고 에어비엔비로 예약한 숙소에 갔습니다. 보통은 회사에서 직원들 호텔 단체로 예약하는데 저는 가족들이랑 가서 에어비엔비에 묵겠다고 했습니다. 샌프란 물가 답게 차이나타운 한복판에 있는 작은 집인데도 가격이 어마무시했습니다.</p><p>그냥 좁은 계단 2층 위에 부엌 하나, 침실 2개 있는 평범한 집입니다.</p><p><img src="IMG_1233.jpg" alt=""> <img src="IMG_1237.jpg" alt=""> </p><p>따님은 오자마자 침대에 드러 누우시고…</p><p><img src="IMG_1234.jpg" alt=""></p><p>샌프란에 아침 10시에 도착했는데 저녁 5시 부터 직원들은 행사장에 모여야 해서 실제로 낮에 시간이 있는 날이 첫날 밖에 없었습니다. 그런데 아내님도 피곤하다고 누우셔서 쌩쌩하던 아들래미랑 둘이서만 가까운 <a href="https://goo.gl/maps/aQFcZo7NcwM2" target="_blank" rel="noopener">PIER 39</a>로 잠깐 놀러갔다 왔습니다.</p><p>샌프란 명물 물개들과</p><p><img src="IMG_1243.jpg" alt=""> </p><p>알카트라즈 섬도 멀찌감치 보고</p><p><img src="IMG_1249.jpg" alt=""> <img src="IMG_1251.jpg" alt=""> <img src="IMG_1254.jpg" alt=""> </p><p>꼭 먹어봐야 한다는 크랩차우더를 사다가 포장 해 왔습니다.</p><p><img src="IMG_1255.jpg" alt=""> </p><p>걸어서 30분 정도 걸리는 곳에 숙소가 있어서 걸어갔다 왔는데 오는 길에 비가 또 왕창 쏟아져 고생했습니다.</p><p>저는 저녁에 행사장에 사전 모임이 있어서 행사장으로 갔습니다. 올해 행사도 작년과 동일한 PIER 48 에서 했습니다. 직원들도 매년 만나면 서로 똑같이 인사하고, 똑같이 이름 물어보고. 그래도 다들 너무나 반갑습니다.</p><p><img src="IMG_1258.jpg" alt=""> <img src="IMG_1259.jpg" alt=""> <img src="IMG_1263.jpg" alt=""> </p><p>AMA(Ask Me Anything) 부스도 작년보다 커졌고, 특히 데모 부스가 작년에는 스탠딩 모니터 하나만 놓고 했는데 올해는 아예 부스로 더 화려하게 꾸몄습니다.</p><p><img src="IMG_1270.jpg" alt=""> <img src="IMG_1274.jpg" alt=""> <img src="IMG_1277.jpg" alt=""> </p><p>대외적으로는 Elastic{on} 행사 때 발표 할 예정이었고, 직원들에게는 미리 공지가 되었었는데, Elastic CEO인 스티브 셔먼이 보드 멤버로 물러나고 Elasticsearch 창시자이자 CTO인 샤이 배논이 CEO로 취임하게 되었습니다. 스티븐 셔먼과 작별하는 자리에서 스티브 셔먼과 닯은 곰인형을 들고 올라와 뒤에서 Support Team VP 인 마티가 (저희 회사에서 제일 웃긴 사람입니다.) 곰돌이를 가지고 제스처 연기를 했습니다.</p><p>왼쪽부터 스티브 셔면, 샤이 배논, 레아 히튼(HR VP), 곰인형…</p><p><img src="IMG_1265.jpg" alt=""></p><p>그렇게 반가운 사람들과 오랫만에 인사하고, 행사장 미리 둘러보고 숙소에 와서 가족들과 낮에 사온 크랩차우더를 먹으며 첫날을 마무리 했습니다.</p><p><img src="IMG_1285.jpg" alt=""> </p><h1 id="Day-1"><a href="#Day-1" class="headerlink" title="Day-1"></a>Day-1</h1><p>오늘부터 공식적으로 Elastic{on} 이 시작하는 날입니다. 세션과 스케줄에 대한 정보들은 이전 포스트인 <a href="/2017/02/elasticon-2017-agenda/">Elastic{on}17 미리보기</a> 를 참고하면 좋을것 같습니다.</p><p>시차적응이 아직 안 된 새벽같이 일어나 놀다가 아빠 일하러 간다고 창문에서 빠빠이 합니다.</p><p><img src="IMG_1287.jpg" alt=""> </p><p>보통 직원들 묵는 호텔부터 행사장 까지는 걸어서 30분 정도 거리이고, 셔틀 버스를 운행하는데 저는 따로 차이나타운 한복판에 에어비엔비에서 묵고 있어서 버스를 타고 출근했습니다. PIER 48에 작년처럼 Elastic{on} 행사를 알리는 현수막이 크게 자리잡고 있습니다.</p><p><img src="IMG_1288.JPG" alt=""> </p><p>행사장 안으로 들어서면 왼쪽 벽 전체에 페브릭으로 Elastic Stack 의 히스토리 그래프가 쭉 그려져 있습니다. 스티커를 가지고 자기가 제일 처음 사용한 Elasticsearch, Logstash, Kibana, Beats 버전에 붙일 수 있게 되어 있습니다.</p><p><img src="IMG_1292.jpg" alt=""> <img src="IMG_1305.jpg" alt=""> </p><p>줄기 중 하나는 각 지역별 커뮤니티가 시작된 시기가 나와있는데, 서울 커뮤니티도 2014년도 초반에 기록되어 있습니다. 12명이서 처음 밋업 했던 기억이 나네요. :)</p><p><img src="IMG_1293.jpg" alt=""> </p><p>작년처럼 털실 가지고 실세계 데이터 시각화 하는 월도 있었는데, 이번에는 좀 더 세분화 하긴 했는데 항목들이 작년보다 좀 더 난해했던 것 같습니다.</p><p><img src="IMG_1302.jpg" alt=""> </p><p>발표자로 오신 우버의 배재현님을 만나 같이 온 한국분들 몇분과 함께 사진도 찍었습니다. :)</p><p><img src="IMG_1309.jpg" alt=""> </p><p>각 스테이지 마다 나가는 문 앞에 버튼이 있어 이번 세션이 좋았는지 나빴는지를 바로 바로 평가할 수 있습니다.</p><p><img src="IMG_1313.jpg" alt=""> </p><p>오후 1시 부터 오프닝 키노트를 시작했습니다. 키노트 때는 모든 부스 (데모, AMA, 등등)를 셧다운 하고 모든 참석자와 직원들도 다 와서 키노트를 들을 수 있도록 했습니다. 키노트의 시작은 발레리나가 온 몸 각 부위에 센서를 달고 나와서 춤을 추는 동안 센서 데이터가 Elasticsearch로 색인되고 Kibana가 0.1초 단위로 리프레쉬 하면서 데이터를 시각화 하는 퍼포먼스를 했습니다.</p><p><img src="IMG_1324.jpg" alt=""> </p><p>퍼포먼스가 끝나자 Founder이자 새로운 CEO인 샤이 배논이 나타나 인사를 하며 앞의 퍼포먼스를 어떻게 기획하게 되었는지 설명을 합니다. 그리고 몇가지 키노트 발표를 했습니다. 주요 내용들은 <em>Elastic Stack 1억 다운로드 달성</em> 이 있고, 각 스택들의 버전 라이닝에 대한 도전, 작년에 문제가 되었던 타일맵을 다시 만든 이야기 들을 했습니다.</p><p><img src="IMG_1326.jpg" alt=""> </p><p>그 다음으로는 Beats 팀의 테크리드인 Tudor가 나와서 Filebeat Module 에 대해 설명했습니다. Metricbeat의 모듈 개념을 Filebeat에 적용 한건데요, Filebeat으로 읽어들이는 파일 형식 중 흔하게 사용되는 Apache, System, Nginx 등의 로그 들은 Filebeat 실행 커맨드에 명시만 해 주면 데이터 패턴 인식, Elasticsearch에 ingest pipeline 생성, Kibana 대시보드 생성 까지 한번에 하는 기능입니다.</p><p>이 부분은 사진을 못 찍었네요.</p><p>그 다음으로는 UI 팀의 스타 엔지니어중 한명인 <a href="https://github.com/simianhacker" target="_blank" rel="noopener">Christopher Cowan</a>이 나와 새로운 시계열 시각화 도구를 소개했습니다. Timelion을 하려면 새로운 문법을 익히기도 해야 하고 해서 별도 UI툴을 만든 것입니다.</p><p><img src="IMG_1331.jpg" alt=""> </p><p>그 다음은 작년 9월에 인수한 머신러닝 기업인 Prelert의 창시자이자 CTO였고, 현재는 Elastic Machine Learning 팀의 테크 리드인 Steve Dodson이 나와 Elastic Machine Learning 에 대해 설명합니다. Prelert는 앞으로 X-Pack의 Machine Learning 모듈로 포함되어 서비스 될 예정입니다.</p><p><img src="IMG_1335.jpg" alt=""> </p><p>다음은 전 CEO 스티브 셔먼이 Elastic Stack 을 사용하는 구호 단체들을 소개하고 Cause Award 를 수여하는 수여식을 했습니다. Elastic Stack은 참고로 구호단체들로 부터 아프리카의 에볼라 바이러스 확신 추이를 분석한다거나, 전쟁 지역의 인신매매 아이들을 찾는 시스템 등에 활용되고 있습니다.</p><p><img src="IMG_1343.jpg" alt=""> </p><p>그리고 저희 또다른 스타 엔지니어인 <a href="https://github.com/costin" target="_blank" rel="noopener">Costin Leau</a>가 나와 Elasticsearch SQL을 소개했습니다. Elasticsearch에서 표준 SQL 사용이 가능하고, 토드 같은 SQL 툴로 Elasticsearch를 사용할 수 있게 합니다.</p><p><img src="IMG_1350.jpg" alt=""> </p><p>그리고 키노트 마지막으로는 Kibana 창시자인 Rashid Khan이 나와 Kibana Canvas를 소개했습니다. Kivana 에서 PPT 같은 프리젠테이션 툴을 제작할 수 있도록 하는 도구입니다.</p><p><img src="IMG_1353.jpg" alt=""> </p><p>이제 키노트를 마치고 다들 발표하러, 맡은 일 하러 자기 자리로 돌아갔습니다. 저도 첫날 오후 2시부터 5시 까지 AMA 부스에 배정되어 있어서 AMA에서 많은 관람객들을 상담했습니다. 작년에는 보드를 따로 준비했는데, 이번에는 테이블을 마커를 쓸 수 있는 재질로 만들어서 상담이 오면 테이블에 적으면서 설명을 했습니다.</p><p><img src="IMG_1359.jpg" alt=""> </p><p>운이 좋으면 Definitive Guide 저자이자 Elasticsearch 팀 리드인 <a href="https://github.com/clintongormley" target="_blank" rel="noopener">Clinton Gormley</a>나 Rashid Khan 같은 사람에게 질문을 할 수도 있습니다. 왼쪽에 키 큰 아저씨가 Clint 입니다.</p><p><img src="IMG_1362.jpg" alt=""> </p><p>첫날은 키노트 이후 AMA 부스 지킴이만 하느라 저는 세션 하나도 못 들었네요. 듀티 마치고는 저도 여기저기 부스 구경만 하면서 다녔습니다.</p><p>Heartbeat 부스라고, 손가락 얹어 놓으면 센서가 맥박을 감지해서 시각화 하는 부스도 있었고,</p><p><img src="IMG_1364.jpg" alt=""> </p><p>한쪽에는 기계가 그림을 그리는 전시가 있었습니다. 행사장 Wifi 스위치들 별로 접속자 수를 통계 내어 지금 어느 스테이지, 어느 부스에 사람이 가장 많이 몰려 있는지를 표시 하는 것입니다. 검은 타일 하나가 스위치 하나라고 보면 됩니다.</p><p><img src="IMG_1387.jpg" alt=""> <img src="IMG_1385.jpg" alt=""> </p><p>첫 날 행사는 이렇게 키노트 중심으로 가볍게 지나갔습니다. 밖에 나오면 셔틀 버스가 운행되는 곳 조금 뒤에 저처럼 우버, 리프트, 택시를 타는 사람들이 편하게 차량을 잡을 수 있도록 사인보드도 설치 되어 있었습니다.</p><p><img src="IMG_1365.jpg" alt=""> </p><p>첫날 일정이 끝나고 저는 숙소에 돌아와서 가족들과 장을 보러 나갔습니다. 아내가 가고 싶어 했던 Trader Joe’s 에 가서 간단히 장을 보고 돌아와 늦은 저녁을 먹었습니다.</p><p><img src="IMG_1367.jpg" alt=""> </p><p>타지에 가족들만 남기고 낮에는 일하러 나와야 해서 내심 걱정을 했는데 아빠가 없는 동안 첫째 래원이가 엄마도 많이 도와주고, 동생도 잘 돌봐주었다고 해서 정말 대견했습니다.</p><h1 id="Day-2"><a href="#Day-2" class="headerlink" title="Day-2"></a>Day-2</h1><p>처음 샌프란에 온 날은 비가오고 추웠는데 날씨가 점점 좋아져서 행사 둘째날은 아침 일찍 나와 행사장 까지 걸어갔습니다.</p><p>이 터널을 지나면 새로운 세상이 펼쳐집니다. 한쪽은 신 시가지, 한쪽은 차이나타운 입니다.</p><p><img src="IMG_1371.jpg" alt=""> </p><p>걸어오다 보니 모스콘 센터에서 구글이 또 다른 행사를 하고 있었습니다. 아마 구글 클라우드 관련 행사였던걸로 기억하는데요 오픈 전 부터 사람들이 블록 모퉁이를 돌아 쭉 줄을 서 있었습니다.</p><p><img src="IMG_1372.jpg" alt=""> </p><p>거의 한시간 정도 걷다 보니 저 멀리 행사장이 보입니다. 발이 슬슬 아파왔지만 한국처럼 미세먼지도 없고 해서 오는 내내 상쾌했습니다.</p><p><img src="IMG_1373.jpg" alt=""> </p><p>이 날 걸은 거리.</p><p><img src="IMG_1374.jpg" alt=""> </p><p>둘째 날 부터는 푸드 트럭들이 와서 아침과 점심 식사를 제공했습니다. 제가 오픈 시작보다 일찍 와서 아직 아침에는 푸드 트럭들은 많이 없었습니다. 저는 호텔에서 안 묵었지만 작년 기억으로는 호텔에서 아침 식사는 제공하지 않았고 직원들도 모두 행사장 와서 먹었던 것으로 기억합니다.</p><p>샌프란의 명물 필즈 커피 트럭도 와 있었습니다. 처음에는 사람들이 돈 받는줄 알고 안 갔는데 여기도 Elastic에서 섭외 한거라 공짜로 마실 수 있었습니다.</p><p><img src="IMG_1379.jpg" alt=""> </p><p>둘째날은 AMA 부스 오전 듀티라서 오전 내내 관람객들 상담을 했습니다. 확실히 작년 보다 질문하러 오는 분들 수준도 많이 높아진 것을 느낄 수 있었습니다. 질문하러 오신 분들 중 기억에 남는 분이 몇명 있는데, 그 중 한분은 Elasticsearch 1.x 버전 때 부터 2.x, 5.x 버전을 업그레이드 하는 동안 GC 로그 그래프를 죄다 프린트 해 와서 질문 한 사람이 있었습니다. 버전 업을 할 때마다 그래프 패턴이 계속 변해서 그에 대해서 질문을 하러 왔었습니다. 옆에 있던 다른 Elasticsearch 팀 엔지니어도 확실히 대답을 할 수가 없어서 질문자에게 <a href="https://github.com/danielmitterdorfer" target="_blank" rel="noopener">Daniel Mitterdorfer</a> 를 찾아서 질문하라고 알려주었습니다. Elastic{on} 앱을 꺼내서 Daniel 이 발표하는 세션과 Fether of Birds 토크 시간을 알려주고 거기 참석해서 물어보면 된다고 했습니다. 참고로 Daniel은 저희 벤치마킹 툴인 <a href="https://github.com/elastic/rally" target="_blank" rel="noopener">Rally</a>를 만들었고 Elasticsearch 기능 중 힙메모리 관련 부분을 담당하고 있는 엔지니어 입니다. AMA에서 상담을 하려면 know how, know where도 중요하지만 특히 <strong>know who</strong> 가 중요하다는걸 느꼈습니다.</p><p>이건 여담인데 Rally는 저희 경쟁사인 “S”사 에서도 벤치마킹 툴로 쓰고 있다는 정보를 어디선가 들었습니다.</p><p>점심때가 되어 듀티를 마치고 바깥 주차장으로 가니 푸드트럭들이 장사가 한창입니다.</p><p><img src="IMG_1392.jpg" alt=""> <img src="IMG_1393.jpg" alt=""> </p><p>한국에서 오신 분들하고 같이 모여서 점심을 먹었습니다. 이번 행사에는 한국에서 15분 정도가 참석 해 주셨습니다.</p><p><img src="IMG_1399.jpg" alt=""></p><p>오후에는 이제 듀티가 없어서 저도 듣고 싶은 세션들을 들으러 갔습니다. </p><p>먼저 블리자드 세션을 들으러 갔습니다. 블리자드는 Elastic 고객사 중에서도 Tribe node를 이용한 멀티 클러스터를 가장 잘 사용중인 고객 중 하나입니다. 솔직히 슬라이드 디자인 보느라 발표는 귀에 들어오지 않았네요.; 슬라이드 한장 한장 마다 와우, 디아블로, 오버워치 일러스터들이 있었습니다. 저 발표 템플릿 가지고 싶네요. 흑흑.</p><p><img src="IMG_1402.jpg" alt=""> <img src="IMG_1412.jpg" alt=""> <img src="IMG_1418.jpg" alt=""> <img src="IMG_1419.jpg" alt=""> </p><p><em>우리는 아직 준비가 안됬다!</em> - 와우에 나오는 누군가의 대사입니다.</p><p><img src="IMG_1424.jpg" alt=""> </p><p>저 일러스터 캐릭터 이름이 텔마플러그…</p><p><img src="IMG_1426.jpg" alt=""> </p><p>그 뒤로도 세션을 두어개 더 들었는데 사진은 안 찍었습니다. 이번에는 돌아다니면서 사진을 정말 별로 안 찍었네요.</p><p>첫 날 세워둔 리얼 월드 데이터 시각화 벽에도 제법 많은 스트링들이 묶여 있습니다.</p><p><img src="IMG_1431.jpg" alt=""> </p><p>데모 부스도 한번 가 봤는데, Cloud 부스 쪽에서 사용자 정의 맵으로 히트맵 표현하는 데모를 해 놓아서 사람들이 많이 관심있어 했습니다. 행사장 Wifi 신호를 분석해서 어느 위치에 지금 사람이 얼만큼 많이 있는지를 실시간으로 시각화 한 데모입니다.</p><p><img src="IMG_1433.jpg" alt=""></p><p>원래 이 날 저녁에는 참석자들 다 같이 <a href="https://goo.gl/maps/rqtm6G4D3ZC2" target="_blank" rel="noopener">California Academy of Sciences</a> 에서 파티가 있을 예정이었습니다. 저도 가려고 했는데 한국에서 급하게 서포트 요청이 와서 호텔에서 동료들과 함께 늦게까지 처리하느라 파티는 못갔네요. ㅠ_ㅠ</p><p>여하튼, 행사 둘째날도 잘 보냈습니다.</p><h1 id="Day-3"><a href="#Day-3" class="headerlink" title="Day-3"></a>Day-3</h1><p>벌써 행사 마지막 날입니다. 이 날도 행사장 까지 걸어갔습니다. 전날과 다른 루트로 해서 번화가를 가로질러 갔는데 출근하는 사람들의 모습이 서울과는 비슷하면서도 약간 다른 느낌도 들었습니다. 서울은 다들 바쁘게, 급하게 가는데 여기는 그것 보다는 조금 주변의 여유를 즐기며 걷는 사람들이 많았던 것 같습니다.</p><p><img src="IMG_1443.jpg" alt=""> <img src="IMG_1444.jpg" alt=""> </p><p>역시 이 날도 아침부터 푸드트럭들이 영업 준비중입니다. 오픈하기를 기다렸다가 밖에서 아침을 먹고 들어갔습니다.</p><p><img src="IMG_1448.jpg" alt=""> </p><p>전날과 동일하게 오전에 AMA 부스에 배정이 되어 있어서 오전에는 부스에 질문하러 오는 사람들을 상담했습니다. 점심을 먹고 나서 오후에는 우버의 배재현님이 하는 세션을 들으러 갔습니다. 우버 역시 여러 레벨의 클러스터에서 다양한 기법으로 Elasticsearch 를 사용중에 있습니다.</p><p><img src="IMG_1462.jpg" alt=""> </p><p>Closing Keynote 전에는 Birds of Feather 에 참석했습니다. Birds of Feather는 특정한 주제를 가지고 사용자들이 모여 토론을 하는 이벤트입니다.</p><p><img src="IMG_1479.jpg" alt=""> </p><p>Closing Keynote 까지 마치고 나니 오후 3시 정도였습니다. 직원들 대부분은 같이 저녁 먹으러 갔는데 저는 아직 가족들에게 샌프란 관광을 제대로 시켜 주지 못해서 가족들 보러 숙소로 돌아갔습니다.</p><p>금방 날이 어두워져 중요한 곳들만 보기로 하고 우선 피어39 로 가서 물개, 알카트라즈들을 보고 가족들에게 돌릴 간단한 선물들을 샀습니다.</p><p>역시 시차때문에 아직 쌩쌩한 아이들은 밤늦게 나왔는데도 좋아라 합니다.</p><p><img src="IMG_1483.jpg" alt=""> <img src="IMG_1486.jpg" alt=""> <img src="IMG_1487.jpg" alt=""></p><p>그리고 케이블카를 타기 위해서 PIER 39 부터  <a href="https://goo.gl/maps/B3HvuicrfZ92" target="_blank" rel="noopener">Powell-Hyde Cable Car Turntable</a> 까지 아이들과 꽤 긴 거리를 걸었습니다. 가는 도중에 진짜 악어만한 빵을 파는 가게가 있길래 신기해서 사진도 한장 찍고…</p><p><img src="IMG_1489.jpg" alt=""> </p><p>케이블카를 타고 <a href="https://goo.gl/maps/iBB1izUmdmq" target="_blank" rel="noopener">Union Square</a> 까지 왔습니다.</p><p><img src="IMG_1493.jpg" alt=""> </p><p>저녁은 <a href="https://goo.gl/maps/S9gt7cjpvk32" target="_blank" rel="noopener">Lori’s Diner</a> 에서 정말 미국 요리다 싶은 요리를 먹었습니다. 저희 가족들은 마지막 밤이 되어서야 미국에 온 기분을 좀 느꼈을 것 같네요.</p><p><img src="IMG_1497.jpg" alt=""> <img src="IMG_1499.jpg" alt=""> </p><p>늦은 식사를 마치고 리프트를 타고 숙소로 돌아가 짐을 챙겨 다음날 떠날 준비를 하고 잠이 들었습니다.</p><h1 id="Day-4"><a href="#Day-4" class="headerlink" title="Day-4"></a>Day-4</h1><p>이제 다음 여정인 레이크 타호로 가는 버스를 타기 위해 아침 일찍 나왔습니다. 나와서 에어비엔비 호스트인 사라와 함께 사진을 찍었습니다. </p><p><img src="IMG_1504.jpg" alt=""></p><p>샌프란에서는 Elastic{on} 행사 때문에 여행다운 느낌은 많이 없었던 것 같아서 아내와 아이들한테 조금 미안하긴 했습니다. 그래도 이 다음 레이크 타호와 롱비치에서는 더 여유롭고 좋은 시간을 보낼 수 있었습니다.</p><p>다음 이야기들은 새로운 포스트로 다시 찾아오겠습니다.</p><ul><li><a href="/2017/03/2017-03-lake-Tahoe">레이크 타호 여행</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;이 포스트는 행사의 전반적인 분위기와 개인 여행기에 대한 기록입니다. 행사 때 발표 한 세부 내용은 4월에 Elastic 서울 밋업에서 나누도록 하겠습니다.&lt;br&gt;키노트 영상은 &lt;a href=&quot;https://www.elas
      
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/categories/Elasticsearch/"/>
    
    
      <category term="Life" scheme="http://kimjmin.net/tags/Life/"/>
    
      <category term="Elastic" scheme="http://kimjmin.net/tags/Elastic/"/>
    
      <category term="Elasticon" scheme="http://kimjmin.net/tags/Elasticon/"/>
    
      <category term="가족" scheme="http://kimjmin.net/tags/%EA%B0%80%EC%A1%B1/"/>
    
      <category term="여행" scheme="http://kimjmin.net/tags/%EC%97%AC%ED%96%89/"/>
    
      <category term="미국" scheme="http://kimjmin.net/tags/%EB%AF%B8%EA%B5%AD/"/>
    
  </entry>
  
  <entry>
    <title>2017-02-22 ES Seoul Meetup 후기</title>
    <link href="http://kimjmin.net/2017/03/2017-02-seoul-meetup/"/>
    <id>http://kimjmin.net/2017/03/2017-02-seoul-meetup/</id>
    <published>2017-03-05T15:00:00.000Z</published>
    <updated>2017-11-24T22:42:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>이런 저런 일로 바빠서 출장중에 이제야 올립니다.</p><p>사전 질문과 서베이 내용은 <a href="/2017/02/2017-02-meetup-survey">이전 포스트</a>에서 보실 수 있습니다.</p><p>눈대중으로 130~140여 분 정도 와 주셨고요, 참석 리스트에 체크 해 주신 분이 97분 이신데 뒤에 서 계신 분들도 많았습니다.</p><p>발표 자료는 각 순서 제목에 링크되어 있습니다. 몇몇 민감한 정보는 삭제했거나 변경되어 발표때와 자료가 약간 다를 수 있습니다.</p><ol><li>김종민 - <a href="Elastic-Stack-Overview.pdf">Elastic Overview</a></li><li>허광남 - <a href="ELK-on-OKKY-HeoKN.pdf">ES 커뮤니티 로그 데이터 활용</a></li><li>김정환 - <a href="elasticsearch-in-nbt.pdf">시스템 운영 아키텍쳐, Logstash 설정과 트러블 슈팅</a></li><li>김종민 - <a href="community-plan.pdf">Elastic 시작하기 &amp; 커뮤니티 운영 방안</a></li></ol><p>허광남님은 별도 발표자료가 아닌 마인드맵과 실제 운용 화면을 이용해서 발표를 해 주셨습니다. 그리고 마침 한국을 방문 중이던 미국의 Product Manager인 Alvin Chen이 Logstash 와 ES-Hadoop 을 잠시 소개하는 시간도 가졌습니다.</p><p>2014년 4월 12명의 참석자분들과 함께 처음 밋업을 시작한 후 이제 10배가 넘는 분들이 이제 매 회마다 참석을 해 주십니다. 항상 관심 갖고 와 주시는 분들께 너무 감사드리고, 먼저 등록 해 주신 분들께는 작은 포장지에 이름 붙여서 조금이나마 특별한 대우를 받는 느낌도 좀 드리고 싶었습니다.</p><p>늦은 시간에 끝났음에도 15분 정도가 2차 치맥 자리까지 함께 해 주셨습니다. 네트워킹도 점점 더 활발 해 지는것 같아서 좋네요. 커뮤니티 운영 방안에 대해 말씀 드린 것은 출장 끝나고 돌아가서 정리한 뒤 다시 공유 드리겠습니다.</p><p>행사 사진 몇장 갈무리 하며 포스트를 마칩니다.</p><p><img src="IMG_1141.jpg" alt=""> <img src="IMG_1143.jpg" alt=""> <img src="IMG_1148.jpg" alt=""> <img src="IMG_1152.jpg" alt=""> <img src="IMG_1154.jpg" alt=""> <img src="IMG_1156.jpg" alt=""> <img src="IMG_1157.jpg" alt=""> <img src="IMG_1158.jpg" alt=""> <img src="IMG_1161.jpg" alt=""> <img src="IMG_1164.JPG" alt=""> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;이런 저런 일로 바빠서 출장중에 이제야 올립니다.&lt;/p&gt;
&lt;p&gt;사전 질문과 서베이 내용은 &lt;a href=&quot;/2017/02/2017-02-meetup-survey&quot;&gt;이전 포스트&lt;/a&gt;에서 보실 수 있습니다.&lt;/p&gt;
&lt;p&gt;눈대중으로 130~140여 
      
    
    </summary>
    
      <category term="ICT" scheme="http://kimjmin.net/categories/ICT/"/>
    
    
      <category term="Hackathon" scheme="http://kimjmin.net/tags/Hackathon/"/>
    
      <category term="Meetup" scheme="http://kimjmin.net/tags/Meetup/"/>
    
  </entry>
  
  <entry>
    <title>커뮤니티 밋업 사전 설문</title>
    <link href="http://kimjmin.net/2017/02/2017-02-meetup-survey/"/>
    <id>http://kimjmin.net/2017/02/2017-02-meetup-survey/</id>
    <published>2017-02-16T05:46:43.000Z</published>
    <updated>2017-11-24T22:42:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>2017년 2월 22일 Elasticsearch 한국 커뮤니티 밋업을 진행합니다. 시간, 장소는 <a href="http://onoffmix.com/event/90317" target="_blank" rel="noopener">여기</a> 에서 확인 할 수 있습니다.</p><p>이번에도 시작하자 마자 많은 분들이 신청을 해 주셔서 얼마 안 되어 마감되었습니다. 사실 밋업을 진행 할 때 마다 고민이 되는 부분이 참석을 하고 나타나지 않는 분들과 미처 신청 하지 못했는데 꼭 오고자 하시는 분들 때문에 평소에도 고민이 많은데, 일단 여기에 대해서는 커뮤니티에 길게 남긴 글이 있어 그 글 좌표 공유하는걸로 정리하겠습니다.<br>페이스북 공지 : <a href="https://www.facebook.com/groups/elasticsearch.kr/permalink/1239898569429314/" target="_blank" rel="noopener">https://www.facebook.com/groups/elasticsearch.kr/permalink/1239898569429314/</a></p><p>우선 지금 신청 완료 된 분은 </p><ol><li>처음 온오프믹스에서 신청 하시고</li><li>온오프믹스에 링크 된 설문 까지 완료 하신 분</li></ol><p>중 선착순 120분들에 한하여 제가 참여확정자로 변경 해 드렸습니다. 온오프믹스가 예전과 뷰가 달라져서 모임 페이지에서 확인이 되는지 모르겠는데, 아마 참여확정자라고 메일 받으신 분들은 확정 되신 분들이고 신청 하셨는데 아무런 피드백을 못 받으신 분들은 대기자 라고 생각하시면 될것 같습니다.</p><p>일단 커피랑 다과는 120인분에 대해 주문을 했습니다. 참여 확정 되신 분들에 한해 이름 확인 하고 현장에서 커피랑 다과 나눠 드릴 예정입니다. 신청을 못 하셨는데 올 수 없냐고 문의 주시는 분들이 항상 계시는데 그런 분들께서 오시는 걸 제가 어떻게 막거나 제재 할 명분은 없습니다. 다만 신청하지 않거나 확정이 아닌데 오신 분들은 우선 커피는 못 받으시는걸로 양해 부탁드리고, 신청 확정 하셨는데 못 오시는 분들이 계신 경우 중간에 그 분들 몫을 다시 분배하는 걸로 하겠습니다.</p><p>신청 확정까지 하시고 따로 말씀 안 주시고 노쇼 하시는 분들 또한 제가 딱히 어떻게 할 방법은 없지만, 다른 성실하게 참여하시는 분들께 피해가 가지 않게 하기 위해 나중에 커뮤니티 운영 참여에는 제한을 두거나 하는 방안을 생각중입니다.</p><p>이제 이번 밋업 참석하시는 분들 추이를 공유하려고 합니다. 사전 설문에는 지금까지 138분께서 답변을 주셨습니다.</p><h2 id="설문-응답-내용"><a href="#설문-응답-내용" class="headerlink" title="설문 응답 내용"></a>설문 응답 내용</h2><p><img src="001.png" alt=""></p><p>늘 그렇듯 개발자 분들이 제일 많으시며 112 입니다. 그 외에 관리자 7, 경영자 5 , 학생 2, 교수/연구원 3, 출판/언론 2, 그 외 6 입니다.</p><p><img src="002.png" alt=""></p><p>실무에서 사용 중인 분들이 절반이 조금 안 되고, 막 시작하는 분들이 26.3%, 처음 들어보는 분들이 9.5% 입니다.</p><p><img src="003.png" alt=""></p><p>항목 전체명은 다음과 같습니다. (복수 응답 가능)</p><ul><li>데이터 분석, 검색, 집계 (Indexing, Searching, aggregation) - Elasticsearch - 129 (94.2%)</li><li>데이터 수집 (Ingest) - Logstash, Beats - 89 (65%)</li><li>데이터 시각화 (Visualization) - Kibana - 75 (54.7%)</li><li>상용 플러그인 - Security (Shield), Alert - 13 (9.5%)</li><li>클라우드 서비스 - Elastic Cloud (Found) - 19 (13.9%)</li><li>Elastic 회사의 비즈니스 및 기업문화 - 11 (8%)</li><li>그 외 - 2 (1.5%)</li></ul><p><img src="004.png" alt=""></p><p>항목 전체명은 다음과 같습니다. (복수 응답 가능)</p><ul><li>Apache, Ngnix, mobile app  등의 웹, 앱 로그 - 68 (56.2%)</li><li>시스템, 서버, 스위치, 보안장비의 CPU, Mem, 네트워크 패킷 등의 머신 로그 - 44 (36.4%)</li><li>html, doc, hwp, txt 등의 아카이브 문서 - 13 (10.7%)</li><li>쇼핑, 커머스 데이터 - 25 (20.7%)</li><li>게임, 미디어, 엔터테인먼트, 방송 데이터 - 13 (10.7%)</li><li>증권, 보험, 금융 데이터 - 5 (4.1%)</li><li>특정 분야의 학술 연구 데이터 - 9 (7.4%)</li><li>그외 - 13 (10.7%)</li></ul><h2 id="질문"><a href="#질문" class="headerlink" title="질문"></a>질문</h2><p>당일 발표하실 분들과 제게 남겨주신 질문들입니다.</p><h4 id="허광남-발표자님께"><a href="#허광남-발표자님께" class="headerlink" title="허광남 발표자님께"></a>허광남 발표자님께</h4><blockquote><ul><li>커뮤니티 로그데이터 분석 후 얻게 된 인사이트가 무엇이있는지와 해당 인사이트가 커뮤니티의 운영에 실질적인 도움이 되었는지 궁금합니다.</li><li>보안 관련 해서 어떤 구성들을 하고 계신지 궁금합니다</li><li>Elasticsearch 보안에 대한 Best Practice가 어떤 것인지 알려주세요</li><li>로그 데이터 분석 관련해서 자세한 수치 및 데이터 규모 등을 알고 싶습니다.</li><li>filebeat 사용 경험이 있으신지요? 있으시다면 사용 후 느낀점이 궁금 합니다. (예를 들어 nxlog 이런 것 보다 이런 면에서는 좋았고 이런 면에서는 별로였다.)</li></ul></blockquote><h4 id="김정환-발표자님께"><a href="#김정환-발표자님께" class="headerlink" title="김정환 발표자님께"></a>김정환 발표자님께</h4><blockquote><ul><li>엘라스틱 운영하실 때 리소스 할당을 하는 기준 같은 게 있나요? 예를 들면 하루에 색인할 로그가 100G정도면 엘라시틱 노드, 메모리는 어느정도 하는 게 좋겠다 같은…</li><li>시스템 운영 아키텍처 운영 결과 어떤 방향으로의 개선을 더 하고 싶으신지 궁금합니다.</li><li>logstash 5.1.1 에서 플러그인 추가시 버그나면 어떻게하나요?</li><li>HA 구성 best case</li></ul></blockquote><h4 id="제게-amp-일반적인-질문"><a href="#제게-amp-일반적인-질문" class="headerlink" title="제게 &amp; 일반적인 질문"></a>제게 &amp; 일반적인 질문</h4><p><strong>기술 관련</strong></p><blockquote><ul><li>엘라스틱 제품군의 단점, 엘라스틱 제품군들을 이용해 어떠한 분석시도들이 이루어지고 있는지</li><li>엘라스틱서치의 보안 가이드 </li><li>엘라스틱을 시작해보고 싶은 사람을 위한 가이드</li><li>프로젝트를 진행하면서 겪은 트러블 슈팅 ( 메모리, 퍼포먼스 튜닝 문제 등) 에 대해</li><li>elasticsearch 5.x에서 불편하게 바뀐 부분이 있다면 무엇이라 생각하시는지요?(보통은 좋아진 이야기들 위주가 되니까 반대로 질문해봤습니다.)</li><li>Machine Learning(Prelert)의 세부 기능을 자세히 알고 싶습니다~</li><li>머신 러닝, 실제 사용 사례</li><li>검색 필드에 어떤 분석기를 어떻게 사용하시는지 궁금합니다.</li><li>local Timezone 이슈</li><li>엘라스틱 서치를 처음 접하는 개발자가 연습으로 실행해보기 좋은 프로젝트 예시는 어떤게 있을까요?</li><li>적절한 shard 크기 및 운영시 인덱스 여부</li></ul></blockquote><p><strong>커뮤니티 운영 관련</strong></p><blockquote><ul><li>카페 또는 사이트를 통한 국내 사용자 커뮤니티(정보 공유) 운영 계획이 있으신지 궁금합니다.</li></ul></blockquote><p><strong>그 외</strong></p><blockquote><ul><li>splunk라이센스 비용 절감을 위한 Elastic Stack을 통한 로그모니터링 시스템구축 노하우,</li><li>처음 접해보는 것으로 MS의 Azure와 어떤 차이점이 있는지요?</li><li>데이터 분석 적용 방안</li><li>Elastic 구성후 회사에 어느정도 업무가 도움이 되었는지?, 기능 추가에 대한 유지? 보수 등이 편한지</li><li>엘라스틱 서치와 다른 제품과 비교시 장단점을 알고 싶습니다.</li></ul></blockquote><p>기대했던 것 보다 많은 분들께서 질문을 남겨주셔서 일단 지금 제가 답변 드릴 수 있는 말씀들은 드려보려고 합니다. <strong>그 외</strong> 항목에 모아놓은 질문들은 내용이 애매하고 아직 Elasticsearch가 무엇인지 정확히 모르시는 분들이 질문하신 것 같아서 밋업 시작때 제가 Overview를 한번 할 예정이니 그 때 들으시면 될것 같습니다.</p><p>먼저 보면, <strong>보안 구성</strong> 관련해서 질문들을 많이 해 주셨는데, Elasticsearch가 자체 보안 기능이 없기 때문에 Ngnix 같은걸로 웹 프록시를 구성하거나 X-Pack 의 Security (유료) 를 적용 하시면 됩니다. 마침 이광식님 께서 인증 적용에 대해 좋은 글을 얼마전에 남겨주셔서 공유합니다.<br><a href="http://www.popit.kr/x-pack%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EC%97%98%EB%9D%BC%EC%8A%A4%ED%8B%B1%EC%84%9C%EC%B9%98-%ED%82%A4%EB%B0%94%EB%82%98-%EC%9D%B8%EC%A6%9D-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/" target="_blank" rel="noopener">x-pack을 이용하여 엘라스틱서치와 키바나에 인증 적용하기</a></p><p>또 <strong>클러스터 설정</strong> 에 관련하여 노드, 메모리 용량은 어느정도로 하고, 샤드 크기는 어느정도가 좋은지에 대한 질문들, 퍼포먼스 튜닝에 대한 질문들은 항상 끊임 없이 나오는 부분입니다. 저도 항상 같은 대답을 드리는데, 참 성의없는 대답이라고 느끼실지 모르겠지만 이게 그때 그때 다르기 때문에 이런 질문에 대해서는 뭐라 정답을 드릴 수가 없습니다. 이 사이트에서 이렇게 적용 했다는 사례를 가지고 우리 사이트에 적용했을 때 그게 동일한 성능이 나온다는 보장은 전혀 없기 때문에 항상 샘플 테스트로 산정할 수 밖에 없는 것이 현실입니다.<br>다만 시스템 구성을 처음 시작하기 위해 elastic 블로그에 바이블처럼 보셔야 할 글이 몇가지 있어 공유 드립니다. 한글로도 번역 되어 있습니다.</p><ul><li><a href="https://www.elastic.co/kr/blog/performance-indexing-2-0" target="_blank" rel="noopener">Elasticsearch 2.0 인덱싱 성능 고려사항</a></li><li><a href="https://www.elastic.co/kr/blog/performance-considerations-elasticsearch-indexing" target="_blank" rel="noopener">Elasticsearch 인덱싱에 대한 성능 고려 사항</a></li><li><a href="https://www.elastic.co/blog/a-heap-of-trouble" target="_blank" rel="noopener">A Heap of Trouble</a> (영어)</li></ul><p>그리고 앞서 말씀드린 보안에 대해서도 얼마전 있었던 랜섬웨어 공격 관련해서 중요하게 읽을 포스트 몇개 소개 해 드립니다.</p><ul><li><a href="https://www.elastic.co/kr/blog/protecting-against-attacks-that-hold-your-data-for-ransom" target="_blank" rel="noopener">금품을 노린 데이터 인질(Ransom) 공격 차단</a></li><li><a href="https://www.elastic.co/blog/found-elasticsearch-security" target="_blank" rel="noopener">Securing Your Elasticsearch Cluster</a> (영어)</li></ul><p>시스템 운영에 대한 부분은 커뮤니티에도 올려드렸지만 보통은 몸값 비싼 전문가 분들이랑 같이 실무에서 오랜 시간 고민 해 가며 풀어야 하는 문제들입니다. 많은 기업들이 그 때문에 저희에게 비싼 비용을 지불하며 자문을 받고 있고, 저희 같은 오픈소스 기업들이 먹고 살 수 있는 길이기도 합니다.</p><p><strong>Elastic Stack 사용 사례</strong> 에 대해서도 질문 주셨는데, Elastic 홈페이지에 가시면 어마무시하게 많습니다. - <a href="https://www.elastic.co/use-cases" target="_blank" rel="noopener">https://www.elastic.co/use-cases</a></p><p><strong>머신러닝</strong> 에 대한 질문들도 주셨는데, 모르시는 분들을 위해 잠시 설명드리자면, 저희 Elastic 에서 작년 9월에 Prelert 라는 머신러닝 기업을 인수했습니다. 지금 Prelert 모듈을 X-Pack 에 내장하는 작업을 하고 있는데 3월 샌프란에서 열리는 Elastic{on}의 큰 주제 중 하나로 발표가 될 예정입니다. 머신러닝 예제는 Prelert 홈페이지에 가 보시면 각 사례별로 필터링 해서 볼 수 있는 형식으로 자세히 나와 있습니다. 친절하게 PDF 보고서로 다운로드도 가능합니다.<br><a href="http://info.prelert.com/behavioral-analytics-for-security-use-cases" target="_blank" rel="noopener">http://info.prelert.com/behavioral-analytics-for-security-use-cases</a></p><p><strong>커뮤니티 운영, 한글 매뉴얼</strong> 관련해서 마찬가지로 페이스북 그룹 외에 다른 까페나 사이트 관리를 할 계획이 있는지 물으셨는데, 있습니다. 다만 이건 저 혼자 할 수 있는게 아니라서 도움이 필요합니다. 다음주 밋업 이후로 함께 운영에 참여하고자 하는 분들을 다시 또 모집 할 계획입니다. 그리고 페이스북에서 다시 찾아보기가 어려운 점 때문에 <a href="https://discuss.elastic.co/c/in-your-native-tongue/korean" target="_blank" rel="noopener">https://discuss.elastic.co/c/in-your-native-tongue/korean</a> 한글 페이지를 소개 해 드렸는데, 그 때문인지 최근에 글들이 다시 좀 올라오기 시작했습니다. 가능하면 오래 보관했으면 하는 질문들은 여기에 올리고 링크를 페이스북에 공유하는 식으로 하면 좋을 것 같습니다. 한글 매뉴얼도 저 혼자 할 수 있는 작업이 아니라서 이 부분도 같이 참여 해 주실 분이 계시면 좋겠습니다. 자세한건 밋업 때 다시 얘기 하겠습니다.</p><p><strong>세미나 및 행사</strong> 관련해서는 한국에서도 Elastic{on} 행사가 열렸으면 좋겠다라고 하셨는데, 작년에 했었습니다. <a href="http://kimjmin.net/2016/10/elastic-seoul-seminar/">행사 리뷰 포스트입니다.</a> 다만 이게 세일즈 그룹에서 주관한 행사라 고객(가능성이 있는 기업 위주)로 진행 되어 커뮤니티에 오픈하지 못한 점 사과드립니다. 올해 또 Elastic사 차원에서 한국 행사가 계획 되어 있으니 기대 해 주셔도 좋을 것 같습니다.</p><p>여하튼, 부족하지만 좋은 커뮤니티가 될 수 있도록 노력하겠습니다. 응원 해 주시고 도와주셔서 감사드리고요, 앞으로도 잘 부탁드리겠습니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2017년 2월 22일 Elasticsearch 한국 커뮤니티 밋업을 진행합니다. 시간, 장소는 &lt;a href=&quot;http://onoffmix.com/event/90317&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;여기&lt;/a&gt; 에서 
      
    
    </summary>
    
      <category term="ICT" scheme="http://kimjmin.net/categories/ICT/"/>
    
    
      <category term="Hackathon" scheme="http://kimjmin.net/tags/Hackathon/"/>
    
      <category term="Meetup" scheme="http://kimjmin.net/tags/Meetup/"/>
    
  </entry>
  
  <entry>
    <title>Elastic{on}17 미리보기</title>
    <link href="http://kimjmin.net/2017/02/elasticon-2017-agenda/"/>
    <id>http://kimjmin.net/2017/02/elasticon-2017-agenda/</id>
    <published>2017-02-09T07:02:32.000Z</published>
    <updated>2017-11-24T22:42:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Elastic-on-17이-한달-앞으로-다가왔습니다"><a href="#Elastic-on-17이-한달-앞으로-다가왔습니다" class="headerlink" title="Elastic{on}17이 한달 앞으로 다가왔습니다."></a>Elastic{on}17이 한달 앞으로 다가왔습니다.</h1><p>올해로 세번째를 맞는 Elastic 의 글로벌 이벤트인 Elastic{on}17이 3월 7~9일 샌프란시스코에서 열립니다.</p><p><img src="elsaticon.png" alt=""></p><p>작년과 동일하게 <a href="https://www.google.co.kr/maps/place/Pier+48,+San+Francisco,+CA+94158+%EB%AF%B8%EA%B5%AD/@37.7756433,-122.3889372,17z/data=!3m1!4b1!4m5!3m4!1s0x808f7fdbafe3848f:0xaa0c4fa02144459!8m2!3d37.7756224!4d-122.3865937?hl=ko" target="_blank" rel="noopener">Pier48</a> 에서 열리고요, 행사 페이지와 등록은 : <a href="https://www.elastic.co/elasticon/conf/2017/sf" target="_blank" rel="noopener">https://www.elastic.co/elasticon/conf/2017/sf</a> 여기서 하시면 됩니다.</p><p>티켓 가격은 $1,495 이고요, 작년 오픈 직후에는 EarlyBird 할인, 그 다음은 New Year 할인, 지금은 Valentine 할인($1,395) 중입니다. 아마 현장 등록을 하는게 아니면 제값 내고 가는 경우는 없지 않을까 생각됩니다. 지금이라도 등록하실 분은 제게 따로 페이스북 쪽지나 트윗 등을 주시면 <strong>추가 할인 코드</strong> 를 드리겠습니다.</p><p><a href="https://www.elastic.co/elasticon/conf/2017/sf/agenda" target="_blank" rel="noopener">아젠다 페이지</a>에 가 보시면 전체 시간표가 있고, 각각 세션 별로 설명과 URL이 구분되어 있어 공유하기 편하게 되어있네요.</p><p><img src="agenda.png" alt=""></p><p>월요일은 교육이 있고 본 행사는 화요일 오후 키노트를 시작으로 본격적으로 오픈됩니다. 아마 저는 스피커가 아니어서 Demo 부스 아니면 AMA(Ask Me Anything) 부스에 배정될거라 예상되는데, 직원들 시간표도 나와 봐야 알 것 같습니다. 키노트에 발표될 키 테마가 뭘지 직원들에게도 공지는 안 되었지만 대충 뭐가 될지 예상은 됩니다. 머신러닝이랑, Elastic Cloud랑, 또 (읍…읍…)</p><p>여하튼, 이번 행사에서 관심있게 볼 만한 세션 몇가지를 블로그를 빌어 소개하려고 합니다. 세션들은 크게는 저희 내부 직원들이 소개하는 Elastic Stack의 기능들에 대한 내용들과, 외부 인사들이 소개하는 사용 사례들로 구분되어 있습니다. 외부 사례들은 <code>Application Search</code>, <code>Business Analytics</code>, <code>Log Analytics</code>, <code>Metrics</code>, <code>Security</code> 카테고리로 나뉘어 있고, 또 다시 산업 영역 별로 <code>교육</code>,<code>금융</code>,<code>요식업</code>,<code>건강</code>,<code>SW &amp; Tech</code>,<code>유통</code>… 등으로 나뉘어 있습니다.</p><p>다음은 저희 회사에서 내부적으로 공유된 추천 세션들입니다.</p><h4 id="Barclays-The-Engine-for-Key-Security-Platforms-at-Barclays"><a href="#Barclays-The-Engine-for-Key-Security-Platforms-at-Barclays" class="headerlink" title="Barclays - The Engine for Key Security Platforms at Barclays"></a>Barclays - <a href="https://www.elastic.co/elasticon/conf/2017/sf/agenda?sess=the-engine-for-key-security-platforms-at-barclays" target="_blank" rel="noopener">The Engine for Key Security Platforms at Barclays</a></h4><p>바클리스는 글로벌 금융 서비스 그룹인데 이번에 처음으로 자사의 보안 아키텍쳐에 적용된 대해 CIO가 직접 발표를 합니다. 금융 보안쪽에 관심 있는 분들이 들으시면 좋을것 같습니다.</p><h4 id="Walmart-Retail-Fraud-Detection-and-Real-Time-Inventory-Reporting"><a href="#Walmart-Retail-Fraud-Detection-and-Real-Time-Inventory-Reporting" class="headerlink" title="Walmart - Retail Fraud Detection and Real-Time Inventory Reporting "></a>Walmart - <a href="https://www.elastic.co/elasticon/conf/2017/sf/agenda?sess=retail-fraud-detection-and-realtime-inventory-reporting--walmart" target="_blank" rel="noopener">Retail Fraud Detection and Real-Time Inventory Reporting </a></h4><p>월마트에서 소비자가 불법적인 방법으로 구매를 시도했던 것들을 탐지하는 fraud detection과 모니터링을 주제로 발표합니다. Dev-Ops 분들이 관심가질 만한 주제인 것 같습니다.</p><h4 id="Tinder-Using-the-Elastic-Stack-to-Make-Connections-Around-the-World"><a href="#Tinder-Using-the-Elastic-Stack-to-Make-Connections-Around-the-World" class="headerlink" title="Tinder - Using the Elastic Stack to Make Connections Around the World"></a>Tinder - <a href="https://www.elastic.co/elasticon/conf/2017/sf/agenda?sess=tinder-using-the-elastic-stack-to-make-connections-around-the-world" target="_blank" rel="noopener">Using the Elastic Stack to Make Connections Around the World</a></h4><p>틴더는 온라인으로 데이트 상대를 매칭시켜 찾아주는 서비스입니다. 틴더의 백엔드의 추천 엔진에서 Elasticsearch가 어떻게 동작하고있는지 한번 들어보는것도 재미있을 것 같습니다.</p><h4 id="NVIDIA-NVIDIA’s-User-Experience-Streaming-Analytics"><a href="#NVIDIA-NVIDIA’s-User-Experience-Streaming-Analytics" class="headerlink" title="NVIDIA - NVIDIA’s User Experience Streaming Analytics"></a>NVIDIA - <a href="https://www.elastic.co/elasticon/conf/2017/sf/agenda?sess=data-intelligence-with-the-elastic-stack--scale-nvidias-user-experience-streaming-analytics" target="_blank" rel="noopener">NVIDIA’s User Experience Streaming Analytics</a></h4><p>엔비디아에서는 지포스의 프레임 스트리밍 데이터를 Elasticsearch 에 넣고 분석하고 있습니다. 고성능 게임 개발을 하는 분들이라면 꼭 들어보시길 추천합니다.</p><h4 id="Blizzard-Building-a-Near-Real-Time-Pipeline-for-All-Things-Blizzard"><a href="#Blizzard-Building-a-Near-Real-Time-Pipeline-for-All-Things-Blizzard" class="headerlink" title="Blizzard - Building a Near Real-Time Pipeline for All Things Blizzard"></a>Blizzard - <a href="https://www.elastic.co/elasticon/conf/2017/sf/agenda?sess=building-a-near-realtime-pipeline-for-all-things-blizzard" target="_blank" rel="noopener">Building a Near Real-Time Pipeline for All Things Blizzard</a></h4><p>블리자드입니다. 말이 필요 없습니다. Elasticsearch로 World of Warcraft, Overwatch 등을 모니터링 하는 사례를 발표합니다.</p><h4 id="Verizon-Wireless-The-Elasticsearch-Journey-at-Verizon"><a href="#Verizon-Wireless-The-Elasticsearch-Journey-at-Verizon" class="headerlink" title="Verizon Wireless - The Elasticsearch Journey at Verizon"></a>Verizon Wireless - <a href="https://www.elastic.co/elasticon/conf/2017/sf/agenda?sess=the-elasticsearch-journey-at-verizon" target="_blank" rel="noopener">The Elasticsearch Journey at Verizon</a></h4><p>미국 최대 통신사인 버라이즌에서 Elastic Stack을 사용하여 시스템 모니터링을 구축한 사례를 발표합니다. 과거에는 시스템 문제가 발생했을 경우 리커버리 시간이 30분 정도였는데 Elastic Stack을 사용하고 부터는 리커버리 시간이 2~3분으로 줄었다고 합니다. 참고로 시스템이 다운되면 버라이즌이 입는 손실은 1분에 64,000 달러 정도라고 합니다.</p><h4 id="IBM-Localizing-Kibana-for-the-Global-Language-Landscape"><a href="#IBM-Localizing-Kibana-for-the-Global-Language-Landscape" class="headerlink" title="IBM - Localizing Kibana for the Global Language Landscape"></a>IBM - <a href="https://www.elastic.co/elasticon/conf/2017/sf/agenda?sess=localizing-kibana-for-the-global-language-landscape" target="_blank" rel="noopener">Localizing Kibana for the Global Language Landscape</a></h4><p>IBM은 약간 의외의 주제로 발표를 하는데, 자신의 고객들에게 Kibana를 이용해 서비스를 하고 있습니다. 이것들을 어떻게 로컬라이징 시켰는지에 대해 이야기를 합니다.</p><h4 id="Terradue-Advancing-Earth-Science-with-Elasticsearch-at-Terradue"><a href="#Terradue-Advancing-Earth-Science-with-Elasticsearch-at-Terradue" class="headerlink" title="Terradue - Advancing Earth Science with Elasticsearch at Terradue"></a>Terradue - <a href="https://www.elastic.co/elasticon/conf/2017/sf/agenda?sess=advancing-earth-science-with-elasticsearch-at-terradue" target="_blank" rel="noopener">Advancing Earth Science with Elasticsearch at Terradue</a></h4><p>테라두드는 나사와 비슷하게 유럽쪽에서 인공위성, 우주탐사 사업을 지원하는 회사입니다. 인공위성에서 수집한 데이터를 가지고 지진, 홍수, 화산활동 등을 분석하는 일을 합니다. Elasticsearch가 자연과학 쪽에 어떻게 쓰이는지 궁금하신 분들은 들어보시면 좋을것 같습니다.</p><h4 id="Uber-Powering-Uber-Marketplace’s-Real-Time-Data-Needs-with-Elasticsearch"><a href="#Uber-Powering-Uber-Marketplace’s-Real-Time-Data-Needs-with-Elasticsearch" class="headerlink" title="Uber - Powering Uber Marketplace’s Real-Time Data Needs with Elasticsearch"></a>Uber - <a href="https://www.elastic.co/elasticon/conf/2017/sf/agenda?sess=powering-uber-marketplaces-realtime-data-needs-with-elasticsearch" target="_blank" rel="noopener">Powering Uber Marketplace’s Real-Time Data Needs with Elasticsearch</a></h4><p>개인적으로 정말 존경하는 개발자이고, 과거 넷플릭스에서 <a href="https://github.com/Netflix/suro" target="_blank" rel="noopener">suro</a>를 만드셨던 우버의 <a href="https://www.facebook.com/jaehb" target="_blank" rel="noopener">배재현</a>님께서 우버가 Elasticsearch를 가지고 어떻게 서비스에 적용하고 있는지 직접 발표를 하십니다.</p><p>이밖에도 많은 주제들로 재미있는 내용들이 준비되어 있어서 개인적으로 큰 기대가 됩니다. 참석 못 하시는 분들도 시간이 지나면 홈페이지에 영상과 발표 자료들은 공유 될 예정이니 나중에라도 관심 갖고 봐 주시면 좋을것 같습니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Elastic-on-17이-한달-앞으로-다가왔습니다&quot;&gt;&lt;a href=&quot;#Elastic-on-17이-한달-앞으로-다가왔습니다&quot; class=&quot;headerlink&quot; title=&quot;Elastic{on}17이 한달 앞으로 다가왔습니다.&quot;&gt;&lt;/a&gt;E
      
    
    </summary>
    
      <category term="ICT" scheme="http://kimjmin.net/categories/ICT/"/>
    
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/tags/Elasticsearch/"/>
    
      <category term="Elastic" scheme="http://kimjmin.net/tags/Elastic/"/>
    
      <category term="실리콘밸리" scheme="http://kimjmin.net/tags/%EC%8B%A4%EB%A6%AC%EC%BD%98%EB%B0%B8%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>소프트웨어 중심대학 오픈소스 해커톤</title>
    <link href="http://kimjmin.net/2017/02/2017-02-oss-univ-hackathon/"/>
    <id>http://kimjmin.net/2017/02/2017-02-oss-univ-hackathon/</id>
    <published>2017-02-03T04:50:37.000Z</published>
    <updated>2017-11-24T22:42:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>2017년 2월 2일 강촌 서울시립대학교 연수원에서 진행된 SW 중심대학 오픈소스 해커톤에 스폰서 겸 멘토로 참석했습니다.<br>행사 페이지 : <a href="https://sigoss.github.io/event170202.html" target="_blank" rel="noopener">https://sigoss.github.io/event170202.html</a></p><p>예전부터 해커톤 행사 후원과 멘토링 해보고 싶었는데 할 수 있게 되어 너무 즐거웠습니다. 작년에 미리 예정된 행사가 아니었기 때문에 큰 예산을 후원하지는 못하고 첫째 날 저녁 참석자들에게 치킨을 한번 사는것으로 하고 선물을 싸들고 공기 좋은 강촌으로 떠났습니다.</p><p><img src="IMG_0993.jpg" alt=""> <img src="IMG_1001.jpg" alt=""> </p><p>오랬만에 젊은 친구들과 함께 있어서 그런지 너무 좋았습니다.</p><p><img src="IMG_1010.JPG" alt=""></p><p>배너 아래 후원사 목록에 작게 저희 회사가 있습니다. 학생들에게 나눠 줄 물품들 잔뜩 챙겨왔고요.</p><p><img src="IMG_1007.jpg" alt=""> <img src="IMG_1016.jpg" alt=""></p><p>시간을 주셔서 잠깐 저희 회사와 제 소개를 드릴 수 있었고요, 나중에 Elasticsearch를 활용하겠다는 팀도 나왔습니다. 그 팀에게는 제가 특별 선물을 드렸습니다.</p><p><img src="jongmin_speech.jpeg" alt=""> <img src="IMG_1029.jpg" alt=""></p><p>그리고 저녁에 저희 회사돈으로 밤에 치킨을 한번 쐈습니다.</p><p><img src="IMG_1027.jpg" alt=""></p><p>한 학교가 아니라 11개의 서로 다른 학교에서 대표로 온 개발자들이 참여하는 행사라 확실히 제가 가 보았던 여느 다른 해커톤 보다 개발 속도도 빠르고 아이디어를 공유하거나 질문 하는 수준들도 상당히 높았던 것을 느낄 수 있었습니다. 아이디어 피치 시간에는 드론을 가져왔으니 같이 드론을 가지고 IoT를 해 보자고 하는 학생도 있었고, 실제로 딥러닝을 가지고 프로젝트를 진행하는 친구들도 있는 등, 요즘 젊은 개발자들의 높은 수준을 느낄 수 있었습니다.</p><p>그리고 식사시간이나 중간중간 교수님, 다른 멘토분 들이랑 이야기 해 보면 교육현장에 계신 분들이다 보니 산업현장에 계신 분들과는 또 다른 인싸이트들을 얻고 저도 또 제가 알고 있는 것들을 공유할 수 있는 알찬 시간 이었던 것 같습니다.</p><p>여담으로 Elasticsearch 사용해서 프로젝트 한 친구들과 공공데이터 활용 부분에 여러가지 아쉬운 부분을 이야기 했는데 이건 나중에 다른 포스트로 다시 정리하겠습니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2017년 2월 2일 강촌 서울시립대학교 연수원에서 진행된 SW 중심대학 오픈소스 해커톤에 스폰서 겸 멘토로 참석했습니다.&lt;br&gt;행사 페이지 : &lt;a href=&quot;https://sigoss.github.io/event170202.html&quot; targ
      
    
    </summary>
    
      <category term="ICT" scheme="http://kimjmin.net/categories/ICT/"/>
    
    
      <category term="Elasticsearch" scheme="http://kimjmin.net/tags/Elasticsearch/"/>
    
      <category term="Hackathon" scheme="http://kimjmin.net/tags/Hackathon/"/>
    
  </entry>
  
  <entry>
    <title>2017 구글 가계부</title>
    <link href="http://kimjmin.net/2016/12/dmitri-account-book-2017/"/>
    <id>http://kimjmin.net/2016/12/dmitri-account-book-2017/</id>
    <published>2016-12-28T22:47:00.000Z</published>
    <updated>2017-11-24T22:42:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>한 6년 전 부터 구글 드라이브의 스프레드시트로 가계부를 만들어 쓰고 있습니다. <strong>드미트리 가계부</strong> 라는 이름으로 템플릿을 오픈 해 놓았는데 다른 분들도 많이 받아서 쓰셨던 것 같습니다. <del>게을러서</del> 바쁜 일정 때문에 2012년인가를 마지막으로 업데이트를 안 하고 같은 템플릿을 계속 쓰고 있었는데, 아이들도 생기고 하다 보니 소비 패턴에도 많은 변화가 생기기도 하고 해서 간만에 템플릿 업데이트를 했습니다.</p><p><strong>새로운 가계부 템플릿 주소는 아래와 같습니다.<br><a href="https://docs.google.com/spreadsheets/d/1y626Oq27d7TxB28KNRMmAxQs7AS56lHc-PJ1JsCrWyI" target="_blank" rel="noopener">https://docs.google.com/spreadsheets/d/1y626Oq27d7TxB28KNRMmAxQs7AS56lHc-PJ1JsCrWyI</a></strong></p><h3 id="가계부-템플릿-저장"><a href="#가계부-템플릿-저장" class="headerlink" title="가계부 템플릿 저장"></a>가계부 템플릿 저장</h3><p>사용하려면 당연히 구글 계정이 필요하고요, 공개 읽기 권한으로 되어 있으니 편집 하려면 자신의 계정으로 <strong>사본을 저장해서</strong> 사용하면 됩니다.</p><p><img src="copy_1.png" alt=""> <img src="copy_2.png" alt=""></p><p>가끔 템플릿 문서를 편집 권한 달라고 저한테 메일 보내는 분들 계신데 <span style="color:red"><strong><em>사본 저장해서 사용하세요!!</em></strong></span></p><h3 id="개요-탭"><a href="#개요-탭" class="headerlink" title="개요 탭"></a>개요 탭</h3><p>먼저 첫번째로 <code>개요</code> 탭이 있습니다. 개요 탭에서는 수입/지출 항목과 형태를 정의하고 전체 합계를 보는 화면입니다.</p><p><img src="summary_01.png" alt=""> </p><h5 id="항목값-B3-B22"><a href="#항목값-B3-B22" class="headerlink" title="항목값 - [B3:B22]"></a>항목값 - [B3:B22]</h5><p>먼저 B열의 <code>B3 ~ B22</code> 범위는 수입/지출 항목값을 관리하는 셀 들입니다. 우선은 제가 주로 사용하는 항목대로 했는데, 이 범위의 셀의 값들을 변경하시면 다른 <code>통계</code> 탭과 <code>1월 ~ 12월</code> 탭의 항목 선택 옵션값 들도 모두 자동으로 적용됩니다. <code>B13 ~ B19</code> 셀에는 색깔이 입혀져 있는데 1~12월 탭에서 항목 선택시 이 색들과 동일하게 적용되도록 조건부 서식이 적용되어 있으니 <span style="color:red"><strong><em>색깔은 변경하면 안됩니다.</em></strong></span> </p><p><code>B3 ~ B22</code> 셀에는 내가 사용할 항목들을 넣고 <code>C3 ~ C22</code> 셀에는 그 항목에 대한 설명들을 적으면 됩니다.</p><p><img src="summary_02.png" alt=""> </p><h5 id="월별-예산계획-수입-D3-D22-지출-E3-E22"><a href="#월별-예산계획-수입-D3-D22-지출-E3-E22" class="headerlink" title="월별 예산계획 - 수입 [D3:D22], 지출 [E3:E22]"></a>월별 예산계획 - 수입 [D3:D22], 지출 [E3:E22]</h5><p><code>D3 ~ E22</code> 셀에는 각 항목에 대한 월별 예산 계획값을 입력합니다. <span style="color:blue"><strong>D 열은 수입</strong></span>, <span style="color:red"><strong>E 열은 지출</strong></span> 입니다. 이번 가계부 작성하면서 가장 신경쓰고 싶었던 것이 미리 계획한 예산과 내가 쓴 경비들을 계속 비교할 수 있는 기능을 넣는 것이었습니다. 특히 <strong><code>3행의 고정비</code></strong> 값은 1월~12월 탭에 매월 고정비로 자동 반영이 되기 때문에 3행의 고정는 항목은 수정하지 말고 수입/지출 값만 수정해서 사용하도록 합니다.</p><p><img src="summary_03.png" alt=""> </p><p><code>23행</code>은 <strong>각 수입/지출 예산 계획값의 합계</strong> 가, <code>24행</code>은 <strong>전체 수입에서 지출을 뺀 잔액</strong> 이 표시됩니다. 템플릿의 경우 수입 350만원, 지출 338만원으로 매월 12만원의 잔액이 남는 것으로 되어 있습니다.</p><h5 id="년간-예산계획-수입-F3-F22-지출-G3-G22"><a href="#년간-예산계획-수입-F3-F22-지출-G3-G22" class="headerlink" title="년간 예산계획 - 수입 [F3:F22], 지출 [G3:G22]"></a>년간 예산계획 - 수입 [F3:F22], 지출 [G3:G22]</h5><p><code>F3 ~ G22</code> 셀에는 각 항목에 대한 년간 예산 계획값이 표시됩니다. 월별과 마찬가지로 <span style="color:blue"><strong>F 열은 수입</strong></span>, <span style="color:red"><strong>G 열은 지출</strong></span> 입니다. 기본적으로는 <code>[월별 수입/지출 값 x 12]</code>가 되어 있습니다. 하지만 몇가지 항목은 월 고정 지출 외에 년간 이벤트로 발생하는 수입/지출이 있어 약간의 수정이 되어 있습니다. </p><ul><li><code>F4</code> 셀 값은 <strong>350만 x 12 = 4200만원</strong> 이 기본 값인데, 별도 상여금 <strong>100만원</strong>이 있다고 가정하여 <strong>4,300만원</strong> 으로 되어 있습니다. 셀 서식은 <code>=(D4*12)+1000000</code> 입니다.</li><li><code>G6</code> 셀 값은 <strong>40만 x 12 = 480만원</strong> 이 기본 값인데, 자동차세 등 년 단위 세금 <strong>30만원</strong>이 있다고 가정하여 <strong>510만원</strong> 으로 입력되어 있습니다. 셀 서식은 <code>=(E6*12)+300000</code> 입니다.</li><li><code>G11</code> 셀 값은 <strong>10만 x 12 = 120만원</strong> 이 기본 값인데 휴가철 해외여행 경비 <strong>200만원</strong>을 잡아놓았다고 가정하여 <strong>320만원</strong> 으로 입력되어 있습니다. 셀 서식값은 <code>=(E11*12)+2000000</code> 입니다.</li></ul><p><img src="summary_04.png" alt=""> </p><p><code>F3 ~ G22</code> 셀 값들은 <code>D3 ~ E22</code> 셀들의 값 x 12 가 아닌 경우 약간 더 진한 노란색으로 표시되도록 조건부 서식이 적용되어 있습니다. 특별한 경우가 아니면 월별 예산 x 12 를 입력하고, 별도 특별 수입/지출이 있는 경우 셀 값을 수정하면 됩니다.</p><h5 id="년간-지출-현황-합계-H3-H22-계획대비-잔액-I3-I22-잔액-비율-J3-J22"><a href="#년간-지출-현황-합계-H3-H22-계획대비-잔액-I3-I22-잔액-비율-J3-J22" class="headerlink" title="년간 지출 현황 - 합계 [H3:H22], 계획대비 잔액 [I3:I22], 잔액 비율 [J3:J22]"></a>년간 지출 현황 - 합계 [H3:H22], 계획대비 잔액 [I3:I22], 잔액 비율 [J3:J22]</h5><p><code>H,I,J</code> 셀에는 년간 전체 지출 현황이 나타나 있습니다. 이 셀의 값들은 모두 자동 계산됨으로 <span style="color:red"><strong>수정하지 않도록 합니다</strong></span>. 참고로 월별 현황은 <code>통계</code> 탭에 있습니다. 현재 템플릿에는 1월달 가계부에 대한 값들만 입력이 되어 있어서 실제 <code>H3~H22</code> 열의 값들은 1월 통계의 값과 동일합니다.</p><p><img src="summary_05.png" alt=""> </p><p><code>23행</code>은 각 통계에 대한 합계가 나타나 있습니다. <code>H23</code> 셀은 <strong>지금까지의 전체 수입에서 지출은 뺀 값</strong> 인 <strong>808,112</strong> 원을 나타내고, <code>I23</code> 셀은 예산 대비 잔액인 (1년 전체 예산은 14 만원을 남기도록 되어 있습니다) <strong>808,112</strong> 에서 <strong>140,000</strong> 을 뺀 <strong>668,112</strong> 원을 나타내고 있습니다. <code>J23</code> 셀은 <strong>1년 전체 예산 4,300만원에서 현재까지 지출 한 금액 대비 잔액 비율</strong> 인 <strong>93.59%</strong> 를 나타내고 있습니다. 이는 1년치 예산 계획 중 현재 <strong>100 - 93.59</strong> 인 <code>6.41%</code> 만큼 사용했다는 뜻입니다.</p><h5 id="형태값-B27-B31"><a href="#형태값-B27-B31" class="headerlink" title="형태값 [B27:B31]"></a>형태값 [B27:B31]</h5><p>개요 탭의 더 아래쪽을 보면 <code>B27 ~ B31</code> 셀에 수입/지출 방법에 대한 형태값 들이 있습니다. 항목값과 마찬가지로 이 범위의 셀의 값들을 변경하시면 다른 <code>통계</code> 탭과 <code>1월 ~ 12월</code> 탭의 형태 선택 옵션값 들도 모두 자동으로 적용됩니다. 또한 이 역시도 조건부 서식이 적용되어 있으니 <span style="color:red"><strong><em>글씨 색은 변경하면 안됩니다.</em></strong></span> </p><p><img src="summary_06.png" alt=""> </p><p><code>D:27 ~ D31</code>, <code>E:27 ~ E31</code> 셀에는 형태에 대한 수입/지출 형태에 대한 합계가 있어 내가 지금까지 카드를 얼마나 많이 긁었나, 현금은 얼마를 썼나 볼 수 있습니다.</p><h3 id="통계-탭"><a href="#통계-탭" class="headerlink" title="통계 탭"></a>통계 탭</h3><p>두번째 통계 탭 입니다. 보게 되면 개요 탭에서 정의 한 항목과 형태 값 들이 반영되어 있습니다.<br><code>B열</code>의 데이터 값들과 <code>C열</code>,<code>D열</code>의 월별 예산계획 값은 <code>개요</code> 탭에서 입력한 값들이 자동 반영됩니다. <code>E열</code> 부터는 <code>1월 ~ 12월</code> 탭에서 입력한 실제 가계부 값이 반영된 통계값들이 나타나게 됩니다.</p><p><img src="stat_01.png" alt=""> </p><p><code>23행</code>은 개요 탭의 연간 합계와 마찬가지로 월별 항목별 통계가 반영되어 있습니다. 템플릿의 1월의 경우에는 <code>E23</code> 셀은 1월간 전체 수입에서 지출을 뺀 <strong>808,112</strong> 원이 표시되고 있고, <code>F23</code> 셀은 원래 예산은 월마다 12만원을 남기도록 짰기 때문에 예산대비 잔액인 808,112 에서 120,000 을 뺀 <strong>668,112</strong> 원이 표시됩니다. <code>G23</code> 셀은 전체 예산 수입 대비 잔액인 <strong>23.09%</strong> 가 표시되고 있습니다. 이 셀에서 계산하는 잔액은 예산대비 잔액이 아닌 실제 잔액이며 이 셀의 서식은 <code>=E$23/$C$23</code> 입니다.</p><p><code>26행</code> 부터는 항목별이 아닌 월별 형태별 통계가 반영되어 있습니다.</p><p><img src="stat_02.png" alt=""> </p><p>기본적으로 <code>통계</code> 탭은 모든 셀 값들이 자동 반영 되기 때문에 수정할 일은 없습니다.</p><blockquote><p>참고로 셀 색이 <code>개요 탭의 D,E열</code> 같이 <code>에메랄드 색</code>인 경우는 입력한 값이 전체 스프레드시트에 영향을 미치는 값이고, <code>통계 탭의 대부분 셀</code> 처럼 <code>엷은 노란색</code>인 경우는 값들이 자동으로 계산되는 셀 들입니다. 따라서 <span style="color:red"><strong>엷은 노란색 셀은 절대로 변경하면 안됩니다.</strong></span> </p></blockquote><h3 id="1월-12월-탭"><a href="#1월-12월-탭" class="headerlink" title="1월 ~ 12월 탭"></a>1월 ~ 12월 탭</h3><p>이제 실제로 가계부를 입력하는 1월 ~ 12월 탭에 대해 알아보겠습니다. 템플릿에는 1월 탭의 내용에 예시 값들을 미리 입력 해 두었습니다. 실제 사용 하실 때는 <code>A ~ F열의 5번째 행</code> 아래 값 부터 지우고 사용하시면 됩니다. 앞에서 언급했듯이 <code>3, 4행</code>의 <span style="color:red"><strong>엷은 노란색 셀들은 변경하면 안됩니다.</strong></span> </p><p><img src="month_01.png" alt=""></p><h5 id="수입-지출-항목-입력"><a href="#수입-지출-항목-입력" class="headerlink" title="수입/지출 항목 입력"></a>수입/지출 항목 입력</h5><p>기본적으로 <code>A열</code>에는 날짜를, <code>B열</code>에 내용을 입력하고 <code>C열</code>,<code>D열</code>의 항목, 형태는 드롭다운 메뉴로 선택하도록 합니다. <code>개요</code> 탭에서 입력한 항목, 형태의 데이터 값들이 드롭다운 목록 선택 옵션으로 나타납니다.</p><p><img src="month_02.png" alt=""> </p><p><code>E열</code>, <code>F열</code> 에는 각각 수입, 지출 값을 입력합니다. 각 열의 <code>2행</code>에 전체 수입, 지출에 대한 합계가 나타납니다. <code>H열</code> 에는 위에서부터 아래로 전체 수입/지출 에 대한 누계가 표시되며 지금 입력한 행 까지의 수입-소비 합을 볼 수 있습니다.</p><p><img src="month_03.png" alt=""></p><h5 id="예산계획-대비-잔액"><a href="#예산계획-대비-잔액" class="headerlink" title="예산계획 대비 잔액"></a>예산계획 대비 잔액</h5><p>사실 이번 2017년 가계부에서 가장 신경 쓴 부분이 <code>G열</code>의 예산계획 대비 잔액 기능입니다. <code>C열</code>의 항목을 선택하게 되면 G열에 해당 항목에 대한 잔액이 바로 표시되어 내가 이번 달에 해당 항목에 얼마나 더 소비가 가능한지 볼 수 있습니다.<br>예를 들어 아래와 같이 <strong>외식</strong> 항목을 선택하면 예산대비 잔액이 <strong>2만원</strong> 이 남았다고 <code>G열</code> 에 바로 표시를 해 줍니다. 이걸 보면서 아, 이번달은 이제 외식에 얼마를 더 쓸 수 있겠구나 하고 미리 짐작을 할 수 있습니다.</p><p><img src="month_04.png" alt=""></p><h5 id="고정-지출비와-전월-이월금"><a href="#고정-지출비와-전월-이월금" class="headerlink" title="고정 지출비와 전월 이월금"></a>고정 지출비와 전월 이월금</h5><p>각 월별 탭에 상단의 <code>3, 4행</code> 에는 각각 <code>전월 이월금</code>과 <code>고정 지출비</code> 항목이 미리 입력 되어 있습니다. 앞에서 언급 했듯이 <span style="color:red"><strong>엷은 노란색 셀임으로 절대로 변경하면 안됩니다.</strong></span> 고정 지출비는 <code>개요</code> <strong>탭에서 입력 해 놓은 고정 지출비</strong> 가 자동 입력되고, 전월 이월금은 <strong>이전 달 이월 누계 금액</strong> (예를 들어 2월 탭에서는 1월 전체 누계 금액) 이 반영됩니다.</p><p><img src="month_05.png" alt=""></p><p>그런데 통계 탭에서는 고정 지출비를 40만원으로 입력했는데, 위 화면에는 고정비 지출인 <code>F4</code> 셀의 값이 0 으로 되어 있습니다. 통계 값에서 제대로 반영하기 위해 고정 지출비의 값은 <code>A4</code><strong>셀에 있는 날짜값에 영향을 받도록</strong> 되어 있습니다. 실제로 오늘 날짜가 <code>A4</code> 셀의 날짜와 같거나 이후가 되어야 고정 지출비가 나타나게 됩니다. A4 셀의 값을 오늘(제가 지금 블로그 포스트를 작성중인 날짜) 로 바꿔보도록 하겠습니다.</p><p><img src="month_06.png" alt=""></p><p>위와 같이 <code>A4</code> 셀의 날짜를 2016년 12월로 바꾸니 <code>F4</code> 셀 값이 고정 지출비로 반영이 되었습니다. <code>1월 ~ 12월 탭</code>의 <code>A3</code>, <code>A4</code> 셀의 값은 <strong>각 월의 1일</strong> 로 입력이 되어 있습니다. 만약 고정 지출비용이 나가는 날짜가 따로 있다면 그 날짜로 변경 해 놓아도 됩니다. <code>F4</code> 셀 서식은 <code>=IF(TODAY()&gt;=$A$4,&#39;개요&#39;!E$3,0)</code> 입니다.</p><p><code>A3</code> 셀은 <code>H3</code>의 이월누계 값에 영향을 받습니다. 아래는 <code>2월</code> 탭의 내용입니다. <code>A3</code> 셀 값을 보면 <strong>2017년 2월 1일</strong> 로 되어 있습니다. <code>H3</code> 셀의 이월 누계 값은 <code>A3</code> <strong>셀의 날짜 값에서 월을 가져와 그 전월 탭의 이월 누계값</strong> 을 가져오도록 되어 있습니다.</p><p><img src="month_07.png" alt=""></p><p><code>3월</code> 탭의 경우 <code>A3</code> 셀 값이 <strong>2017년 3월 1일</strong> 로 되어 있고, <code>H3</code> 셀의 값은 <strong>2월 탭의 이월 누계값</strong> 을 가져오도록 되어 있습니다. 만약 3월 탭의 A3 셀 값을 2017년 2월 1일로 바꾸게 되면 <strong>2월 대신 1월 탭의 이월 누계값</strong> 을 가져오게 됩니다. <code>1월</code> 탭의 <code>H3</code> 셀 값은 0 이고, <code>2월 ~ 12월</code> 탭의 <code>H3</code> 셀 서식은 <code>=INDIRECT(CHAR(39)&amp;CONCAT(MONTH($A$3)-1,&quot;월&quot;)&amp;CHAR(39)&amp;&quot;!$I$2&quot;)</code> 입니다. (앞에 설명한 <code>A3</code>셀 날짜 값에서 월만 추출해서 1을 뺀 월 탭의 <code>I2</code> 셀 값을 가져오는 수식입니다. 좀 복잡하죠?)</p><h3 id="탭을-다른-기준으로-변경하기"><a href="#탭을-다른-기준으로-변경하기" class="headerlink" title="탭을 다른 기준으로 변경하기"></a>탭을 다른 기준으로 변경하기</h3><p>현재는 1월 ~ 12월의 월별 기준으로 되어 있는데, 만약에 나는 이 가계부를 월별이 아니라 주 단위, 아니면 분기별 같이 다른 기준으로 사용하고 싶다고 하는 경우가 있을 것입니다. 문제가 되는 것은 <code>통계</code> 탭인데 통계 탭에 있는 수많은 셀들의 수식은 <code>1행</code>의 타이틀 값에 영향을 받도록 되어 있습니다.</p><p><img src="month_to_stat_01.png" alt=""></p><p>위와 같이 <code>E,F,G</code> 열에 속한 셀들은 <code>E,F,G:1</code> 셀 값인 <strong>1월</strong> 이라는 값을 참조하여 실제 <code>1월</code> 탭의 값들을 가져오도록 수식화 되어 있습니다. 탭의 이름과 타이틀의 이름을 동일하게 맞춰주면 그 열에 속한 셀들은 타이틀 이름과 같은 셀의 값들을 바라보게 됩니다. 아래는 <code>1월</code>을 <code>1분기</code>로 탭 이름과 타이틀명을 바꾼 예 입니다.</p><p><img src="month_to_stat_02.png" alt=""></p><blockquote><p>참고로 셀들은 타이틀을 바꿨을 때 반영됩니다. 타이틀을 먼저 바꾸면 셀들이 그 즉시 잘못된 값들을 참조하게 되어 수많은 셀들에서 수식 오류가 납니다. <span style="color:red"><strong>항상 탭 이름을 먼저 바꾸고 타이틀명을 변경해야 합니다.</strong></span></p></blockquote><h3 id="정리"><a href="#정리" class="headerlink" title="정리"></a>정리</h3><p>기본적인 가계부 사용법 설명은 다 끝났습니다. 실제로 사용 하다 보면 수식 버그가 나올 수도 있을텐데 발견할 때 마다 고쳐놓도록 하겠습니다. 옛날 버전에는 통화 (KRW, USD) 를 변환하는 기능도 있었는데 이번 가계부에는 그 기능은 뺐습니다. 환율 변동도 있고, 실제로 별로 도움이 되지 않아서 입력할 때 마다 환율 계산 해서 넣는게 편하더군요.</p><p>원래는 이 가계부를 구글 드라이브 API를 사용하는 웹앱 이나 모바일 앱으로 만드는게 목표였는데, 올해도 이런 저런 일로 미루다 보니 하지 못했습니다. 내년에는 할 수 있도록 다시 노력 해 보겠습니다. 사용하면서 궁금한 점 있으면 아래 답글 달아 주시거나 메일, 페북 메신져 등으로 연락 주세요. 😘</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;한 6년 전 부터 구글 드라이브의 스프레드시트로 가계부를 만들어 쓰고 있습니다. &lt;strong&gt;드미트리 가계부&lt;/strong&gt; 라는 이름으로 템플릿을 오픈 해 놓았는데 다른 분들도 많이 받아서 쓰셨던 것 같습니다. &lt;del&gt;게을러서&lt;/del&gt; 바
      
    
    </summary>
    
      <category term="Life" scheme="http://kimjmin.net/categories/Life/"/>
    
    
      <category term="구글 가계부" scheme="http://kimjmin.net/tags/%EA%B5%AC%EA%B8%80-%EA%B0%80%EA%B3%84%EB%B6%80/"/>
    
      <category term="google 가계부" scheme="http://kimjmin.net/tags/google-%EA%B0%80%EA%B3%84%EB%B6%80/"/>
    
  </entry>
  
  <entry>
    <title>2016년을 마치며</title>
    <link href="http://kimjmin.net/2016/12/adios-2016/"/>
    <id>http://kimjmin.net/2016/12/adios-2016/</id>
    <published>2016-12-27T02:25:48.000Z</published>
    <updated>2017-11-24T22:42:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>2016년이 저물어 갑니다. 항상 이맘때 쯤이면 모두들 지나간 한 해를 정리하고 새로운 한 해를 맞이하는 계획을 세우곤 하는데, 저도 올 한해를 정리하는 마지막 포스팅을 하려고 합니다. IT 업계에 있으면서 자기계발, 커뮤니티 활동 등을 더 열심히 했었어야 했는데, 아이들이 어린 동안에는 항상 1순위는 <strong>가족과 함께</strong> 로 하기로 해서 올해 사진을 돌아보니 행사 사진 보다는 가족 사진이 많은것 같습니다.</p><h3 id="새-집-이사"><a href="#새-집-이사" class="headerlink" title="새 집 이사."></a>새 집 이사.</h3><p>정든 망원동을 떠나 2월 초, 강서구 등촌동으로 이사를 했습니다. 정든 동네를 떠나는 것이 아쉬웠지만 새 집으로 가는 기쁨도 있었고, 이케아를 8번 정도 다녀오면서 가구들 직접 조립하고 하는 재미도 있었습니다.</p><p><img src="IMG_5344.jpg" alt=""> <img src="IMG_5368.jpg" alt=""> <img src="IMG_5371.jpg" alt=""> <img src="IMG_5406.jpg" alt=""> </p><h3 id="샌프란시스코-Elastic-on-2016-참석"><a href="#샌프란시스코-Elastic-on-2016-참석" class="headerlink" title="샌프란시스코 Elastic{on} 2016 참석."></a>샌프란시스코 Elastic{on} 2016 참석.</h3><p>2월 말, 저희 회사의 년간 컨퍼런스이자 직원들의 All Hands 행사인 Elastic{on} 에 다녀왔습니다. 3일간은 컨퍼런스 참여 하면서 유저들, 그리고 평소 비디오로만 만나던 직원들과 만나 교류하고, 같이 영화 데드풀도 보고, 컨퍼런스 끝나고 나서는 Lake Taho 로 이동하여 또 워크샾 하고 같이 스노우 액티비티들도 했습니다.</p><p><img src="IMG_5452.jpg" alt=""> <img src="IMG_5455.jpg" alt=""> <img src="IMG_5501.jpg" alt=""> <img src="IMG_5523.jpg" alt=""> <img src="IMG_5536.jpg" alt=""> <img src="IMG_5559.jpg" alt=""> <img src="IMG_5569.jpg" alt=""> </p><p><img src="IMG_5626.jpg" alt=""> <img src="IMG_5650.jpg" alt=""> <img src="IMG_5668.jpg" alt=""> <img src="IMG_5671.jpg" alt=""> <img src="IMG_5676.jpg" alt=""> <img src="IMG_5716.jpg" alt=""> <img src="IMG_5730.jpg" alt=""> <img src="IMG_5736.jpg" alt=""> </p><p>샌프란시스코는 참 멋진 동네였습니다. 2017년도에도 같은 장소에서 컨퍼런스를 할 예정인데 큰 기대가 됩니다.</p><h3 id="래원이-외할아버지-회갑-제주도-여행"><a href="#래원이-외할아버지-회갑-제주도-여행" class="headerlink" title="래원이 외할아버지 회갑 제주도 여행"></a>래원이 외할아버지 회갑 제주도 여행</h3><p>3월에는 래원이 외할아버지 회갑을 기념해서 이모네랑 같이 제주도로 여행을 갔습니다. 잘 먹고 쉬다 왔는데, 보니까 사진은 많이 안 찍었네요.</p><p><img src="IMG_5765.jpg" alt=""> <img src="IMG_5769.jpg" alt=""> <img src="IMG_5773.jpg" alt=""> <img src="IMG_5775.jpg" alt=""></p><h3 id="밋업-및-각종-커뮤니티-행사"><a href="#밋업-및-각종-커뮤니티-행사" class="headerlink" title="밋업 및 각종 커뮤니티 행사."></a>밋업 및 각종 커뮤니티 행사.</h3><p>3월에 Naver D2 Startup 에서 밋업을 한번 했고요</p><p><img src="IMG_5849.jpg" alt=""> <img src="IMG_5851.jpg" alt=""> <img src="IMG_5855.jpg" alt=""> <img src="IMG_5857.jpg" alt=""> <img src="IMG_5860.jpg" alt=""></p><p>4월에는 마이크로소프트 커뮤니티 행사에 가서 올챙이 조현종님을 뵈었습니다.</p><p><img src="IMG_5876.jpg" alt=""></p><h3 id="할아버지네-주말농장"><a href="#할아버지네-주말농장" class="headerlink" title="할아버지네 주말농장"></a>할아버지네 주말농장</h3><p>벚꽃놀이를 못가서 아쉬웠었는데 4월에 할아버지와 큰할아버지가 하시는 고양시의 주말농장에 가서 봄 힐링을 하고 왔습니다.</p><p><img src="IMG_5886.jpg" alt=""> <img src="IMG_5889.jpg" alt=""> <img src="IMG_5892.jpg" alt=""> <img src="IMG_5898.jpg" alt=""> <img src="IMG_5908.jpg" alt=""> <img src="IMG_5913.jpg" alt=""> <img src="IMG_5916.jpg" alt=""> <img src="IMG_5919.jpg" alt=""></p><h3 id="더그-커팅-만남"><a href="#더그-커팅-만남" class="headerlink" title="더그 커팅 만남"></a>더그 커팅 만남</h3><p>4월 14일 한국 스파크 사용자 모임에 가서 하둡과 루씬의 아버지 더그 커팅을 만났습니다. 아파치 커미터이신 진성주님도 실제로 처음 만나뵜습니다.</p><p><img src="IMG_5920.jpg" alt=""> <img src="IMG_5923.jpg" alt=""> <img src="IMG_5926.jpg" alt=""></p><p>더그 커팅에게 질문하는 어떤 청중 (출처 : <a href="http://it.chosun.com/news/article.html?no=2818246" target="_blank" rel="noopener">http://it.chosun.com/news/article.html?no=2818246</a>)</p><p><img src="art_1460680670.jpg" alt=""></p><h3 id="싱가폴-출장"><a href="#싱가폴-출장" class="headerlink" title="싱가폴 출장"></a>싱가폴 출장</h3><p>4월 26일에는 싱가폴 교육 지원차 처음으로 싱가폴에 출장 다녀왔습니다. 싱가폴이 이렇게 멋진 곳인줄 첨 알았습니다. 특히 야경이 최고였습니다.</p><p><img src="IMG_5992.jpg" alt=""> <img src="IMG_6012.jpg" alt=""> <img src="IMG_6018.jpg" alt=""> <img src="IMG_6019.jpg" alt=""> <img src="IMG_6025.jpg" alt=""> <img src="IMG_6036.jpg" alt=""> </p><p><img src="IMG_6039.jpg" alt=""> <img src="IMG_6049.jpg" alt=""> <img src="IMG_6050.jpg" alt="">  <img src="IMG_6058.jpg" alt=""></p><h3 id="봄-나들이"><a href="#봄-나들이" class="headerlink" title="봄 나들이"></a>봄 나들이</h3><p>4월 마지막 날에는 아이들과 동물원 다녀오고요. 4월에 정말 많은곳을 다녔군요.</p><p><img src="IMG_6070.jpg" alt=""> <img src="IMG_6073.jpg" alt=""> <img src="IMG_6074.jpg" alt=""> <img src="IMG_6076.jpg" alt=""> <img src="IMG_6079.jpg" alt=""></p><p>5월 어린이날에는 가까운 하늘공원에서 놀았습니다.</p><p><img src="IMG_6094.jpg" alt=""> <img src="IMG_6096.jpg" alt=""> <img src="IMG_6099.jpg" alt=""> <img src="IMG_6101.jpg" alt=""> <img src="IMG_6105.jpg" alt=""> <img src="IMG_6106.jpg" alt=""> <img src="IMG_6110.jpg" alt=""> </p><h3 id="AWS-Summit-Seoul"><a href="#AWS-Summit-Seoul" class="headerlink" title="AWS Summit Seoul"></a>AWS Summit Seoul</h3><p>5월에 아마존 AWS Summit 행사에 다녀왔습니다. 자세한 내용은 <a href="http://kimjmin.net/2016/05/aws-summit-seoul-2016/">AWS Summit Seoul 2016 부스 운영기</a> 를 참고하세요.</p><p><img src="IMG_6177.jpg" alt=""></p><h3 id="베를린-여행"><a href="#베를린-여행" class="headerlink" title="베를린 여행"></a>베를린 여행</h3><p>그리고 6월은 베를린 여행을 다녀왔습니다. 마침 출장이 있는데 제 생일이기도 하고 겸사 검사 해서 가족들 데리고 다녀왔습니다. 아이들과 온가족이 함께 간 장거리 여행이라 힘들기도 했지만 정말 잊지 못할 시간이었습니다. 자세한 내용은 <a href="http://kimjmin.net/2016/06/time-in-berlin/">베를린 여행기</a> 를 참고하시고요, 사진이 정말 많습니다.</p><p><img src="IMG_6731.jpg" alt=""></p><h3 id="래은이-돌사진"><a href="#래은이-돌사진" class="headerlink" title="래은이 돌사진"></a>래은이 돌사진</h3><p>7월 래은이 생일에 돌사진을 찍었는데, 상당히 의미 있게 찍었습니다. 해외 직구로 스타워즈 옷 사다가 가족 옷으로 맞춰입고 갔더니 사진작가님이 적잖이 당황하셨습니다.;;</p><p><img src="raen_5.jpg" alt=""> <img src="raen_9.jpg" alt=""> </p><p><img src="raen_11.jpg" alt=""> <img src="raen_14.jpg" alt=""> <img src="raen_16.jpg" alt=""> <img src="raen_17.jpg" alt=""> <img src="raen_24.jpg" alt=""> <img src="raen_26.jpg" alt=""> <img src="raen_35.jpg" alt=""> <img src="raen_41.jpg" alt=""> <img src="raen_55.jpg" alt=""> </p><p><img src="raen_83.jpg" alt=""> <img src="raen_92.jpg" alt=""> <img src="raen_127.jpg" alt=""> <img src="raen_132.jpg" alt=""> <img src="raen_145.jpg" alt=""> <img src="raen_152.jpg" alt=""> <img src="raen_165.jpg" alt=""> <img src="raen_168.jpg" alt=""></p><p>그리고 래은이는 가족끼리 한 작은 돌잔치 때 마이크를 잡았습니다.</p><p><img src="IMG_7062.jpg" alt=""> <img src="IMG_7059.jpg" alt=""> <img src="IMG_7065.jpg" alt=""></p><h3 id="계속되는-컨퍼런스-밋업"><a href="#계속되는-컨퍼런스-밋업" class="headerlink" title="계속되는 컨퍼런스, 밋업"></a>계속되는 컨퍼런스, 밋업</h3><p>7월에 이상한모임 행사인 모두의 관리 모임에 다녀왔고요,</p><p><img src="IMG_6924.jpg" alt=""> <img src="IMG_6933.jpg" alt=""></p><p>이런 저런 연구기관, 기업 등에 초청 받아서 Elastic Stack 소개하러 다녔습니다.</p><p><img src="IMG_6974.jpg" alt=""> <img src="IMG_6988.jpg" alt=""></p><h3 id="래원이-입원"><a href="#래원이-입원" class="headerlink" title="래원이 입원"></a>래원이 입원</h3><p>올해는 래원이가 아파서 입원을 많이 했습니다. 장 중첩으로 한번, 독감으로 한번…</p><p><img src="IMG_7021.jpg" alt=""> <img src="IMG_7023.jpg" alt=""> <img src="IMG_7026.jpg" alt=""> <img src="IMG_7039.jpg" alt=""> <img src="IMG_7047.jpg" alt=""> <img src="IMG_7048.jpg" alt=""> </p><h3 id="꿈이룸-학교-방문"><a href="#꿈이룸-학교-방문" class="headerlink" title="꿈이룸 학교 방문"></a>꿈이룸 학교 방문</h3><p>이브레인의 노상범 대표님께서 초청 해 주셔서 꿈이룸 학교도 구경하고, 후원도 하고 왔습니다.</p><p><img src="IMG_7085.jpg" alt=""> <img src="IMG_7087.jpg" alt=""> <img src="IMG_7088.jpg" alt=""> <img src="IMG_7096.jpg" alt=""> <img src="IMG_7104.jpg" alt=""> </p><h3 id="Easticsearch-Core-Training"><a href="#Easticsearch-Core-Training" class="headerlink" title="Easticsearch Core Training"></a>Easticsearch Core Training</h3><p>8월 2~4일에는 서울에서 Easticsearch Core Training 이 열렸는데, 본사에서 온 Pablo 와 함께 교육을 진행하고, 밋업도 했습니다.</p><p><img src="IMG_7117.jpg" alt=""> <img src="IMG_7124.jpg" alt=""> <img src="IMG_7131.jpg" alt=""> <img src="IMG_7139.jpg" alt=""> </p><h3 id="PyCon-APAC-2016"><a href="#PyCon-APAC-2016" class="headerlink" title="PyCon APAC 2016"></a>PyCon APAC 2016</h3><p>파이콘에 참석해서 부스 운영하고 왔습니다. 실시간 트위터 해쉬태그 수집 데모를 만들어서 보여줬더니 반응이 좋았습니다. 자세한 내용은 <a href="http://kimjmin.net/2016/08/pyconapac-seoul-2016/">PyConAPAC 2016 부스 운영기</a> 참고하세요.</p><p><img src="IMG_7234.jpg" alt=""></p><h3 id="여름-휴가"><a href="#여름-휴가" class="headerlink" title="여름 휴가"></a>여름 휴가</h3><p>8월 말에 가까운 가평으로 늦은 휴가를 다녀왔습니다.</p><p><img src="IMG_7286.jpg" alt=""><br><img src="IMG_7293.jpg" alt=""><br><img src="IMG_7297.jpg" alt=""><br><img src="IMG_7303.jpg" alt=""><br><img src="IMG_7309.jpg" alt=""> </p><h3 id="프라하-출장"><a href="#프라하-출장" class="headerlink" title="프라하 출장"></a>프라하 출장</h3><p>9월 말에는 프라하 출장을 다녀왔습니다. 자세한 내용은 <a href="http://kimjmin.net/2016/09/eng-all-hands-prague/">Elastic 엔지니어링 팀 프라하 모임</a> 참고하세요.</p><p><img src="IMG_7591.jpg" alt=""></p><h3 id="10월-아쿠아-플래닛"><a href="#10월-아쿠아-플래닛" class="headerlink" title="10월 아쿠아 플래닛"></a>10월 아쿠아 플래닛</h3><p>10월에는 아이들과 일산 아쿠아 플래닛 수족관에 다녀왔는데, 기분 좋게 갔다가 래은이가 눈을 다쳐 돌아오는 길에 또 응급실에 가야 했습니다. ㅠ_ㅠ. 래원이 래은이 모두 물고기를 참 좋아합니다.</p><p><img src="IMG_7744.jpg" alt=""> <img src="IMG_7751.jpg" alt=""> <img src="IMG_7755.jpg" alt=""> <img src="IMG_7764.jpg" alt=""> <img src="IMG_7769.jpg" alt=""> </p><h3 id="포천-큰할머니집-삼송-작은집"><a href="#포천-큰할머니집-삼송-작은집" class="headerlink" title="포천 큰할머니집, 삼송 작은집."></a>포천 큰할머니집, 삼송 작은집.</h3><p>좋은 가을날 래원이 큰할머니 칠순잔치로 포천에 가서 오랬만에 먼 친척들도 만나고, 삼촌 숙모 소원이네 새 집들이도 다녀왔습니다.</p><p><img src="IMG_7803.jpg" alt=""> <img src="IMG_7811.jpg" alt=""> <img src="IMG_7813.jpg" alt=""> <img src="IMG_7815.jpg" alt=""> <img src="IMG_7821.jpg" alt=""> <img src="IMG_7826.jpg" alt=""> </p><p><img src="IMG_7831.jpg" alt=""> <img src="IMG_7832.jpg" alt=""> <img src="IMG_7804.jpg" alt=""> <img src="IMG_7805.jpg" alt=""> <img src="IMG_7807.jpg" alt=""> <img src="IMG_7819.jpg" alt=""> <img src="IMG_7824.jpg" alt=""> <img src="IMG_7827.jpg" alt=""> </p><h3 id="컨퍼런스"><a href="#컨퍼런스" class="headerlink" title="컨퍼런스"></a>컨퍼런스</h3><p>그 외에도 마이크로소프트 파트너 데이즈랑, SK Tech Planet 도 다녀왔는데 찍은 사진이 거의 없네요. 10월 26일 한국에서 드디어 첫 Elastic 행사를 열었습니다. 이것도 사진이 많아 자세한 내용은 <a href="http://kimjmin.net/2016/10/elastic-seoul-seminar/">엘라스티콘 세미나 서울 행사</a> 을 참고하세요.</p><h3 id="도쿄-출장"><a href="#도쿄-출장" class="headerlink" title="도쿄 출장"></a>도쿄 출장</h3><p>12월 15일 1년만에 도쿄 엘라스티콘 참석하러 출장도 다녀왔습니다. 일본은 정말 맛있는게 많아요.</p><p><img src="IMG_0591.jpg" alt=""> <img src="IMG_0601.jpg" alt=""> <img src="IMG_0569.jpg" alt=""> <img src="IMG_0584.jpg" alt=""> <img src="IMG_0592.jpg" alt=""></p><p><img src="IMG_0595.jpg" alt=""> <img src="IMG_0599.jpg" alt=""> <img src="IMG_0604.jpg" alt=""> <img src="IMG_0568.jpg" alt=""> <img src="IMG_0581.jpg" alt=""> </p><h3 id="연말"><a href="#연말" class="headerlink" title="연말"></a>연말</h3><p>올해 처음으로 크리스마스 트리 장식을 했습니다. 아이들이 너무 좋아해서 아침에 일어나면 항상 크리스마스 트리 불빛부터 켜라고 합니다.</p><p><img src="IMG_0366.jpg" alt=""> <img src="IMG_0367.jpg" alt=""> <img src="IMG_0368.jpg" alt=""> <img src="IMG_0376.jpg" alt=""> </p><iframe width="560" height="315" src="https://www.youtube.com/embed/ETRMVRX7i_4" frameborder="0" allowfullscreen></iframe><p>시국이 시국인지라 광화문에도 몇번 나갔고요.</p><p><img src="IMG_0404.jpg" alt=""> <img src="IMG_0409.jpg" alt=""> <img src="IMG_0411.jpg" alt=""> </p><p>래원이는 독감으로 또 입원 ㅠ_ㅠ. 손에 주사 맞을때 애가 울지도 않아 간호사 선생님이 용감하다고 칭찬 해 주니 나중에 퇴원하고 집에 와서도 “래원이는 주사 맞을때도 안 울었지!” 를 한 100번은 자랑했던 것 같습니다.</p><p><img src="IMG_0461.jpg" alt=""> <img src="IMG_0464.jpg" alt=""> <img src="IMG_0468.jpg" alt=""> <img src="IMG_0475.jpg" alt=""> <img src="IMG_0473.jpg" alt=""> </p><p>그리고 크리스마스 이브에는 삼촌 숙모 소원이네 모여 저녁을 먹었는데, 할아버지가 산타 복장을 하고 오셔서 손자 손녀들에게 선물 나눠주시고 다시 얼른 나가 산타복 벗고 들어오셨습니다.</p><p><img src="IMG_0675.jpg" alt=""> <img src="IMG_0688.jpg" alt=""> <img src="IMG_0694.jpg" alt=""> <img src="IMG_0678.jpg" alt=""> <img src="IMG_0679.jpg" alt=""> </p><p><img src="IMG_0681.jpg" alt=""> <img src="IMG_0686.jpg" alt=""> <img src="IMG_0689.jpg" alt=""> <img src="IMG_0692.jpg" alt=""> <img src="IMG_0684.jpg" alt=""> </p><h3 id="맺음말"><a href="#맺음말" class="headerlink" title="맺음말"></a>맺음말</h3><p>올해 한번 돌아보려고 정리 블로그 시작했는데 사진만 붙이는데도 시간이 꽤 걸렸네요.; 올 한해도 어떻게 갔는지도 모르겠는데, 돌아보면 많은 일이 있었고 즐거운 기억도 많았던 한 해였던 것 같습니다. 내년을 더 기대 하면서 다시 또 새로운 마음으로 한 해를 시작할 준비를 해야겠습니다.</p><p>그럼 모두들 새해 복 많이 받으세요. :)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2016년이 저물어 갑니다. 항상 이맘때 쯤이면 모두들 지나간 한 해를 정리하고 새로운 한 해를 맞이하는 계획을 세우곤 하는데, 저도 올 한해를 정리하는 마지막 포스팅을 하려고 합니다. IT 업계에 있으면서 자기계발, 커뮤니티 활동 등을 더 열심
      
    
    </summary>
    
      <category term="Life" scheme="http://kimjmin.net/categories/Life/"/>
    
    
      <category term="Life" scheme="http://kimjmin.net/tags/Life/"/>
    
  </entry>
  
</feed>
